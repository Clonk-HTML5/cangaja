{
    "project": {
        "name": "Cangaja API",
        "description": "Canvas Game JavaScript Framework",
        "version": "0.0.0",
        "url": "http://example.com/"
    },
    "files": {
        "cangaja/base/base.js": {
            "name": "cangaja/base/base.js",
            "modules": {
                "CG": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "cangaja/base/bitmap.js": {
            "name": "cangaja/base/bitmap.js",
            "modules": {},
            "classes": {
                "CG.Bitmap": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/base/bound.js": {
            "name": "cangaja/base/bound.js",
            "modules": {},
            "classes": {
                "CG.Bound": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/base/buffer.js": {
            "name": "cangaja/base/buffer.js",
            "modules": {},
            "classes": {
                "CG.Buffer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/base/clock.js": {
            "name": "cangaja/base/clock.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "cangaja/base/delta.js": {
            "name": "cangaja/base/delta.js",
            "modules": {},
            "classes": {
                "CG.Delta": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/base/entity.js": {
            "name": "cangaja/base/entity.js",
            "modules": {},
            "classes": {
                "CG.Entity": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/base/intro.js": {
            "name": "cangaja/base/intro.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "cangaja/base/point.js": {
            "name": "cangaja/base/point.js",
            "modules": {},
            "classes": {
                "CG.Point": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/base/rectangle.js": {
            "name": "cangaja/base/rectangle.js",
            "modules": {},
            "classes": {
                "CG.Rectangle": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/base/string.js": {
            "name": "cangaja/base/string.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "cangaja/base/vector.js": {
            "name": "cangaja/base/vector.js",
            "modules": {},
            "classes": {
                "CG.Vector": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/box2d/b2d-bridge.js": {
            "name": "cangaja/box2d/b2d-bridge.js",
            "modules": {},
            "classes": {
                "CG.B2DBridge": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/box2d/b2d-chainshape.js": {
            "name": "cangaja/box2d/b2d-chainshape.js",
            "modules": {},
            "classes": {
                "CG.B2DChainShape": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/box2d/b2d-circle.js": {
            "name": "cangaja/box2d/b2d-circle.js",
            "modules": {},
            "classes": {
                "CG.B2DCirlce": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/box2d/b2d-entity.js": {
            "name": "cangaja/box2d/b2d-entity.js",
            "modules": {},
            "classes": {
                "CG.B2DEntity": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/box2d/b2d-line.js": {
            "name": "cangaja/box2d/b2d-line.js",
            "modules": {},
            "classes": {
                "CG.B2DLine": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/box2d/b2d-polygon.js": {
            "name": "cangaja/box2d/b2d-polygon.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "cangaja/box2d/b2d-rectangle.js": {
            "name": "cangaja/box2d/b2d-rectangle.js",
            "modules": {},
            "classes": {
                "CG.B2DRectangle": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/box2d/b2d-rope.js": {
            "name": "cangaja/box2d/b2d-rope.js",
            "modules": {},
            "classes": {
                "CG.B2DRope": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/box2d/b2d-terrain.js": {
            "name": "cangaja/box2d/b2d-terrain.js",
            "modules": {},
            "classes": {
                "CG.B2DPolygon": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/box2d/b2d-world.js": {
            "name": "cangaja/box2d/b2d-world.js",
            "modules": {},
            "classes": {
                "CG.B2DWorld": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/control/director.js": {
            "name": "cangaja/control/director.js",
            "modules": {},
            "classes": {
                "CG.Director": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/control/emitter.js": {
            "name": "cangaja/control/emitter.js",
            "modules": {},
            "classes": {
                "CG.Emitter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/control/layer.js": {
            "name": "cangaja/control/layer.js",
            "modules": {},
            "classes": {
                "CG.Layer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/control/mediaasset.js": {
            "name": "cangaja/control/mediaasset.js",
            "modules": {},
            "classes": {
                "CG.MediaAsset": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/control/menu.js": {
            "name": "cangaja/control/menu.js",
            "modules": {},
            "classes": {
                "CG.Menu": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/control/morph.js": {
            "name": "cangaja/control/morph.js",
            "modules": {},
            "classes": {
                "CG.Morph": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/control/screen.js": {
            "name": "cangaja/control/screen.js",
            "modules": {},
            "classes": {
                "CG.Screen": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/control/sequence.js": {
            "name": "cangaja/control/sequence.js",
            "modules": {},
            "classes": {
                "CG.Sequence": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/control/translate.js": {
            "name": "cangaja/control/translate.js",
            "modules": {},
            "classes": {
                "CG.Translate": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/lib-ext/box2dhtml5/b2DebugDraw.js": {
            "name": "cangaja/lib-ext/box2dhtml5/b2DebugDraw.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "cangaja/lib-ext/chipmunk.js": {
            "name": "cangaja/lib-ext/chipmunk.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "cangaja/lib-ext/clipper.js": {
            "name": "cangaja/lib-ext/clipper.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "cangaja/lib-ext/clipper.min.js": {
            "name": "cangaja/lib-ext/clipper.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "cangaja/lib-ext/hammer.js": {
            "name": "cangaja/lib-ext/hammer.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "cangaja/lib-ext/howler.js": {
            "name": "cangaja/lib-ext/howler.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "cangaja/lib-ext/poly2tri.js": {
            "name": "cangaja/lib-ext/poly2tri.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "cangaja/lib-ext/require.js": {
            "name": "cangaja/lib-ext/require.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "cangaja/lib-ext/spine.js": {
            "name": "cangaja/lib-ext/spine.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "cangaja/renderer/renderer.js": {
            "name": "cangaja/renderer/renderer.js",
            "modules": {},
            "classes": {
                "CG.CanvasRenderer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/sprite/animation.js": {
            "name": "cangaja/sprite/animation.js",
            "modules": {},
            "classes": {
                "CG.Animation": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/sprite/button.js": {
            "name": "cangaja/sprite/button.js",
            "modules": {},
            "classes": {
                "CG.Button": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/sprite/particle.js": {
            "name": "cangaja/sprite/particle.js",
            "modules": {},
            "classes": {
                "CG.Particle": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/sprite/sprite.js": {
            "name": "cangaja/sprite/sprite.js",
            "modules": {},
            "classes": {
                "CG.Sprite": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/text/font.js": {
            "name": "cangaja/text/font.js",
            "modules": {},
            "classes": {
                "CG.Font": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/text/text.js": {
            "name": "cangaja/text/text.js",
            "modules": {},
            "classes": {
                "CG.Text": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/texturepacker/texturepacker.js": {
            "name": "cangaja/texturepacker/texturepacker.js",
            "modules": {},
            "classes": {
                "CG.TexturePacker": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/texturepacker/tpimage.js": {
            "name": "cangaja/texturepacker/tpimage.js",
            "modules": {},
            "classes": {
                "CG.TPImage": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/tilemap/map.js": {
            "name": "cangaja/tilemap/map.js",
            "modules": {},
            "classes": {
                "CG.Map": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/tilemap/maparea.js": {
            "name": "cangaja/tilemap/maparea.js",
            "modules": {},
            "classes": {
                "CG.MapArea": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/tilemap/mappoint.js": {
            "name": "cangaja/tilemap/mappoint.js",
            "modules": {},
            "classes": {
                "CG.MapPoint": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/tilemap/maptilelayer.js": {
            "name": "cangaja/tilemap/maptilelayer.js",
            "modules": {},
            "classes": {
                "CG.MapTileLayer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/tilemap/maptileproperties.js": {
            "name": "cangaja/tilemap/maptileproperties.js",
            "modules": {},
            "classes": {
                "CG.MapTileProperties": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "CG": {
            "name": "CG",
            "submodules": {},
            "classes": {
                "CG.Bitmap": 1,
                "CG.Bound": 1,
                "CG.Buffer": 1,
                "CG.Delta": 1,
                "CG.Entity": 1,
                "CG.Point": 1,
                "CG.Rectangle": 1,
                "CG.Vector": 1,
                "CG.B2DBridge": 1,
                "CG.B2DChainShape": 1,
                "CG.B2DCirlce": 1,
                "CG.B2DEntity": 1,
                "CG.B2DLine": 1,
                "CG.B2DPolygon": 1,
                "CG.B2DRectangle": 1,
                "CG.B2DRope": 1,
                "CG.B2DWorld": 1,
                "CG.Director": 1,
                "CG.Emitter": 1,
                "CG.Layer": 1,
                "CG.MediaAsset": 1,
                "CG.Menu": 1,
                "CG.Morph": 1,
                "CG.Screen": 1,
                "CG.Sequence": 1,
                "CG.Translate": 1,
                "CG.CanvasRenderer": 1,
                "CG.Animation": 1,
                "CG.Button": 1,
                "CG.Particle": 1,
                "CG.Sprite": 1,
                "CG.Font": 1,
                "CG.Text": 1,
                "CG.TexturePacker": 1,
                "CG.TPImage": 1,
                "CG.Map": 1,
                "CG.MapArea": 1,
                "CG.MapPoint": 1,
                "CG.MapTileLayer": 1,
                "CG.MapTileProperties": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "cangaja/tilemap/maptileproperties.js",
            "line": 1,
            "description": "CG is the base class of the cangaja framework.\nThis file includes a requestAnimationFrame polyfill. It uses the simple javascript inheritance from John Resig.",
            "example": [
                "\n//Class example, how to start from scratch with simple inheritance\nCG.Class.extend(\"Entity\",{\n       init: function(){\n           this.myprop = 'set from constructor'\n       }\n    });\n\nCG.Entity.extend(\"Point\",{\n       init: function(x, y){\n           this._super()\n           this.x = x\n           this.y = y\n       }\n    });\n\nCG.Point.extend(\"Rectangle\",{\n       init: function(x, y, w, h){\n           this._super(x, y)\n           this.w = w\n           this.h = h\n       },\n       move: function(){\n\n       }\n    });"
            ],
            "itemtype": "main"
        }
    },
    "classes": {
        "CG.Bitmap": {
            "name": "CG.Bitmap",
            "shortname": "CG.Bitmap",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/base/bitmap.js",
            "line": 1,
            "description": "CG.Bitmap is a simple bitmap class with basic features for bitmap manipulation at the moment.",
            "extends": "CG.Entity"
        },
        "CG.Bound": {
            "name": "CG.Bound",
            "shortname": "CG.Bound",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/base/bound.js",
            "line": 1,
            "description": "CG.Bound is used at different places in the Cangaja FW.",
            "extends": "CG.Entity"
        },
        "CG.Buffer": {
            "name": "CG.Buffer",
            "shortname": "CG.Buffer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/base/buffer.js",
            "line": 1,
            "description": "CG.Buffer for separate canvas rendering/buffering",
            "extends": "CG.Entity"
        },
        "CG.Delta": {
            "name": "CG.Delta",
            "shortname": "CG.Delta",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/base/delta.js",
            "line": 1,
            "description": "CG.Delta not really used at the moment ;o)",
            "extends": "Class"
        },
        "CG.Entity": {
            "name": "CG.Entity",
            "shortname": "CG.Entity",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/base/entity.js",
            "line": 7,
            "description": "CG.Entity the base class of Cangaja",
            "extends": "CG.Class"
        },
        "CG.Point": {
            "name": "CG.Point",
            "shortname": "CG.Point",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/base/point.js",
            "line": 1,
            "description": "CG.Point",
            "extends": "CG.Entity"
        },
        "CG.Rectangle": {
            "name": "CG.Rectangle",
            "shortname": "CG.Rectangle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/base/rectangle.js",
            "line": 1,
            "description": "CG.Rectangle for click and mouseover handling, collision detection and AABB function",
            "extends": "CG.Entity"
        },
        "CG.Vector": {
            "name": "CG.Vector",
            "shortname": "CG.Vector",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/base/vector.js",
            "line": 1,
            "description": "CG.Vector",
            "extends": "CG.Point"
        },
        "CG.B2DBridge": {
            "name": "CG.B2DBridge",
            "shortname": "CG.B2DBridge",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/box2d/b2d-bridge.js",
            "line": 7,
            "description": "B2DBridge is a simple wrapper that creates a bridge with segments.\nJust play with the params to get a good result.",
            "extends": "CG.B2DEntity"
        },
        "CG.B2DChainShape": {
            "name": "CG.B2DChainShape",
            "shortname": "CG.B2DChainShape",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/box2d/b2d-chainshape.js",
            "line": 7,
            "description": "B2DChainShape",
            "extends": "CG.B2DEntity"
        },
        "CG.B2DCirlce": {
            "name": "CG.B2DCirlce",
            "shortname": "CG.B2DCirlce",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/box2d/b2d-circle.js",
            "line": 7,
            "description": "B2DCircle is a simple b2CircleShape wrapper element with basic physics properties.",
            "extends": "CG.B2DEntity"
        },
        "CG.B2DEntity": {
            "name": "CG.B2DEntity",
            "shortname": "CG.B2DEntity",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 7,
            "description": "B2DEntity is the base class with properties for all B2D objects.\nThis class handles also the drawings for all classes.",
            "extends": "CG.Entity"
        },
        "CG.B2DLine": {
            "name": "CG.B2DLine",
            "shortname": "CG.B2DLine",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/box2d/b2d-line.js",
            "line": 7,
            "description": "B2DLine is a simple b2PolygonShape wrapper. There is no visible drawing\nnow in the canvas for now. It can be used to build walls, ground,. ,.",
            "extends": "CG.B2DEntity"
        },
        "CG.B2DPolygon": {
            "name": "CG.B2DPolygon",
            "shortname": "CG.B2DPolygon",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/box2d/b2d-terrain.js",
            "line": 7,
            "description": "B2DTerrain",
            "extends": "CG.B2DEntity"
        },
        "CG.B2DRectangle": {
            "name": "CG.B2DRectangle",
            "shortname": "CG.B2DRectangle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/box2d/b2d-rectangle.js",
            "line": 7,
            "description": "B2DRectangle is a simple b2PolygonShape wrapper element with basic physics properties.",
            "extends": "CG.B2DEntity"
        },
        "CG.B2DRope": {
            "name": "CG.B2DRope",
            "shortname": "CG.B2DRope",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/box2d/b2d-rope.js",
            "line": 7,
            "description": "B2DRope is a simple wrapper that creates a rope with segments.\nJust play with the params to get a good result.",
            "extends": "CG.B2DEntity"
        },
        "CG.B2DWorld": {
            "name": "CG.B2DWorld",
            "shortname": "CG.B2DWorld",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/box2d/b2d-world.js",
            "line": 7,
            "description": "B2DWorld is a Box2dWeb wrapper with basic and easy methods for creating Box2d Objects like\nlines, circles, rectangles, polybodies, ropes and bridges. Custom B2D Objects that extends\none of the basic B2D objects can added to the B2DWorld with the addCustom method.\nThe CG.B2DWorld can attached to an CG.Screen object as layer. The B2DWorld will handle\nall physics and drawings.",
            "xtend": "CG.Layer"
        },
        "CG.Director": {
            "name": "CG.Director",
            "shortname": "CG.Director",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/control/director.js",
            "line": 1,
            "description": "CG.Director the top instance for CG.Screens, CG.Layers, CG.Sprites and so on in the control hierarchy.\nIts main purpose is to collect CG.Screens under its hood and support some basic screen fading features.",
            "example": [
                "\n//create top level CG.Director object\nvar director = new CG.Director()\n\n//create a CG.Screen\nvar mainscreen = new CG.Screen('mainscreen')\n\n//create a CG.Layer\nvar mainlayer = new CG.Layer('mainlayer')\n\n//create a demo CG.Sprite\nvar demosprite = new CG.Sprite(Game.asset.getImageByName('spritegfx'), new CG.Point(400, 240))\n\n//add/attach the demo sprite to the layer\nmainlayer.addElement(back)\n\n//add/attach mainscreen and mainlayer to the director\ndirector.addScreen(mainscreen.addLayer(mainlayer))"
            ],
            "extends": "Class"
        },
        "CG.Emitter": {
            "name": "CG.Emitter",
            "shortname": "CG.Emitter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/control/emitter.js",
            "line": 1,
            "description": "CG.Emitter that handles . . . particles.",
            "extends": "CG.Entity",
            "params": [
                {
                    "name": "position",
                    "description": "of emitter",
                    "type": "Point"
                }
            ]
        },
        "CG.Layer": {
            "name": "CG.Layer",
            "shortname": "CG.Layer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/control/layer.js",
            "line": 1,
            "description": "CG.Layer is a child of CG.Screen and a container to collect/group sprites, buttons, menus, emitters and animations",
            "extends": "CG.Entity"
        },
        "CG.MediaAsset": {
            "name": "CG.MediaAsset",
            "shortname": "CG.MediaAsset",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/control/mediaasset.js",
            "line": 1,
            "description": "CG.MediaAsset preloader.",
            "extends": "Class"
        },
        "CG.Menu": {
            "name": "CG.Menu",
            "shortname": "CG.Menu",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/control/menu.js",
            "line": 1,
            "description": "CG.Menu",
            "extends": "CG.Entity"
        },
        "CG.Morph": {
            "name": "CG.Morph",
            "shortname": "CG.Morph",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/control/morph.js",
            "line": 1,
            "description": "CG.Morph to manipulate objects in size and so on",
            "extends": "CG.Entity"
        },
        "CG.Screen": {
            "name": "CG.Screen",
            "shortname": "CG.Screen",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/control/screen.js",
            "line": 1,
            "description": "CG.Screen is a child of CG.Director and a container to collect/group CG.Layers and/or CG.B2DWorld",
            "extends": "CG.Entity",
            "params": [
                {
                    "name": "screenname",
                    "description": "the name of the screen",
                    "type": "String"
                }
            ]
        },
        "CG.Sequence": {
            "name": "CG.Sequence",
            "shortname": "CG.Sequence",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/control/sequence.js",
            "line": 1,
            "description": "CG.Sequence container to collect/group CG.Translation objects",
            "extends": "Entity"
        },
        "CG.Translate": {
            "name": "CG.Translate",
            "shortname": "CG.Translate",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/control/translate.js",
            "line": 1,
            "description": "CG.Translate moving a object",
            "extends": "CG.Entity"
        },
        "CG.CanvasRenderer": {
            "name": "CG.CanvasRenderer",
            "shortname": "CG.CanvasRenderer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/renderer/renderer.js",
            "line": 1,
            "description": "A CanvasRenderer with WebGL and Canvas 2D fallback would be really nice ;o)\nHow to implement all the different classes....?",
            "extends": "CG.Class"
        },
        "CG.Animation": {
            "name": "CG.Animation",
            "shortname": "CG.Animation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/sprite/animation.js",
            "line": 1,
            "description": "CG.Animation extends CG.Sprite and add support for animations ;o) It needs atlas files with fixed framesizes and with following animation frames.\nFor example you can use Timeline FX generated graphics.",
            "extends": "CG.Sprite"
        },
        "CG.Button": {
            "name": "CG.Button",
            "shortname": "CG.Button",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/sprite/button.js",
            "line": 1,
            "description": "CG.Button represents a simple button class that can handle click, mouseover and callback functionality.",
            "extends": "CG.Sprite"
        },
        "CG.Particle": {
            "name": "CG.Particle",
            "shortname": "CG.Particle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/sprite/particle.js",
            "line": 1,
            "description": "CG.Particle",
            "extends": "CG.Sprite"
        },
        "CG.Sprite": {
            "name": "CG.Sprite",
            "shortname": "CG.Sprite",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/sprite/sprite.js",
            "line": 1,
            "description": "CG.Sprite",
            "extends": "CG.Rectangle"
        },
        "CG.Font": {
            "name": "CG.Font",
            "shortname": "CG.Font",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/text/font.js",
            "line": 1,
            "description": "CG.Font supports loading and drawing font files (EZ GUI Text format) from Glyph Designer,\n(Hiero works also but need some modifications of the exported files)",
            "example": [
                "\n//create font object\nsmall = new CG.Font().loadFont(Game.asset.getFontByName('small'))\n\n//draw text to canvas\nsmall.drawText('Foo bar!', xpos, ypos)"
            ],
            "extends": "CG.Entity"
        },
        "CG.Text": {
            "name": "CG.Text",
            "shortname": "CG.Text",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/text/text.js",
            "line": 1,
            "description": "Future plans:\nCG.Text => support for different text drawing modes like textblock, text alignment, text ticker or scroller.",
            "extends": "CG.Entity"
        },
        "CG.TexturePacker": {
            "name": "CG.TexturePacker",
            "shortname": "CG.TexturePacker",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/texturepacker/texturepacker.js",
            "line": 1,
            "description": "CG.TexturePacker class supports loading xml and json files from . . . TexturePacker ;o)\nNo trimming at the moment, keep texturepacker settings simple! TexturePacker parses the xml/json and generates new CG.TPImage objects in the MediaAsset manager.\nThese TPImages are only handled within Sprite, Particle and Button class.",
            "extends": "Class"
        },
        "CG.TPImage": {
            "name": "CG.TPImage",
            "shortname": "CG.TPImage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/texturepacker/tpimage.js",
            "line": 1,
            "description": "CG.TPImage class. It is needed when using TexturePacker atlas files.",
            "extends": "Class"
        },
        "CG.Map": {
            "name": "CG.Map",
            "shortname": "CG.Map",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/tilemap/map.js",
            "line": 1,
            "description": "CG.Map supports loading and rendering maps from the editor Tiled.\nXML and JSON file types are supported.\nXML => supported tiled encodings are csv and xml (see settings!). base64, base64(gzip) and base64(zlib) are not supported!\n\nSupported types of the object layer are:\n- object/group (rectangle?)\n- tile element, reference point is bottom/CG.LEFT\n\nThese object layer types are used to generate Point and Bound objects and can be used to position sprites, what ever in the map.",
            "extends": "CG.Entity\n\nTODO spacing and margin ?\nTODO own buffer for drawing => split screen possible?\nTODO update & draw method 50%"
        },
        "CG.MapArea": {
            "name": "CG.MapArea",
            "shortname": "CG.MapArea",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/tilemap/maparea.js",
            "line": 1,
            "description": "CG.MapArea. Support now for name and the bound values.",
            "extends": "CG.Class"
        },
        "CG.MapPoint": {
            "name": "CG.MapPoint",
            "shortname": "CG.MapPoint",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/tilemap/mappoint.js",
            "line": 1,
            "description": "CG.MapPoint. Support now for name, gid and x/y-position values. No tilemap properties at the moment.",
            "extends": "CG.Class"
        },
        "CG.MapTileLayer": {
            "name": "CG.MapTileLayer",
            "shortname": "CG.MapTileLayer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/tilemap/maptilelayer.js",
            "line": 1,
            "description": "CG.MapTileLayer",
            "extends": "Class"
        },
        "CG.MapTileProperties": {
            "name": "CG.MapTileProperties",
            "shortname": "CG.MapTileProperties",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/tilemap/maptileproperties.js",
            "line": 1,
            "description": "CG.MapTileProperties",
            "extends": "Class"
        }
    },
    "classitems": [
        {
            "file": "cangaja/base/bitmap.js",
            "line": 16,
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "params": [
                {
                    "name": "width",
                    "description": "width the width for the buffer",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "height the height for the buffer",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.Bitmap",
            "module": "CG"
        },
        {
            "file": "cangaja/base/bitmap.js",
            "line": 33,
            "description": "Loads an image and draws it to the buffer",
            "itemtype": "method",
            "name": "loadImage",
            "params": [
                {
                    "name": "imgpath,",
                    "description": "image object or tpimage object to use",
                    "type": "String, image, tpimage"
                }
            ],
            "class": "CG.Bitmap",
            "module": "CG"
        },
        {
            "file": "cangaja/base/bitmap.js",
            "line": 57,
            "itemtype": "method",
            "name": "clearBuffer",
            "class": "CG.Bitmap",
            "module": "CG"
        },
        {
            "file": "cangaja/base/bitmap.js",
            "line": 65,
            "itemtype": "method",
            "name": "drawImageToBuffer",
            "class": "CG.Bitmap",
            "module": "CG"
        },
        {
            "file": "cangaja/base/bitmap.js",
            "line": 74,
            "itemtype": "method",
            "name": "clearRect",
            "params": [
                {
                    "name": "x",
                    "description": "the x position for clearRect",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "the y position for clearRect",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "the width for clearRect",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "the height for clearRect",
                    "type": "Number"
                }
            ],
            "class": "CG.Bitmap",
            "module": "CG"
        },
        {
            "file": "cangaja/base/bitmap.js",
            "line": 89,
            "itemtype": "method",
            "name": "clearCircle",
            "params": [
                {
                    "name": "x",
                    "description": "the x position for clearCircle",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "the y position for clearCircle",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "the radius for clearCircle",
                    "type": "Number"
                }
            ],
            "class": "CG.Bitmap",
            "module": "CG"
        },
        {
            "file": "cangaja/base/bitmap.js",
            "line": 106,
            "itemtype": "method",
            "name": "getPixel",
            "params": [
                {
                    "name": "x",
                    "description": "the x position for getPixel",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "the y position for getPixel",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "data from canvas",
                "type": "Imagedata"
            },
            "class": "CG.Bitmap",
            "module": "CG"
        },
        {
            "file": "cangaja/base/bitmap.js",
            "line": 117,
            "itemtype": "method",
            "name": "getPixels",
            "params": [
                {
                    "name": "x",
                    "description": "the x position for getPixels",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "the y position for getPixels",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "for getPixels",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "for getPixels",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "data from canvas",
                "type": "Imagedata"
            },
            "class": "CG.Bitmap",
            "module": "CG"
        },
        {
            "file": "cangaja/base/bound.js",
            "line": 11,
            "is_constructor": 1,
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "x",
                    "description": "x the x position",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "y the y position",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "width the width of bound",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "height the height of bound",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.Bound",
            "module": "CG"
        },
        {
            "file": "cangaja/base/bound.js",
            "line": 22,
            "itemtype": "property",
            "name": "x",
            "type": "{Number}",
            "class": "CG.Bound",
            "module": "CG"
        },
        {
            "file": "cangaja/base/bound.js",
            "line": 27,
            "itemtype": "property",
            "name": "y",
            "type": "{Number}",
            "class": "CG.Bound",
            "module": "CG"
        },
        {
            "file": "cangaja/base/bound.js",
            "line": 32,
            "itemtype": "property",
            "name": "width",
            "type": "{Number}",
            "class": "CG.Bound",
            "module": "CG"
        },
        {
            "file": "cangaja/base/bound.js",
            "line": 37,
            "itemtype": "property",
            "name": "height",
            "type": "{Number}",
            "class": "CG.Bound",
            "module": "CG"
        },
        {
            "file": "cangaja/base/bound.js",
            "line": 45,
            "itemtype": "method",
            "name": "setName",
            "params": [
                {
                    "name": "name",
                    "description": "of the bounding box",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.Bound",
            "module": "CG"
        },
        {
            "file": "cangaja/base/buffer.js",
            "line": 11,
            "is_constructor": 1,
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "width",
                    "description": "width of the buffer",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "height of the buffer",
                    "type": "Number"
                },
                {
                    "name": "buffername",
                    "description": "buffername",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.Buffer",
            "module": "CG"
        },
        {
            "file": "cangaja/base/buffer.js",
            "line": 21,
            "itemtype": "property",
            "name": "b_canvas",
            "type": "{HTMLElement}",
            "class": "CG.Buffer",
            "module": "CG"
        },
        {
            "file": "cangaja/base/buffer.js",
            "line": 31,
            "itemtype": "property",
            "name": "b_canvas.width",
            "type": "{*}",
            "class": "CG.Buffer",
            "module": "CG"
        },
        {
            "file": "cangaja/base/buffer.js",
            "line": 36,
            "itemtype": "property",
            "name": "b_canvas.height",
            "type": "{*}",
            "class": "CG.Buffer",
            "module": "CG"
        },
        {
            "file": "cangaja/base/buffer.js",
            "line": 43,
            "itemtype": "property",
            "name": "b_ctx",
            "type": "{CanvasRenderingContext2D}",
            "class": "CG.Buffer",
            "module": "CG"
        },
        {
            "file": "cangaja/base/clock.js",
            "line": 1,
            "description": "Created with JetBrains WebStorm.\nUser: Apple\nDate: 23.07.13\nTime: 22:43\nTo change this template use File | Settings | File Templates.",
            "class": "CG.Delta",
            "module": "CG"
        },
        {
            "file": "cangaja/base/clock.js",
            "line": 12,
            "description": "millisecond value returned by Date.now(). Will always",
            "class": "CG.Delta",
            "module": "CG"
        },
        {
            "file": "cangaja/base/clock.js",
            "line": 17,
            "description": "the number of milliseconds between the epoch (January 1, 1970)",
            "class": "CG.Delta",
            "module": "CG"
        },
        {
            "file": "cangaja/base/clock.js",
            "line": 24,
            "class": "CG.Delta",
            "module": "CG"
        },
        {
            "file": "cangaja/base/clock.js",
            "line": 29,
            "class": "CG.Delta",
            "module": "CG"
        },
        {
            "file": "cangaja/base/clock.js",
            "line": 33,
            "class": "CG.Delta",
            "module": "CG"
        },
        {
            "file": "cangaja/base/clock.js",
            "line": 37,
            "class": "CG.Delta",
            "module": "CG"
        },
        {
            "file": "cangaja/base/clock.js",
            "line": 41,
            "class": "CG.Delta",
            "module": "CG"
        },
        {
            "file": "cangaja/base/clock.js",
            "line": 45,
            "description": "The tick() method updates ALL the Clock members, which should only\nbe read from and never written to manually. It is recommended that\ntick() is called from a callback loop using requestAnimationFrame\n\nLearn more: http://paulirish.com/2011/requestanimationframe-for-smart-animating/",
            "class": "CG.Delta",
            "module": "CG"
        },
        {
            "file": "cangaja/base/clock.js",
            "line": 53,
            "class": "CG.Delta",
            "module": "CG"
        },
        {
            "file": "cangaja/base/clock.js",
            "line": 57,
            "class": "CG.Delta",
            "module": "CG"
        },
        {
            "file": "cangaja/base/clock.js",
            "line": 60,
            "class": "CG.Delta",
            "module": "CG"
        },
        {
            "file": "cangaja/base/clock.js",
            "line": 65,
            "class": "CG.Delta",
            "module": "CG"
        },
        {
            "file": "cangaja/base/clock.js",
            "line": 71,
            "class": "CG.Delta",
            "module": "CG"
        },
        {
            "file": "cangaja/base/delta.js",
            "line": 13,
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "params": [
                {
                    "name": "fps",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "CG.Delta",
            "module": "CG"
        },
        {
            "file": "cangaja/base/delta.js",
            "line": 19,
            "itemtype": "property",
            "name": "targetfps",
            "type": "{Number}",
            "class": "CG.Delta",
            "module": "CG"
        },
        {
            "file": "cangaja/base/delta.js",
            "line": 24,
            "itemtype": "property",
            "name": "currenttime",
            "type": "{Number}",
            "class": "CG.Delta",
            "module": "CG"
        },
        {
            "file": "cangaja/base/delta.js",
            "line": 29,
            "itemtype": "property",
            "name": "lasttime",
            "type": "{Number}",
            "class": "CG.Delta",
            "module": "CG"
        },
        {
            "file": "cangaja/base/delta.js",
            "line": 34,
            "itemtype": "property",
            "name": "elapsedtime",
            "type": "{Number}",
            "class": "CG.Delta",
            "module": "CG"
        },
        {
            "file": "cangaja/base/delta.js",
            "line": 39,
            "itemtype": "property",
            "name": "frametime",
            "type": "{Number}",
            "class": "CG.Delta",
            "module": "CG"
        },
        {
            "file": "cangaja/base/delta.js",
            "line": 44,
            "itemtype": "property",
            "name": "delta",
            "type": "{Number}",
            "class": "CG.Delta",
            "module": "CG"
        },
        {
            "file": "cangaja/base/delta.js",
            "line": 49,
            "itemtype": "property",
            "name": "fps",
            "type": "{Number}",
            "class": "CG.Delta",
            "module": "CG"
        },
        {
            "file": "cangaja/base/entity.js",
            "line": 1,
            "description": "© 2012 by Christian Sonntag <info@motions-media.de>\nsimple experimental Canvas Game JavaScript Framework",
            "class": "CG.Entity",
            "module": "CG"
        },
        {
            "file": "cangaja/base/entity.js",
            "line": 17,
            "is_constructor": 1,
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "name",
                    "description": "the name of the Entity",
                    "type": "String"
                }
            ],
            "class": "CG.Entity",
            "module": "CG"
        },
        {
            "file": "cangaja/base/entity.js",
            "line": 23,
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "class": "CG.Entity",
            "module": "CG"
        },
        {
            "file": "cangaja/base/entity.js",
            "line": 27,
            "itemtype": "property",
            "name": "visible",
            "type": "Boolean",
            "class": "CG.Entity",
            "module": "CG"
        },
        {
            "file": "cangaja/base/entity.js",
            "line": 44,
            "description": "initialize image for object. for now => sprite, particle, buffer, bitmap and button use it",
            "itemtype": "method",
            "name": "setImage",
            "params": [
                {
                    "name": "image",
                    "description": "image path, image or tpimage",
                    "type": "Image"
                }
            ],
            "class": "CG.Entity",
            "module": "CG"
        },
        {
            "file": "cangaja/base/intro.js",
            "line": 1,
            "description": "© 2013 by Christian Sonntag <info@motions-media.de>\nsimple experimental Canvas Game JavaScript Framework\n\nhttps://www.github.com/samowitsch/cangaja/\n\nIncludes:\nhammer.js\nbuzz.js\nBox2Html5.js",
            "class": "CG.Point",
            "module": "CG"
        },
        {
            "file": "cangaja/base/point.js",
            "line": 10,
            "is_constructor": 1,
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "x",
                    "description": "the x value of the point",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "the y value of the point",
                    "type": "Number"
                }
            ],
            "class": "CG.Point",
            "module": "CG"
        },
        {
            "file": "cangaja/base/point.js",
            "line": 17,
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "class": "CG.Point",
            "module": "CG"
        },
        {
            "file": "cangaja/base/point.js",
            "line": 21,
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "class": "CG.Point",
            "module": "CG"
        },
        {
            "file": "cangaja/base/rectangle.js",
            "line": 11,
            "is_constructor": 1,
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "position",
                    "description": "position point",
                    "type": "CG.Point"
                },
                {
                    "name": "width",
                    "description": "width the width of rectangle",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "height the height of rectangle",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.Rectangle",
            "module": "CG"
        },
        {
            "file": "cangaja/base/rectangle.js",
            "line": 20,
            "itemtype": "property",
            "name": "position",
            "type": "CG.Point",
            "class": "CG.Rectangle",
            "module": "CG"
        },
        {
            "file": "cangaja/base/rectangle.js",
            "line": 24,
            "itemtype": "property",
            "name": "width",
            "type": "Number",
            "class": "CG.Rectangle",
            "module": "CG"
        },
        {
            "file": "cangaja/base/rectangle.js",
            "line": 28,
            "itemtype": "property",
            "name": "height",
            "type": "Number",
            "class": "CG.Rectangle",
            "module": "CG"
        },
        {
            "file": "cangaja/base/rectangle.js",
            "line": 32,
            "itemtype": "property",
            "name": "clickable",
            "type": "Boolean",
            "class": "CG.Rectangle",
            "module": "CG"
        },
        {
            "file": "cangaja/base/rectangle.js",
            "line": 36,
            "itemtype": "property",
            "name": "dragable",
            "type": "Boolean",
            "class": "CG.Rectangle",
            "module": "CG"
        },
        {
            "file": "cangaja/base/rectangle.js",
            "line": 40,
            "itemtype": "property",
            "name": "rotation",
            "type": "Number",
            "class": "CG.Rectangle",
            "module": "CG"
        },
        {
            "file": "cangaja/base/rectangle.js",
            "line": 44,
            "itemtype": "property",
            "name": "xscale",
            "type": "Number",
            "class": "CG.Rectangle",
            "module": "CG"
        },
        {
            "file": "cangaja/base/rectangle.js",
            "line": 48,
            "itemtype": "property",
            "name": "yscale",
            "type": "Number",
            "class": "CG.Rectangle",
            "module": "CG"
        },
        {
            "file": "cangaja/base/rectangle.js",
            "line": 52,
            "itemtype": "property",
            "name": "clicked",
            "type": "Boolean",
            "class": "CG.Rectangle",
            "module": "CG"
        },
        {
            "file": "cangaja/base/rectangle.js",
            "line": 56,
            "itemtype": "property",
            "name": "hover",
            "type": "Boolean",
            "class": "CG.Rectangle",
            "module": "CG"
        },
        {
            "file": "cangaja/base/rectangle.js",
            "line": 61,
            "itemtype": "property",
            "name": "boundingradius",
            "type": "Number",
            "class": "CG.Rectangle",
            "module": "CG"
        },
        {
            "file": "cangaja/base/rectangle.js",
            "line": 65,
            "itemtype": "property",
            "name": "mapcollision",
            "type": "Boolean",
            "class": "CG.Rectangle",
            "module": "CG"
        },
        {
            "file": "cangaja/base/rectangle.js",
            "line": 72,
            "description": "returns the bounds of rotated rectangle",
            "itemtype": "method",
            "name": "AABB",
            "return": {
                "description": "returns the calculated bounds",
                "type": "Object"
            },
            "class": "CG.Rectangle",
            "module": "CG"
        },
        {
            "file": "cangaja/base/rectangle.js",
            "line": 89,
            "description": "checks click inside of the rectangle, supports rotation",
            "itemtype": "method",
            "name": "ifClicked",
            "return": {
                "description": "",
                "type": "True/false"
            },
            "class": "CG.Rectangle",
            "module": "CG"
        },
        {
            "file": "cangaja/base/rectangle.js",
            "line": 113,
            "description": "checks if the mouse/pointer is over the rectangle",
            "itemtype": "method",
            "name": "ifMouseOver",
            "class": "CG.Rectangle",
            "module": "CG"
        },
        {
            "file": "cangaja/base/rectangle.js",
            "line": 134,
            "description": "checks if there is a collision of the given objects to this object http://devmag.org.za/2009/04/13/basic-collision-detection-in-2d-part-1/",
            "itemtype": "method",
            "name": "checkCollision",
            "params": [
                {
                    "name": "objects",
                    "description": "a array of objects to check for collision => Sprites, Animations, MapAreas",
                    "type": "Array"
                },
                {
                    "name": "callback",
                    "description": "what to do after collision?",
                    "type": "Callback"
                }
            ],
            "class": "CG.Rectangle",
            "module": "CG"
        },
        {
            "file": "cangaja/base/string.js",
            "line": 1,
            "description": "string functions",
            "class": "CG.Vector",
            "module": "CG"
        },
        {
            "file": "cangaja/base/vector.js",
            "line": 10,
            "is_constructor": 1,
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "x",
                    "description": "the x position",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "the y position",
                    "type": "Number"
                },
                {
                    "name": "z",
                    "description": "the z position",
                    "type": "Number"
                }
            ],
            "class": "CG.Vector",
            "module": "CG"
        },
        {
            "file": "cangaja/base/vector.js",
            "line": 19,
            "itemtype": "property",
            "name": "z",
            "type": "Number",
            "class": "CG.Vector",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-bridge.js",
            "line": 1,
            "description": "© 2012 by Christian Sonntag <info@motions-media.de>\nsimple experimental Canvas Game JavaScript Framework",
            "class": "CG.B2DBridge",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-bridge.js",
            "line": 18,
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "params": [
                {
                    "name": "world",
                    "description": "reference to world of B2DWorld",
                    "type": "Object"
                },
                {
                    "name": "name",
                    "description": "id or name to identify",
                    "type": "String"
                },
                {
                    "name": "image",
                    "description": "path to image, image or tpimage from asset",
                    "type": "Mixed"
                },
                {
                    "name": "x",
                    "description": "the x position",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "the y position",
                    "type": "Number"
                },
                {
                    "name": "length",
                    "description": "the length/width of the bridge",
                    "type": "Number"
                },
                {
                    "name": "segments",
                    "description": "segments of the bridge",
                    "type": "Number"
                },
                {
                    "name": "segmentHeight",
                    "description": "height of a segment",
                    "type": "Number"
                },
                {
                    "name": "scale",
                    "description": "the world scale of B2DWorld",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.B2DBridge",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-bridge.js",
            "line": 34,
            "itemtype": "property",
            "name": "length",
            "type": "{Number}",
            "class": "CG.B2DBridge",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-bridge.js",
            "line": 39,
            "itemtype": "property",
            "name": "segments",
            "type": "{Number}",
            "class": "CG.B2DBridge",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-bridge.js",
            "line": 44,
            "itemtype": "property",
            "name": "segmentHeight",
            "type": "{Number}",
            "class": "CG.B2DBridge",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-bridge.js",
            "line": 49,
            "itemtype": "property",
            "name": "segmentWidth",
            "type": "{Number}",
            "class": "CG.B2DBridge",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-bridge.js",
            "line": 54,
            "itemtype": "property",
            "name": "anchor",
            "type": "{b2Vec2}",
            "class": "CG.B2DBridge",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-bridge.js",
            "line": 59,
            "itemtype": "property",
            "name": "prevBodf",
            "type": "{Object}",
            "class": "CG.B2DBridge",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-bridge.js",
            "line": 64,
            "itemtype": "property",
            "name": "bodyGroup",
            "type": "{Array}",
            "class": "CG.B2DBridge",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-bridge.js",
            "line": 69,
            "itemtype": "property",
            "name": "bodyCount",
            "type": "{Number}",
            "class": "CG.B2DBridge",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-chainshape.js",
            "line": 1,
            "description": "© 2012 by Christian Sonntag <info@motions-media.de>\nsimple experimental Canvas Game JavaScript Framework",
            "class": "CG.B2DChainShape",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-chainshape.js",
            "line": 17,
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "params": [
                {
                    "name": "world",
                    "description": "reference to world of B2DWorld",
                    "type": "Object"
                },
                {
                    "name": "name",
                    "description": "id or name to identify",
                    "type": "String"
                },
                {
                    "name": "vertices",
                    "description": "vertices for chainshape CG.Point array",
                    "type": "Array"
                },
                {
                    "name": "x",
                    "description": "the x position",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "the y position",
                    "type": "Number"
                },
                {
                    "name": "scale",
                    "description": "the world scale of B2DWorld",
                    "type": "Number"
                },
                {
                    "name": "b2BodyType",
                    "description": "Box2D bodytype constant",
                    "type": "box2d.b2BodyType"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.B2DChainShape",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-chainshape.js",
            "line": 31,
            "itemtype": "property",
            "name": "polys",
            "type": "{Array}",
            "class": "CG.B2DChainShape",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-chainshape.js",
            "line": 36,
            "itemtype": "property",
            "name": "xhandle",
            "type": "{Number}",
            "class": "CG.B2DChainShape",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-chainshape.js",
            "line": 41,
            "itemtype": "property",
            "name": "yhandle",
            "type": "{Number}",
            "class": "CG.B2DChainShape",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-chainshape.js",
            "line": 46,
            "itemtype": "property",
            "name": "bodyDef.type",
            "type": "{box2d.b2BodyType.b2_staticBody/box2d.b2BodyType.b2_dynamicBody/box2d.b2BodyType.b2_kinematicBody/box2d.b2BodyType.b2_bulletBody}",
            "class": "CG.B2DChainShape",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-chainshape.js",
            "line": 51,
            "itemtype": "property",
            "name": "bodyDef.position",
            "class": "CG.B2DChainShape",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-chainshape.js",
            "line": 55,
            "itemtype": "property",
            "name": "bodyDef.userData",
            "type": "{*}",
            "class": "CG.B2DChainShape",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-chainshape.js",
            "line": 60,
            "itemtype": "property",
            "name": "body",
            "type": "{b2Body}",
            "class": "CG.B2DChainShape",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-chainshape.js",
            "line": 64,
            "itemtype": "property",
            "name": "fixDef.shape",
            "type": "{b2CircleShape}",
            "class": "CG.B2DChainShape",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-chainshape.js",
            "line": 71,
            "itemtype": "property",
            "name": "body",
            "type": "{b2Body}",
            "class": "CG.B2DChainShape",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-chainshape.js",
            "line": 81,
            "description": "convertRealWorldPointToBox2DVec2 converts real world vectors to box2d world vecs depending on scale",
            "itemtype": "method",
            "name": "convertRealWorldPointToBox2DVec2",
            "params": [
                {
                    "name": "vertices",
                    "description": "CG.Point array",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "vecs b2Vec2  with box2d world scale",
                "type": "Array"
            },
            "class": "CG.B2DChainShape",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-circle.js",
            "line": 1,
            "description": "© 2012 by Christian Sonntag <info@motions-media.de>\nsimple experimental Canvas Game JavaScript Framework",
            "class": "CG.B2DCirlce",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-circle.js",
            "line": 17,
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "params": [
                {
                    "name": "world",
                    "description": "reference to world of B2DWorld",
                    "type": "Object"
                },
                {
                    "name": "name",
                    "description": "id or name to identify",
                    "type": "String"
                },
                {
                    "name": "image",
                    "description": "path to image, image or tpimage from asset",
                    "type": "Mixed"
                },
                {
                    "name": "radius",
                    "description": "json file from PhysicsEditor from asset",
                    "type": "Number"
                },
                {
                    "name": "x",
                    "description": "the x position",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "the y position",
                    "type": "Number"
                },
                {
                    "name": "scale",
                    "description": "the world scale of B2DWorld",
                    "type": "Number"
                },
                {
                    "name": "b2BodyType",
                    "description": "Box2D bodytype constant",
                    "type": "box2d.b2BodyType"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.B2DCirlce",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-circle.js",
            "line": 32,
            "itemtype": "property",
            "name": "radius",
            "type": "{Number}",
            "class": "CG.B2DCirlce",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-circle.js",
            "line": 37,
            "itemtype": "property",
            "name": "bodyDef.type",
            "type": "{box2d.b2BodyType.b2_staticBody/box2d.b2BodyType.b2_dynamicBody/box2d.b2BodyType.b2_kinematicBody/box2d.b2BodyType.b2_bulletBody}",
            "class": "CG.B2DCirlce",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-circle.js",
            "line": 43,
            "itemtype": "property",
            "name": "bodyDef.position.x",
            "type": "{Number}",
            "class": "CG.B2DCirlce",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-circle.js",
            "line": 48,
            "itemtype": "property",
            "name": "bodyDef.position.y",
            "type": "{Number}",
            "class": "CG.B2DCirlce",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-circle.js",
            "line": 53,
            "itemtype": "property",
            "name": "bdyDef.userData",
            "type": "{*}",
            "class": "CG.B2DCirlce",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-circle.js",
            "line": 58,
            "itemtype": "property",
            "name": "fixDef.shape",
            "type": "{b2CircleShape}",
            "class": "CG.B2DCirlce",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-circle.js",
            "line": 64,
            "itemtype": "property",
            "name": "body",
            "type": "{b2Body}",
            "class": "CG.B2DCirlce",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 1,
            "description": "© 2012 by Christian Sonntag <info@motions-media.de>\nsimple experimental Canvas Game JavaScript Framework",
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 18,
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "params": [
                {
                    "name": "name",
                    "description": "id or name to identify",
                    "type": "String"
                },
                {
                    "name": "image",
                    "description": "path to image, image or tpimage from asset",
                    "type": "Mixed"
                },
                {
                    "name": "world",
                    "description": "reference to world of B2DWorld",
                    "type": "Object"
                },
                {
                    "name": "x",
                    "description": "the x position",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "the y position",
                    "type": "Number"
                },
                {
                    "name": "scale",
                    "description": "the world scale of B2DWorld",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 33,
            "itemtype": "property",
            "name": "body",
            "type": "{b2Body}",
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 38,
            "itemtype": "property",
            "name": "x",
            "type": "{Number}",
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 43,
            "itemtype": "property",
            "name": "y",
            "type": "{Number}",
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 48,
            "itemtype": "property",
            "name": "scale",
            "type": "{Number}",
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 53,
            "itemtype": "property",
            "name": "id",
            "type": "{Object}",
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 58,
            "itemtype": "property",
            "name": "world",
            "type": "{b2World}",
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 63,
            "itemtype": "property",
            "name": "xhandle",
            "type": "{Number}",
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 68,
            "itemtype": "property",
            "name": "yhandle",
            "type": "{Number}",
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 74,
            "itemtype": "property",
            "name": "bodyDef",
            "type": "{b2BodyDef}",
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 79,
            "itemtype": "property",
            "name": "bodyDef.alowSleep",
            "type": "{Boolean}",
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 84,
            "itemtype": "property",
            "name": "bodyDef.awake",
            "type": "{Boolean}",
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 92,
            "itemtype": "property",
            "name": "fixDef",
            "type": "{b2FixtureDef}",
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 97,
            "itemtype": "property",
            "name": "fixDef.density",
            "type": "{Number}",
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 102,
            "itemtype": "property",
            "name": "fixDef.friction",
            "type": "{Number}",
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 107,
            "itemtype": "property",
            "name": "fixDef.restitution",
            "type": "{Number}",
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 113,
            "itemtype": "property",
            "name": "isHit",
            "type": "{Boolean}",
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 118,
            "itemtype": "property",
            "name": "strength",
            "type": "{Number}",
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 123,
            "itemtype": "property",
            "name": "dead",
            "type": "{Boolean}",
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 131,
            "itemtype": "method",
            "name": "hit",
            "params": [
                {
                    "name": "impulse",
                    "description": ""
                },
                {
                    "name": "source",
                    "description": ""
                }
            ],
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-line.js",
            "line": 1,
            "description": "© 2012 by Christian Sonntag <info@motions-media.de>\nsimple experimental Canvas Game JavaScript Framework",
            "class": "CG.B2DLine",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-line.js",
            "line": 18,
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "params": [
                {
                    "name": "world",
                    "description": "reference to world of B2DWorld",
                    "type": "Object"
                },
                {
                    "name": "name",
                    "description": "id or name to identify",
                    "type": "String"
                },
                {
                    "name": "start",
                    "description": "start of line",
                    "type": "B2Vec2"
                },
                {
                    "name": "end",
                    "description": "end of line",
                    "type": "B2Vec2"
                },
                {
                    "name": "scale",
                    "description": "the world scale of B2DWorld",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.B2DLine",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-line.js",
            "line": 30,
            "itemtype": "property",
            "name": "start",
            "type": "{b2Vec2}",
            "class": "CG.B2DLine",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-line.js",
            "line": 35,
            "itemtype": "property",
            "name": "end",
            "type": "{b2Vec2}",
            "class": "CG.B2DLine",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-line.js",
            "line": 40,
            "itemtype": "property",
            "name": "xhandle",
            "type": "{Number}",
            "class": "CG.B2DLine",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-line.js",
            "line": 45,
            "itemtype": "property",
            "name": "yhandle",
            "type": "{Number}",
            "class": "CG.B2DLine",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-line.js",
            "line": 50,
            "itemtype": "property",
            "name": "fixDef.shape",
            "type": "{b2PolygonShape}",
            "class": "CG.B2DLine",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-line.js",
            "line": 56,
            "itemtype": "property",
            "name": "bodyDef.type",
            "type": "{Number}",
            "class": "CG.B2DLine",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-line.js",
            "line": 61,
            "itemtype": "property",
            "name": "bodyDef.position",
            "class": "CG.B2DLine",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-line.js",
            "line": 65,
            "itemtype": "property",
            "name": "bodyDef.userData",
            "type": "{*}",
            "class": "CG.B2DLine",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-line.js",
            "line": 70,
            "itemtype": "property",
            "name": "body",
            "type": "{b2Body}",
            "class": "CG.B2DLine",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-polygon.js",
            "line": 1,
            "description": "© 2012 by Christian Sonntag <info@motions-media.de>\nsimple experimental Canvas Game JavaScript Framework",
            "class": "CG.B2DPolygon",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-polygon.js",
            "line": 19,
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "params": [
                {
                    "name": "world",
                    "description": "reference to world of B2DWorld",
                    "type": "Object"
                },
                {
                    "name": "name",
                    "description": "id or name to identify",
                    "type": "String"
                },
                {
                    "name": "image",
                    "description": "path to image, image or tpimage from asset",
                    "type": "Mixed"
                },
                {
                    "name": "jsonpoly",
                    "description": "json file from PhysicsEditor from asset",
                    "type": "String"
                },
                {
                    "name": "x",
                    "description": "the x position",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "the y position",
                    "type": "Number"
                },
                {
                    "name": "scale",
                    "description": "the world scale of B2DWorld",
                    "type": "Number"
                },
                {
                    "name": "b2BodyType",
                    "description": "Box2D bodytype constant",
                    "type": "box2d.b2BodyType"
                },
                {
                    "name": "bullet",
                    "description": "bullet option",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.B2DPolygon",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-polygon.js",
            "line": 35,
            "itemtype": "property",
            "name": "polys",
            "type": "{Array}",
            "class": "CG.B2DPolygon",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-polygon.js",
            "line": 40,
            "itemtype": "property",
            "name": "jsondata",
            "type": "{*}",
            "class": "CG.B2DPolygon",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-polygon.js",
            "line": 46,
            "itemtype": "property",
            "name": "xhandle",
            "type": "{Number}",
            "class": "CG.B2DPolygon",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-polygon.js",
            "line": 51,
            "itemtype": "property",
            "name": "yhandle",
            "type": "{Number}",
            "class": "CG.B2DPolygon",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-polygon.js",
            "line": 56,
            "itemtype": "property",
            "name": "vecs",
            "type": "{Array}",
            "class": "CG.B2DPolygon",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-polygon.js",
            "line": 63,
            "itemtype": "property",
            "name": "bodyDef.type",
            "type": "{box2d.b2BodyType.b2_staticBody/box2d.b2BodyType.b2_dynamicBody/box2d.b2BodyType.b2_kinematicBody/box2d.b2BodyType.b2_bulletBody}",
            "class": "CG.B2DPolygon",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-polygon.js",
            "line": 69,
            "itemtype": "property",
            "name": "bodyDef.position",
            "class": "CG.B2DPolygon",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-polygon.js",
            "line": 73,
            "itemtype": "property",
            "name": "bodyDef.userData",
            "type": "{*}",
            "class": "CG.B2DPolygon",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-polygon.js",
            "line": 78,
            "itemtype": "property",
            "name": "bullet",
            "type": "{*}",
            "class": "CG.B2DPolygon",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-polygon.js",
            "line": 83,
            "itemtype": "property",
            "name": "bodyDef.bullet",
            "type": "{*}",
            "class": "CG.B2DPolygon",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-polygon.js",
            "line": 93,
            "itemtype": "property",
            "name": "body",
            "type": "{b2Body}",
            "class": "CG.B2DPolygon",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-polygon.js",
            "line": 114,
            "description": "extract the polygons out of the PhysicsEditor json file and collect them into an array",
            "itemtype": "method",
            "name": "getPolysFromJson",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "CG.B2DPolygon",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-rectangle.js",
            "line": 1,
            "description": "© 2012 by Christian Sonntag <info@motions-media.de>\nsimple experimental Canvas Game JavaScript Framework",
            "class": "CG.B2DRectangle",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-rectangle.js",
            "line": 17,
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "params": [
                {
                    "name": "world",
                    "description": "reference to world of B2DWorld",
                    "type": "Object"
                },
                {
                    "name": "name",
                    "description": "id or name to identify",
                    "type": "String"
                },
                {
                    "name": "image",
                    "description": "path to image, image or tpimage from asset",
                    "type": "Mixed"
                },
                {
                    "name": "x",
                    "description": "the x position",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "the y position",
                    "type": "Number"
                },
                {
                    "name": "scale",
                    "description": "the world scale of B2DWorld",
                    "type": "Number"
                },
                {
                    "name": "b2BodyType",
                    "description": "Box2D bodytype constant",
                    "type": "box2d.b2BodyType"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.B2DRectangle",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-rectangle.js",
            "line": 32,
            "itemtype": "property",
            "name": "bodyDef.stat",
            "type": "{box2d.b2BodyType.b2_staticBody/box2d.b2BodyType.b2_dynamicBody/box2d.b2BodyType.b2_kinematicBody/box2d.b2BodyType.b2_bulletBody}",
            "class": "CG.B2DRectangle",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-rectangle.js",
            "line": 38,
            "itemtype": "property",
            "name": "fixDef.shape",
            "type": "{b2PolygonShape}",
            "class": "CG.B2DRectangle",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-rectangle.js",
            "line": 44,
            "itemtype": "property",
            "name": "bodyDef.position.x",
            "type": "{Number}",
            "class": "CG.B2DRectangle",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-rectangle.js",
            "line": 49,
            "itemtype": "property",
            "name": "bodyDef.position.y",
            "type": "{Number}",
            "class": "CG.B2DRectangle",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-rectangle.js",
            "line": 54,
            "itemtype": "property",
            "name": "bodyDef.userData",
            "type": "{*}",
            "class": "CG.B2DRectangle",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-rectangle.js",
            "line": 59,
            "itemtype": "property",
            "name": "body",
            "type": "{b2Body}",
            "class": "CG.B2DRectangle",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-rope.js",
            "line": 1,
            "description": "© 2012 by Christian Sonntag <info@motions-media.de>\nsimple experimental Canvas Game JavaScript Framework",
            "class": "CG.B2DRope",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-rope.js",
            "line": 18,
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "params": [
                {
                    "name": "world",
                    "description": "reference to world of B2DWorld",
                    "type": "Object"
                },
                {
                    "name": "name",
                    "description": "id or name to identify",
                    "type": "String"
                },
                {
                    "name": "image",
                    "description": "path to image, image or tpimage from asset",
                    "type": "Mixed"
                },
                {
                    "name": "x",
                    "description": "the x position",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "the y position",
                    "type": "Number"
                },
                {
                    "name": "length",
                    "description": "the length/width of the bridge",
                    "type": "Number"
                },
                {
                    "name": "segments",
                    "description": "segments of the bridge",
                    "type": "Number"
                },
                {
                    "name": "segmentWidth",
                    "description": "width of a segment",
                    "type": "Number"
                },
                {
                    "name": "scale",
                    "description": "the world scale of B2DWorld",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.B2DRope",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-rope.js",
            "line": 34,
            "itemtype": "property",
            "name": "length",
            "type": "{Number}",
            "class": "CG.B2DRope",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-rope.js",
            "line": 39,
            "itemtype": "property",
            "name": "segments",
            "type": "{Number}",
            "class": "CG.B2DRope",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-rope.js",
            "line": 44,
            "itemtype": "property",
            "name": "segmentHeight",
            "type": "{Number}",
            "class": "CG.B2DRope",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-rope.js",
            "line": 49,
            "itemtype": "property",
            "name": "segmentWidth",
            "type": "{*}",
            "class": "CG.B2DRope",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-rope.js",
            "line": 54,
            "itemtype": "property",
            "name": "anchor",
            "type": "{b2Vec2}",
            "class": "CG.B2DRope",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-rope.js",
            "line": 59,
            "itemtype": "property",
            "name": "prevBody",
            "type": "{Object}",
            "class": "CG.B2DRope",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-rope.js",
            "line": 64,
            "itemtype": "property",
            "name": "bodyGroup",
            "type": "{Array}",
            "class": "CG.B2DRope",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-rope.js",
            "line": 69,
            "itemtype": "property",
            "name": "bodyCount",
            "type": "{Number}",
            "class": "CG.B2DRope",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-terrain.js",
            "line": 1,
            "description": "© 2012 by Christian Sonntag <info@motions-media.de>\nsimple experimental Canvas Game JavaScript Framework",
            "class": "CG.B2DPolygon",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-terrain.js",
            "line": 21,
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "params": [
                {
                    "name": "world",
                    "description": "reference to world of B2DWorld",
                    "type": "Object"
                },
                {
                    "name": "name",
                    "description": "id or name to identify",
                    "type": "String"
                },
                {
                    "name": "image",
                    "description": "path to image, image or tpimage from asset",
                    "type": "Mixed"
                },
                {
                    "name": "terrainPoly",
                    "description": "array of vertices to start terrain building",
                    "type": "Array"
                },
                {
                    "name": "x",
                    "description": "the x position",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "the y position",
                    "type": "Number"
                },
                {
                    "name": "scale",
                    "description": "the world scale of B2DWorld",
                    "type": "Number"
                },
                {
                    "name": "b2BodyType",
                    "description": "Box2D bodytype constant",
                    "type": "box2d.b2BodyType"
                },
                {
                    "name": "bullet",
                    "description": "bullet option",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.B2DPolygon",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-terrain.js",
            "line": 37,
            "itemtype": "property",
            "name": "polys",
            "type": "{Array}",
            "class": "CG.B2DPolygon",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-terrain.js",
            "line": 42,
            "itemtype": "property",
            "name": "terrainpoly",
            "type": "{*}",
            "class": "CG.B2DPolygon",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-terrain.js",
            "line": 50,
            "itemtype": "property",
            "name": "holes",
            "type": "{Array}",
            "class": "CG.B2DPolygon",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-terrain.js",
            "line": 55,
            "itemtype": "property",
            "name": "xhandle",
            "type": "{Number}",
            "class": "CG.B2DPolygon",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-terrain.js",
            "line": 60,
            "itemtype": "property",
            "name": "yhandle",
            "type": "{Number}",
            "class": "CG.B2DPolygon",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-terrain.js",
            "line": 66,
            "itemtype": "property",
            "name": "bodyDef.type",
            "type": "{box2d.b2BodyType.b2_staticBody/box2d.b2BodyType.b2_dynamicBody/box2d.b2BodyType.b2_kinematicBody/box2d.b2BodyType.b2_bulletBody}",
            "class": "CG.B2DPolygon",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-terrain.js",
            "line": 71,
            "itemtype": "property",
            "name": "bodyDef.position",
            "class": "CG.B2DPolygon",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-terrain.js",
            "line": 75,
            "itemtype": "property",
            "name": "bodyDef.userData",
            "type": "{*}",
            "class": "CG.B2DPolygon",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-terrain.js",
            "line": 80,
            "itemtype": "property",
            "name": "bullet",
            "type": "{*}",
            "class": "CG.B2DPolygon",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-terrain.js",
            "line": 85,
            "itemtype": "property",
            "name": "bodyDef.bullet",
            "type": "{*}",
            "class": "CG.B2DPolygon",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-terrain.js",
            "line": 92,
            "itemtype": "property",
            "name": "body",
            "type": "{b2Body}",
            "class": "CG.B2DPolygon",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-terrain.js",
            "line": 181,
            "description": "this method uses the Clipper Lighten mehtod to reduces vertices for better triangulation",
            "itemtype": "method",
            "name": "lightenTerrain",
            "class": "CG.B2DPolygon",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-terrain.js",
            "line": 200,
            "description": "experimental not working yet",
            "class": "CG.B2DPolygon",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-terrain.js",
            "line": 218,
            "description": "extract the triangles out of poly2tri array",
            "itemtype": "method",
            "name": "getPolysFromJson",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "CG.B2DPolygon",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-terrain.js",
            "line": 232,
            "description": "creates a ccw wise circle vertices array for clipping",
            "itemtype": "method",
            "name": "createCircle",
            "params": [
                {
                    "name": "opts",
                    "description": "example {points: 16, radius: 30, x: 320, y: 240}",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "CG.B2DPolygon",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 1,
            "description": "© 2012 by Christian Sonntag <info@motions-media.de>\nsimple experimental Canvas Game JavaScript Framework",
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 21,
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "params": [
                {
                    "name": "name",
                    "description": "name of the b2dworld",
                    "type": "String"
                },
                {
                    "name": "opt",
                    "description": "additional options",
                    "type": "Object"
                }
            ],
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 31,
            "itemtype": "property",
            "name": "opt",
            "type": "{object}",
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 37,
            "itemtype": "property",
            "name": "name",
            "type": "{String}",
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 42,
            "itemtype": "property",
            "name": "debug",
            "type": "{Boolean}",
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 47,
            "itemtype": "property",
            "name": "x",
            "type": "{Number}",
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 52,
            "itemtype": "property",
            "name": "y",
            "type": "{Number}",
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 57,
            "itemtype": "property",
            "name": "elements",
            "type": "{Array}",
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 63,
            "itemtype": "property",
            "name": "world",
            "type": "{b2World}",
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 71,
            "itemtype": "property",
            "name": "uid",
            "type": "{Number}",
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 76,
            "itemtype": "property",
            "name": "scale",
            "type": "{Number}",
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 82,
            "description": "add m_groundBody for use with b2MouseJoint",
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 135,
            "description": "Custom extended objects can be added to the B2DWork with this method.",
            "itemtype": "method",
            "name": "addCustom",
            "params": [
                {
                    "name": "obj",
                    "description": "object    custom B2D object"
                }
            ],
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 148,
            "description": "createBox creates a basic Box2D rectangle with some default settings.",
            "itemtype": "method",
            "name": "createBox",
            "params": [
                {
                    "name": "id",
                    "description": "id or name to identify",
                    "type": "String"
                },
                {
                    "name": "image",
                    "description": "path to image, image or tpimage from asset",
                    "type": "Mixed"
                },
                {
                    "name": "x",
                    "description": "the x position",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "the y position",
                    "type": "Number"
                },
                {
                    "name": "stat",
                    "description": "is the body static or dynamic",
                    "type": "Boolean"
                }
            ],
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 167,
            "description": "createLine creates a basic Box2D line with some default settings.",
            "itemtype": "method",
            "name": "createLine",
            "params": [
                {
                    "name": "id",
                    "description": "id or name to identify",
                    "type": "String"
                },
                {
                    "name": "start",
                    "description": "start o fline",
                    "type": "CG.Point"
                },
                {
                    "name": "end",
                    "description": "end of line",
                    "type": "CG.Point"
                }
            ],
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 184,
            "description": "createCircle creates a basic Box2D circle with some default settings",
            "itemtype": "method",
            "name": "createCircle",
            "params": [
                {
                    "name": "id",
                    "description": "id or name to identify",
                    "type": "String"
                },
                {
                    "name": "image",
                    "description": "path to image, image or tpimage from asset",
                    "type": "Mixed"
                },
                {
                    "name": "radius",
                    "description": "the radius",
                    "type": "Number"
                },
                {
                    "name": "x",
                    "description": "the x position",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "the y position",
                    "type": "Number"
                },
                {
                    "name": "stat",
                    "description": "is the body static or dynamic",
                    "type": "Boolean"
                }
            ],
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 204,
            "description": "createPolyBody creates a Box2D polybody. A PhysicsEditor json (Lime + Corona JSON Exporter) file is needed for this\nBox2D object. The polygonshape and some settings like density, bounce and friction are\ntaken from the json file at the moment.",
            "itemtype": "method",
            "name": "createPolyBody",
            "params": [
                {
                    "name": "id",
                    "description": "id or name to identify",
                    "type": "String"
                },
                {
                    "name": "image",
                    "description": "path to image, image or tpimage from asset",
                    "type": "Mixed"
                },
                {
                    "name": "jsonpoly",
                    "description": "json file from PhysicsEditor from asset",
                    "type": "String"
                },
                {
                    "name": "x",
                    "description": "the x position",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "the y position",
                    "type": "Number"
                },
                {
                    "name": "stat",
                    "description": "is the body static or dynamic",
                    "type": "Boolean"
                },
                {
                    "name": "bullet",
                    "description": "bullet option",
                    "type": "Boolean"
                }
            ],
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 227,
            "description": "createTerrain",
            "itemtype": "method",
            "name": "createPolyBody",
            "params": [
                {
                    "name": "id",
                    "description": "id or name to identify",
                    "type": "String"
                },
                {
                    "name": "image",
                    "description": "path to image, image or tpimage from asset",
                    "type": "Mixed"
                },
                {
                    "name": "terrainpoly",
                    "description": "array of vertices to start terrain building",
                    "type": "Array"
                },
                {
                    "name": "x",
                    "description": "the x position",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "the y position",
                    "type": "Number"
                },
                {
                    "name": "stat",
                    "description": "is the body static or dynamic",
                    "type": "Boolean"
                },
                {
                    "name": "bullet",
                    "description": "bullet option",
                    "type": "Boolean"
                }
            ],
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 248,
            "description": "createChainShape",
            "itemtype": "method",
            "name": "createChainShape",
            "params": [
                {
                    "name": "id",
                    "description": "id or name to identify",
                    "type": "String"
                },
                {
                    "name": "vertices",
                    "description": "vertices for chainshape CG.Point array",
                    "type": "Array"
                },
                {
                    "name": "x",
                    "description": "the x position",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "the y position",
                    "type": "Number"
                }
            ],
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 266,
            "description": "This method creates a B2D bridge. Just play with the params to get a good result!",
            "itemtype": "method",
            "name": "createBridge",
            "params": [
                {
                    "name": "id",
                    "description": "id or name to identify",
                    "type": "String"
                },
                {
                    "name": "image",
                    "description": "path to image, image or tpimage from asset",
                    "type": "Mixed"
                },
                {
                    "name": "x",
                    "description": "the x position",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "the y position",
                    "type": "Number"
                },
                {
                    "name": "length",
                    "description": "the length/width of the bridge",
                    "type": "Number"
                },
                {
                    "name": "segments",
                    "description": "segments of the bridge",
                    "type": "Number"
                },
                {
                    "name": "segmentHeight",
                    "description": "height of a segment",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 288,
            "description": "This method creates a B2D rope. Just play with the params to get a good result!",
            "itemtype": "method",
            "name": "createRope",
            "params": [
                {
                    "name": "id",
                    "description": "id or name to identify",
                    "type": "String"
                },
                {
                    "name": "image",
                    "description": "path to image, image or tpimage from asset",
                    "type": "Mixed"
                },
                {
                    "name": "x",
                    "description": "the x position",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "the y position",
                    "type": "Number"
                },
                {
                    "name": "length",
                    "description": "the length/width of the bridge",
                    "type": "Number"
                },
                {
                    "name": "segments",
                    "description": "segments of the bridge",
                    "type": "Number"
                },
                {
                    "name": "segmentHeight",
                    "description": "height of a segment",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 310,
            "description": "Enables dragging B2D objects with the mouse.",
            "itemtype": "method",
            "name": "mouseDownAt",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 337,
            "itemtype": "method",
            "name": "mouseUp",
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 344,
            "description": "Get a B2D body at the give x, y position.",
            "itemtype": "method",
            "name": "getBodyAt",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 377,
            "description": "Deletes a B2D body at the given x, y position",
            "itemtype": "method",
            "name": "deleteBodyAt",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "(Number)"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 401,
            "itemtype": "method",
            "name": "isMouseDown",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 408,
            "itemtype": "method",
            "name": "removeElementByIndex",
            "params": [
                {
                    "name": "index",
                    "description": ""
                }
            ],
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 415,
            "itemtype": "method",
            "name": "removeElementByUid",
            "params": [
                {
                    "name": "uid",
                    "description": ""
                }
            ],
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 428,
            "itemtype": "method",
            "name": "applyImpulse",
            "params": [
                {
                    "name": "body",
                    "description": ""
                },
                {
                    "name": "degrees",
                    "description": ""
                },
                {
                    "name": "power",
                    "description": ""
                }
            ],
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 441,
            "itemtype": "method",
            "name": "addContactListener",
            "params": [
                {
                    "name": "callbacks",
                    "description": ""
                }
            ],
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 465,
            "itemtype": "method",
            "name": "getBodySpec",
            "params": [
                {
                    "name": "b",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/control/director.js",
            "line": 29,
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.Director",
            "module": "CG"
        },
        {
            "file": "cangaja/control/director.js",
            "line": 35,
            "itemtype": "property",
            "name": "screens",
            "type": "{Array}",
            "class": "CG.Director",
            "module": "CG"
        },
        {
            "file": "cangaja/control/director.js",
            "line": 40,
            "itemtype": "property",
            "name": "activescreen",
            "type": "{Number}",
            "class": "CG.Director",
            "module": "CG"
        },
        {
            "file": "cangaja/control/director.js",
            "line": 45,
            "description": "nextscreen",
            "type": "{Number}",
            "class": "CG.Director",
            "module": "CG"
        },
        {
            "file": "cangaja/control/director.js",
            "line": 50,
            "itemtype": "property",
            "name": "duration",
            "type": "{Number}",
            "class": "CG.Director",
            "module": "CG"
        },
        {
            "file": "cangaja/control/director.js",
            "line": 55,
            "itemtype": "property",
            "name": "stepx",
            "type": "{number}",
            "class": "CG.Director",
            "module": "CG"
        },
        {
            "file": "cangaja/control/director.js",
            "line": 60,
            "itemtype": "property",
            "name": "stepy",
            "type": "{number}",
            "class": "CG.Director",
            "module": "CG"
        },
        {
            "file": "cangaja/control/director.js",
            "line": 65,
            "description": "alpha",
            "type": "{Number}",
            "class": "CG.Director",
            "module": "CG"
        },
        {
            "file": "cangaja/control/director.js",
            "line": 70,
            "description": "mode",
            "type": "{String}",
            "class": "CG.Director",
            "module": "CG"
        },
        {
            "file": "cangaja/control/director.js",
            "line": 75,
            "description": "direction",
            "type": "{String}",
            "class": "CG.Director",
            "module": "CG"
        },
        {
            "file": "cangaja/control/director.js",
            "line": 80,
            "itemtype": "property",
            "name": "color",
            "type": "{String}",
            "class": "CG.Director",
            "module": "CG"
        },
        {
            "file": "cangaja/control/director.js",
            "line": 188,
            "itemtype": "method",
            "name": "nextScreen",
            "example": [
                "\n    //tell the director class to fade to next screen with scale mode\n    Game.director.nextScreen('gamescreen', 'scale', 10);\n\n    //tell the director class to fade to next screen\n    Game.director.nextScreen('settingsscreen', 'fade', 10);"
            ],
            "params": [
                {
                    "name": "screenname",
                    "description": "to define nextscreen for fading",
                    "type": "String"
                },
                {
                    "name": "mode",
                    "description": "mode for transition",
                    "type": "String"
                },
                {
                    "name": "duration",
                    "description": "the duration for fading",
                    "type": "Number"
                }
            ],
            "class": "CG.Director",
            "module": "CG"
        },
        {
            "file": "cangaja/control/director.js",
            "line": 241,
            "itemtype": "method",
            "name": "addScreen",
            "params": [
                {
                    "name": "screen",
                    "description": "to add to the screen list",
                    "type": "CG.Screen"
                }
            ],
            "class": "CG.Director",
            "module": "CG"
        },
        {
            "file": "cangaja/control/director.js",
            "line": 250,
            "itemtype": "method",
            "name": "getScreenByName",
            "params": [
                {
                    "name": "screenname",
                    "description": "to find screen by name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "returns false or the screen object",
                "type": "false/CG.Screen"
            },
            "class": "CG.Director",
            "module": "CG"
        },
        {
            "file": "cangaja/control/director.js",
            "line": 265,
            "itemtype": "method",
            "name": "getIndexOfScreen",
            "params": [
                {
                    "name": "screenname",
                    "description": "to find index of screen in screen array",
                    "type": "String"
                }
            ],
            "return": {
                "description": "return false or index number of the screen",
                "type": "False/Number"
            },
            "class": "CG.Director",
            "module": "CG"
        },
        {
            "file": "cangaja/control/director.js",
            "line": 280,
            "itemtype": "method",
            "name": "getActiveScreenName",
            "return": {
                "description": "the name of the active screen",
                "type": "String"
            },
            "class": "CG.Director",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 12,
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "params": [
                {
                    "name": "position",
                    "description": "",
                    "type": "CG.Point"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 20,
            "itemtype": "property",
            "name": "particle",
            "type": "{Array}",
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 25,
            "itemtype": "property",
            "name": "maxparticles",
            "type": "{Number}",
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 30,
            "itemtype": "property",
            "name": "creationtime",
            "type": "{Number}",
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 35,
            "itemtype": "property",
            "name": "currenttime",
            "type": "{Number}",
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 40,
            "itemtype": "property",
            "name": "creationspeed",
            "type": "{Number}",
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 45,
            "itemtype": "property",
            "name": "gravity",
            "type": "{Number}",
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 50,
            "itemtype": "property",
            "name": "image",
            "type": "{null}",
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 55,
            "itemtype": "property",
            "name": "type",
            "type": "{String}",
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 60,
            "itemtype": "property",
            "name": "position",
            "type": "{CG.Point}",
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 67,
            "itemtype": "property",
            "name": "rotation",
            "type": "{Number}",
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 72,
            "itemtype": "property",
            "name": "width",
            "type": "{Number}",
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 77,
            "itemtype": "property",
            "name": "height",
            "type": "{Number}",
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 82,
            "itemtype": "property",
            "name": "radius",
            "type": "{Number}",
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 87,
            "itemtype": "property",
            "name": "pspeed",
            "type": "{Number}",
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 92,
            "itemtype": "property",
            "name": "protation",
            "type": "{Number}",
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 97,
            "itemtype": "property",
            "name": "pdirection",
            "type": "{Number}",
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 102,
            "itemtype": "property",
            "name": "plifetime",
            "type": "{Number}",
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 107,
            "itemtype": "property",
            "name": "paging",
            "type": "{Number}",
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 112,
            "itemtype": "property",
            "name": "pfadeout",
            "type": "{Boolean}",
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 123,
            "description": "initAsPoint",
            "params": [
                {
                    "name": "image",
                    "description": "path, image or tpimage to use for the particle",
                    "type": "Mixed"
                }
            ],
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 136,
            "itemtype": "method",
            "name": "initAsExplosion",
            "params": [
                {
                    "name": "image",
                    "description": "path, image or tpimage to use for the particle",
                    "type": "Mixed"
                },
                {
                    "name": "min",
                    "description": "value for particle speed",
                    "type": "Number"
                },
                {
                    "name": "max",
                    "description": "value for particle speed",
                    "type": "Number"
                }
            ],
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 151,
            "itemtype": "method",
            "name": "initAsCorona",
            "params": [
                {
                    "name": "image",
                    "description": "path, image or tpimage to use for the particle",
                    "type": "Mixed"
                },
                {
                    "name": "radius",
                    "description": "of the corona emitter",
                    "type": "Number"
                }
            ],
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 164,
            "itemtype": "method",
            "name": "initAsLine",
            "params": [
                {
                    "name": "image",
                    "description": "path, image or tpimage to use for the particle",
                    "type": "Mixed"
                },
                {
                    "name": "width",
                    "description": "of the plate emitter",
                    "type": "Number"
                },
                {
                    "name": "direction",
                    "description": "(defined constants) of the plate emitter",
                    "type": "Number"
                }
            ],
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 179,
            "itemtype": "method",
            "name": "initAsRectangle",
            "params": [
                {
                    "name": "image",
                    "description": "path, image or tpimage to use for the particle",
                    "type": "Mixed"
                },
                {
                    "name": "width",
                    "description": "of the plate emitter",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "(defined constants) of the plate emitter",
                    "type": "Number"
                }
            ],
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 193,
            "itemtype": "method",
            "name": "createParticle",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 202,
            "itemtype": "method",
            "name": "initParticle",
            "params": [
                {
                    "name": "particle",
                    "description": "particle object",
                    "type": "Particle"
                }
            ],
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 326,
            "description": "Each emitter has its own particle pool to prevent object deletion/creation. This method searches an inactive/invisible particle",
            "itemtype": "method",
            "name": "searchInvisibleParticle",
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 339,
            "itemtype": "method",
            "name": "setEmitterPosition",
            "params": [
                {
                    "name": "position",
                    "description": "of the emitter",
                    "type": "CG.Point"
                }
            ],
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 349,
            "itemtype": "method",
            "name": "setName",
            "params": [
                {
                    "name": "name",
                    "description": "of the object for search with layerobject.getElementByName(name)",
                    "type": "String"
                }
            ],
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 359,
            "itemtype": "method",
            "name": "setCreationTime",
            "params": [
                {
                    "name": "creationtime",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 368,
            "itemtype": "method",
            "name": "setMaxParticles",
            "params": [
                {
                    "name": "maxparticle",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 377,
            "itemtype": "method",
            "name": "setGravity",
            "params": [
                {
                    "name": "gravity",
                    "description": "for all emitter controlled particles",
                    "type": "Float"
                }
            ],
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 397,
            "itemtype": "method",
            "name": "setProtation",
            "params": [
                {
                    "name": "rotation",
                    "description": "set the rotation of the particles",
                    "type": "Mixed"
                }
            ],
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 407,
            "itemtype": "method",
            "name": "setPLifetime",
            "params": [
                {
                    "name": "plifetime",
                    "description": "set the lifetime of the particles",
                    "type": "Number"
                }
            ],
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 417,
            "itemtype": "method",
            "name": "activateFadeout",
            "description": "Activate fadeout of the particles depending on lifetime",
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 426,
            "itemtype": "method",
            "name": "deactivateFadeout",
            "description": "Deactivate fadeout of the particles depending on lifetime",
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 435,
            "itemtype": "method",
            "name": "getRandom",
            "params": [
                {
                    "name": "min",
                    "description": "value for random number",
                    "type": "Mixed"
                },
                {
                    "name": "max",
                    "description": "value for random number",
                    "type": "Mixed"
                }
            ],
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 445,
            "itemtype": "method",
            "name": "getX",
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 452,
            "itemtype": "method",
            "name": "getY",
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/layer.js",
            "line": 10,
            "is_constructor": 1,
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "layername",
                    "description": "the name of the layer",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.Layer",
            "module": "CG"
        },
        {
            "file": "cangaja/control/layer.js",
            "line": 71,
            "description": "Add new element to the layer. This could be a CG.Sprite, CG.Animation, CG.Button and so on. Every thing that has a update and draw method ;o)",
            "itemtype": "method",
            "name": "addElement",
            "params": [
                {
                    "name": "element",
                    "description": "to add to elements array",
                    "type": "Obj"
                }
            ],
            "class": "CG.Layer",
            "module": "CG"
        },
        {
            "file": "cangaja/control/layer.js",
            "line": 81,
            "description": "Find element by name (the first one)",
            "itemtype": "method",
            "name": "getElementByName",
            "params": [
                {
                    "name": "elementname",
                    "description": "name of element to find in element array",
                    "type": "String"
                }
            ],
            "return": {
                "description": "returns false or the searched object",
                "type": "False/object"
            },
            "class": "CG.Layer",
            "module": "CG"
        },
        {
            "file": "cangaja/control/layer.js",
            "line": 96,
            "description": "Find elements by name (if they have the same name ;o)",
            "itemtype": "method",
            "name": "getElementsByName",
            "params": [
                {
                    "name": "elementname",
                    "description": "name of element to find in element array",
                    "type": "String"
                }
            ],
            "return": {
                "description": "returns a array of objects",
                "type": "Array"
            },
            "class": "CG.Layer",
            "module": "CG"
        },
        {
            "file": "cangaja/control/mediaasset.js",
            "line": 12,
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "params": [
                {
                    "name": "image",
                    "description": "image path to background image of preloader",
                    "type": "String"
                },
                {
                    "name": "ctx",
                    "description": "canvas context for drawing",
                    "type": "Canvas context"
                }
            ],
            "class": "CG.MediaAsset",
            "module": "CG"
        },
        {
            "file": "cangaja/control/mediaasset.js",
            "line": 62,
            "itemtype": "method",
            "name": "addImage",
            "params": [
                {
                    "name": "path",
                    "description": ""
                },
                {
                    "name": "name",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.MediaAsset",
            "module": "CG"
        },
        {
            "file": "cangaja/control/mediaasset.js",
            "line": 77,
            "itemtype": "method",
            "name": "addFont",
            "params": [
                {
                    "name": "path",
                    "description": ""
                },
                {
                    "name": "name",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.MediaAsset",
            "module": "CG"
        },
        {
            "file": "cangaja/control/mediaasset.js",
            "line": 92,
            "itemtype": "method",
            "name": "addXml",
            "params": [
                {
                    "name": "path",
                    "description": ""
                },
                {
                    "name": "name",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.MediaAsset",
            "module": "CG"
        },
        {
            "file": "cangaja/control/mediaasset.js",
            "line": 107,
            "itemtype": "method",
            "name": "addJson",
            "params": [
                {
                    "name": "path",
                    "description": ""
                },
                {
                    "name": "name",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.MediaAsset",
            "module": "CG"
        },
        {
            "file": "cangaja/control/mediaasset.js",
            "line": 122,
            "itemtype": "method",
            "name": "getImageByName",
            "params": [
                {
                    "name": "name",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.MediaAsset",
            "module": "CG"
        },
        {
            "file": "cangaja/control/mediaasset.js",
            "line": 139,
            "itemtype": "method",
            "name": "getImagesByName",
            "params": [
                {
                    "name": "name",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.MediaAsset",
            "module": "CG"
        },
        {
            "file": "cangaja/control/mediaasset.js",
            "line": 160,
            "itemtype": "method",
            "name": "getFontByName",
            "params": [
                {
                    "name": "name",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.MediaAsset",
            "module": "CG"
        },
        {
            "file": "cangaja/control/mediaasset.js",
            "line": 173,
            "itemtype": "method",
            "name": "getXmlByName",
            "params": [
                {
                    "name": "name",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.MediaAsset",
            "module": "CG"
        },
        {
            "file": "cangaja/control/mediaasset.js",
            "line": 186,
            "itemtype": "method",
            "name": "getJsonByName",
            "params": [
                {
                    "name": "name",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.MediaAsset",
            "module": "CG"
        },
        {
            "file": "cangaja/control/mediaasset.js",
            "line": 199,
            "itemtype": "method",
            "name": "startPreLoad",
            "class": "CG.MediaAsset",
            "module": "CG"
        },
        {
            "file": "cangaja/control/mediaasset.js",
            "line": 245,
            "itemtype": "method",
            "name": "progressScreen",
            "description": "render a progress screen to the canvas",
            "class": "CG.MediaAsset",
            "module": "CG"
        },
        {
            "file": "cangaja/control/menu.js",
            "line": 11,
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "params": [
                {
                    "name": "x",
                    "description": "x the x position",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "y the y position",
                    "type": "Number"
                },
                {
                    "name": "margin",
                    "description": "margin the margin between the menu buttons",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.Menu",
            "module": "CG"
        },
        {
            "file": "cangaja/control/menu.js",
            "line": 20,
            "itemtype": "property",
            "name": "x",
            "type": "{Number}",
            "class": "CG.Menu",
            "module": "CG"
        },
        {
            "file": "cangaja/control/menu.js",
            "line": 25,
            "itemtype": "property",
            "name": "y",
            "type": "{Number}",
            "class": "CG.Menu",
            "module": "CG"
        },
        {
            "file": "cangaja/control/menu.js",
            "line": 30,
            "proerty": "margin",
            "type": "{Number}",
            "class": "CG.Menu",
            "module": "CG"
        },
        {
            "file": "cangaja/control/menu.js",
            "line": 35,
            "itemtype": "property",
            "name": "step",
            "type": "{*}",
            "class": "CG.Menu",
            "module": "CG"
        },
        {
            "file": "cangaja/control/menu.js",
            "line": 40,
            "itemtype": "property",
            "name": "buttons",
            "type": "{Array}",
            "class": "CG.Menu",
            "module": "CG"
        },
        {
            "file": "cangaja/control/menu.js",
            "line": 47,
            "itemtype": "method",
            "name": "addButton",
            "params": [
                {
                    "name": "button",
                    "description": "",
                    "type": "Button"
                }
            ],
            "class": "CG.Menu",
            "module": "CG"
        },
        {
            "file": "cangaja/control/morph.js",
            "line": 11,
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "params": [
                {
                    "name": "mode",
                    "description": "mode type of the morph object",
                    "type": "String"
                },
                {
                    "name": "min",
                    "description": "min min value",
                    "type": "Number"
                },
                {
                    "name": "max",
                    "description": "max max value",
                    "type": "Number"
                },
                {
                    "name": "speed",
                    "description": "speed speed value",
                    "type": "Number"
                }
            ],
            "class": "CG.Morph",
            "module": "CG"
        },
        {
            "file": "cangaja/control/morph.js",
            "line": 48,
            "itemtype": "method",
            "name": "getVal",
            "return": {
                "description": "",
                "type": "Float"
            },
            "class": "CG.Morph",
            "module": "CG"
        },
        {
            "file": "cangaja/control/screen.js",
            "line": 12,
            "is_constructor": 1,
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "screenname",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.Screen",
            "module": "CG"
        },
        {
            "file": "cangaja/control/screen.js",
            "line": 20,
            "itemtype": "property",
            "name": "position",
            "type": "CG.Point",
            "class": "CG.Screen",
            "module": "CG"
        },
        {
            "file": "cangaja/control/screen.js",
            "line": 24,
            "itemtype": "property",
            "name": "xscale",
            "type": "{Number}",
            "class": "CG.Screen",
            "module": "CG"
        },
        {
            "file": "cangaja/control/screen.js",
            "line": 29,
            "itemtype": "property",
            "name": "yscale",
            "type": "{Number}",
            "class": "CG.Screen",
            "module": "CG"
        },
        {
            "file": "cangaja/control/screen.js",
            "line": 34,
            "itemtype": "property",
            "name": "layers",
            "type": "{Array}",
            "class": "CG.Screen",
            "module": "CG"
        },
        {
            "file": "cangaja/control/screen.js",
            "line": 66,
            "description": "add a CG.Layer object to the layer array",
            "itemtype": "method",
            "name": "addLayer",
            "params": [
                {
                    "name": "layer",
                    "description": "to add",
                    "type": "Layer"
                }
            ],
            "class": "CG.Screen",
            "module": "CG"
        },
        {
            "file": "cangaja/control/screen.js",
            "line": 76,
            "description": "find CG.Layer by name",
            "itemtype": "method",
            "name": "getLayerByName",
            "params": [
                {
                    "name": "layername",
                    "description": "find layer by name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "False/layer"
            },
            "class": "CG.Screen",
            "module": "CG"
        },
        {
            "file": "cangaja/control/sequence.js",
            "line": 10,
            "is_constructor": 1,
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "sequencename",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.Sequence",
            "module": "CG"
        },
        {
            "file": "cangaja/control/sequence.js",
            "line": 18,
            "itemtype": "property",
            "name": "current",
            "type": "{Number}",
            "class": "CG.Sequence",
            "module": "CG"
        },
        {
            "file": "cangaja/control/sequence.js",
            "line": 23,
            "itemtype": "property",
            "name": "loop",
            "type": "{Boolean}",
            "class": "CG.Sequence",
            "module": "CG"
        },
        {
            "file": "cangaja/control/sequence.js",
            "line": 28,
            "itemtype": "property",
            "name": "translations",
            "type": "{Array}",
            "class": "CG.Sequence",
            "module": "CG"
        },
        {
            "file": "cangaja/control/sequence.js",
            "line": 35,
            "description": "add a translation object to the sequence array",
            "itemtype": "method",
            "name": "addTranslation",
            "params": [
                {
                    "name": "translationobj",
                    "description": "the translation object to add",
                    "type": "Translation"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.Sequence",
            "module": "CG"
        },
        {
            "file": "cangaja/control/translate.js",
            "line": 10,
            "init": "",
            "is_constructor": 1,
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.Translate",
            "module": "CG"
        },
        {
            "file": "cangaja/control/translate.js",
            "line": 17,
            "itemtype": "property",
            "name": "type",
            "type": "{String}",
            "class": "CG.Translate",
            "module": "CG"
        },
        {
            "file": "cangaja/control/translate.js",
            "line": 22,
            "itemtype": "property",
            "name": "tx",
            "type": "{Number}",
            "class": "CG.Translate",
            "module": "CG"
        },
        {
            "file": "cangaja/control/translate.js",
            "line": 27,
            "itemtype": "property",
            "name": "ty",
            "type": "{Number}",
            "class": "CG.Translate",
            "module": "CG"
        },
        {
            "file": "cangaja/control/translate.js",
            "line": 32,
            "properzty": "x1",
            "type": "{Number}",
            "class": "CG.Translate",
            "module": "CG"
        },
        {
            "file": "cangaja/control/translate.js",
            "line": 37,
            "itemtype": "property",
            "name": "y1",
            "type": "{Number}",
            "class": "CG.Translate",
            "module": "CG"
        },
        {
            "file": "cangaja/control/translate.js",
            "line": 42,
            "itemtype": "property",
            "name": "x2",
            "type": "{Number}",
            "class": "CG.Translate",
            "module": "CG"
        },
        {
            "file": "cangaja/control/translate.js",
            "line": 47,
            "itemtype": "property",
            "name": "y2",
            "type": "{Number}",
            "class": "CG.Translate",
            "module": "CG"
        },
        {
            "file": "cangaja/control/translate.js",
            "line": 52,
            "itemtype": "property",
            "name": "bx",
            "type": "{Number}",
            "class": "CG.Translate",
            "module": "CG"
        },
        {
            "file": "cangaja/control/translate.js",
            "line": 57,
            "itemtype": "property",
            "name": "by",
            "type": "{Number}",
            "class": "CG.Translate",
            "module": "CG"
        },
        {
            "file": "cangaja/control/translate.js",
            "line": 62,
            "itemtype": "property",
            "name": "theobj",
            "type": "{Object}",
            "class": "CG.Translate",
            "module": "CG"
        },
        {
            "file": "cangaja/control/translate.js",
            "line": 67,
            "itemtype": "property",
            "name": "r1",
            "type": "{Number}",
            "class": "CG.Translate",
            "module": "CG"
        },
        {
            "file": "cangaja/control/translate.js",
            "line": 72,
            "itemtype": "property",
            "name": "r2",
            "type": "{Number}",
            "class": "CG.Translate",
            "module": "CG"
        },
        {
            "file": "cangaja/control/translate.js",
            "line": 77,
            "itemtype": "property",
            "name": "startangle",
            "type": "{Number}",
            "class": "CG.Translate",
            "module": "CG"
        },
        {
            "file": "cangaja/control/translate.js",
            "line": 82,
            "itemtype": "property",
            "name": "angle",
            "type": "{Number}",
            "class": "CG.Translate",
            "module": "CG"
        },
        {
            "file": "cangaja/control/translate.js",
            "line": 87,
            "itemtype": "property",
            "name": "speed",
            "type": "{Number}",
            "class": "CG.Translate",
            "module": "CG"
        },
        {
            "file": "cangaja/control/translate.js",
            "line": 92,
            "itemtype": "property",
            "name": "steps",
            "type": "{Number}",
            "class": "CG.Translate",
            "module": "CG"
        },
        {
            "file": "cangaja/control/translate.js",
            "line": 97,
            "itemtype": "property",
            "name": "step",
            "type": "{Number}",
            "class": "CG.Translate",
            "module": "CG"
        },
        {
            "file": "cangaja/control/translate.js",
            "line": 102,
            "itemtype": "property",
            "name": "positions",
            "type": "{Array}",
            "class": "CG.Translate",
            "module": "CG"
        },
        {
            "file": "cangaja/control/translate.js",
            "line": 107,
            "itemtype": "property",
            "name": "finished",
            "type": "{Boolean}",
            "class": "CG.Translate",
            "module": "CG"
        },
        {
            "file": "cangaja/control/translate.js",
            "line": 114,
            "itemtype": "method",
            "name": "initTween",
            "params": [
                {
                    "name": "obj",
                    "description": "object to move",
                    "type": "Object"
                },
                {
                    "name": "steps",
                    "description": "steps of tween",
                    "type": "Number"
                },
                {
                    "name": "startpoint",
                    "description": "startpoint of tween",
                    "type": "Point"
                },
                {
                    "name": "endpoint",
                    "description": "endpoint of tween",
                    "type": "Point"
                }
            ],
            "return": {
                "description": "",
                "type": "This"
            },
            "class": "CG.Translate",
            "module": "CG"
        },
        {
            "file": "cangaja/control/translate.js",
            "line": 145,
            "itemtype": "method",
            "name": "initOval",
            "params": [
                {
                    "name": "obj",
                    "description": "obj object to move",
                    "type": "Object"
                },
                {
                    "name": "centerpoint",
                    "description": "centerpoint",
                    "type": "Point"
                },
                {
                    "name": "radius1",
                    "description": "radius1",
                    "type": "Number"
                },
                {
                    "name": "radius2",
                    "description": "radius2",
                    "type": "Number"
                },
                {
                    "name": "startangle",
                    "description": "startangle",
                    "type": "Number"
                },
                {
                    "name": "rotation",
                    "description": "rotation",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "This"
            },
            "class": "CG.Translate",
            "module": "CG"
        },
        {
            "file": "cangaja/control/translate.js",
            "line": 168,
            "description": "initBezier\nhttp://13thparallel.com/archive/bezier-curves/",
            "itemtype": "method",
            "name": "initBezier",
            "params": [
                {
                    "name": "obj",
                    "description": "obj object to move",
                    "type": "Object"
                },
                {
                    "name": "steps",
                    "description": "steps of bézier curve",
                    "type": "Number"
                },
                {
                    "name": "startpoint",
                    "description": "startpoint startpoint of bézier",
                    "type": "CG.Point"
                },
                {
                    "name": "endpoint",
                    "description": "endpoint endpoint of bézier",
                    "type": "CG.Point"
                },
                {
                    "name": "control1",
                    "description": "control1 point for bézier calculation (optional)",
                    "type": "CG.Point"
                },
                {
                    "name": "control2",
                    "description": "control2 point for bézier calculation (optional)",
                    "type": "CG.Point"
                }
            ],
            "return": {
                "description": "",
                "type": "This"
            },
            "class": "CG.Translate",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/box2dhtml5/b2DebugDraw.js",
            "line": 25,
            "description": "This class implements debug drawing callbacks that are \ninvoked inside b2World::Step.",
            "export": "",
            "is_constructor": 1,
            "extends": "{box2d.b2Draw}",
            "params": [
                {
                    "name": "opts",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/box2dhtml5/b2DebugDraw.js",
            "line": 46,
            "export": "",
            "type": "{HTMLCanvasElement}",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/box2dhtml5/b2DebugDraw.js",
            "line": 51,
            "export": "",
            "type": "{CanvasRenderingContext2D}",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/box2dhtml5/b2DebugDraw.js",
            "line": 56,
            "export": "",
            "type": "{box2d.Settings}",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/box2dhtml5/b2DebugDraw.js",
            "line": 66,
            "export": "",
            "return": {
                "description": "",
                "type": "Void"
            },
            "params": [
                {
                    "name": "xf",
                    "description": "",
                    "type": "box2d.b2Transform"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/box2dhtml5/b2DebugDraw.js",
            "line": 80,
            "export": "",
            "return": {
                "description": "",
                "type": "Void"
            },
            "params": [
                {
                    "name": "xf",
                    "description": "",
                    "type": "box2d.b2Transform"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/box2dhtml5/b2DebugDraw.js",
            "line": 91,
            "export": "",
            "return": {
                "description": "",
                "type": "Void"
            },
            "params": [
                {
                    "name": "vertices",
                    "description": "",
                    "type": "Array.<box2d.b2Vec2>"
                },
                {
                    "name": "vertexCount",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "color",
                    "description": "",
                    "type": "box2d.b2Color"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/box2dhtml5/b2DebugDraw.js",
            "line": 115,
            "export": "",
            "return": {
                "description": "",
                "type": "Void"
            },
            "params": [
                {
                    "name": "vertices",
                    "description": "",
                    "type": "Array.<box2d.b2Vec2>"
                },
                {
                    "name": "vertexCount",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "color",
                    "description": "",
                    "type": "box2d.b2Color"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/box2dhtml5/b2DebugDraw.js",
            "line": 141,
            "export": "",
            "return": {
                "description": "",
                "type": "Void"
            },
            "params": [
                {
                    "name": "center",
                    "description": "",
                    "type": "box2d.b2Vec2"
                },
                {
                    "name": "radius",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "color",
                    "description": "",
                    "type": "box2d.b2Color"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/box2dhtml5/b2DebugDraw.js",
            "line": 160,
            "export": "",
            "return": {
                "description": "",
                "type": "Void"
            },
            "params": [
                {
                    "name": "center",
                    "description": "",
                    "type": "box2d.b2Vec2"
                },
                {
                    "name": "radius",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "axis",
                    "description": "",
                    "type": "box2d.b2Vec2"
                },
                {
                    "name": "color",
                    "description": "",
                    "type": "box2d.b2Color"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/box2dhtml5/b2DebugDraw.js",
            "line": 186,
            "export": "",
            "return": {
                "description": "",
                "type": "Void"
            },
            "params": [
                {
                    "name": "p1",
                    "description": "",
                    "type": "box2d.b2Vec2"
                },
                {
                    "name": "p2",
                    "description": "",
                    "type": "box2d.b2Vec2"
                },
                {
                    "name": "color",
                    "description": "",
                    "type": "box2d.b2Color"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/box2dhtml5/b2DebugDraw.js",
            "line": 204,
            "export": "",
            "return": {
                "description": "",
                "type": "Void"
            },
            "params": [
                {
                    "name": "xf",
                    "description": "",
                    "type": "box2d.b2Transform"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/box2dhtml5/b2DebugDraw.js",
            "line": 230,
            "export": "",
            "return": {
                "description": "",
                "type": "Void"
            },
            "params": [
                {
                    "name": "p",
                    "description": "",
                    "type": "box2d.b2Vec2"
                },
                {
                    "name": "size",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "color",
                    "description": "",
                    "type": "box2d.b2Color"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/box2dhtml5/b2DebugDraw.js",
            "line": 248,
            "export": "",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "format",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "var_args",
                    "description": "",
                    "type": "...string|number"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/box2dhtml5/b2DebugDraw.js",
            "line": 272,
            "export": "",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "format",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "var_args",
                    "description": "",
                    "type": "...string|number"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/box2dhtml5/b2DebugDraw.js",
            "line": 315,
            "export": "",
            "return": {
                "description": "",
                "type": "Void"
            },
            "params": [
                {
                    "name": "aabb",
                    "description": "",
                    "type": "box2d.b2AABB"
                },
                {
                    "name": "color",
                    "description": "",
                    "type": "box2d.b2Color"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/chipmunk.js",
            "line": 1682,
            "defgroup": "cpSpatialIndex cpSpatialIndex\n\nSpatial indexes are data structures that are used to accelerate collision detection\nand spatial queries. Chipmunk provides a number of spatial index algorithms to pick from\nand they are programmed in a generic way so that you can use them for holding more than\njust Shapes.\n\nIt works by using pointers to the objects you add and using a callback to ask your code\nfor bounding boxes when it needs them. Several types of queries can be performed an index as well\nas reindexing and full collision information. All communication to the spatial indexes is performed\nthrough callback functions.\n\nSpatial indexes should be treated as opaque structs.\nThis means you shouldn't be reading any of the fields directly.\n\nAll spatial indexes define the following methods:\n\n// The number of objects in the spatial index.\ncount = 0;\n\n// Iterate the objects in the spatial index. @c func will be called once for each object.\neach(func);\n\n// Returns true if the spatial index contains the given object.\n// Most spatial indexes use hashed storage, so you must provide a hash value too.\ncontains(obj, hashid);\n\n// Add an object to a spatial index.\ninsert(obj, hashid);\n\n// Remove an object from a spatial index.\nremove(obj, hashid);\n\n// Perform a full reindex of a spatial index.\nreindex();\n\n// Reindex a single object in the spatial index.\nreindexObject(obj, hashid);\n\n// Perform a point query against the spatial index, calling @c func for each potential match.\n// A pointer to the point will be passed as @c obj1 of @c func.\n// func(shape);\npointQuery(point, func);\n\n// Perform a segment query against the spatial index, calling @c func for each potential match.\n// func(shape);\nsegmentQuery(vect a, vect b, t_exit, func);\n\n// Perform a rectangle query against the spatial index, calling @c func for each potential match.\n// func(shape);\nquery(bb, func);\n\n// Simultaneously reindex and find all colliding objects.\n// @c func will be called once for each potentially overlapping pair of objects found.\n// If the spatial index was initialized with a static index, it will collide it's objects against that as well.\nreindexQuery(func);",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/clipper.js",
            "line": 1,
            "description": "*\n Author    :  Angus Johnson                                                   *\n Version   :  5.0.2                                                           *\n Date      :  30 December 2012                                                *\n Website   :  http://www.angusj.com                                           *\n Copyright :  Angus Johnson 2010-2012                                         *\n*\n License:                                                                     *\n Use, modification & distribution is subject to Boost Software License Ver 1. *\n http://www.boost.org/LICENSE_1_0.txt                                         *\n*\n Attributions:                                                                *\n The code in this library is an extension of Bala Vatti's clipping algorithm: *\n \"A generic solution to polygon clipping\"                                     *\n Communications of the ACM, Vol 35, Issue 7 (July 1992) pp 56-63.             *\n http://portal.acm.org/citation.cfm?id=129906                                 *\n*\n Computer graphics and geometric modeling: implementation and algorithms      *\n By Max K. Agoston                                                            *\n Springer; 1 edition (January 4, 2005)                                        *\n http://books.google.com/books?q=vatti+clipping+agoston                       *\n*\n See also:                                                                    *\n \"Polygon Offsetting by Computing Winding Numbers\"                            *\n Paper no. DETC2005-85513 pp. 565-575                                         *\n ASME 2005 International Design Engineering Technical Conferences             *\n and Computers and Information in Engineering Conference (IDETC/CIE2005)      *\n September 24�28, 2005 , Long Beach, California, USA                          *\n http://www.me.berkeley.edu/~mcmains/pubs/DAC05OffsetPolygon.pdf              *\n*",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/clipper.js",
            "line": 34,
            "description": "*\n Author    :  Timo                                                            *\n Version   :  5.0.2.2                                                         *\n Date      :  11 September 2013                                               *\n*\n This is a translation of the C# Clipper library to Javascript.               *\n Int128 struct of C# is implemented using JSBN of Tom Wu.                     *\n Because Javascript lacks support for 64-bit integers, the space              *\n is a little more restricted than in C# version.                              *\n*\n C# version has support for coordinate space:                                 *\n +-4611686018427387903 ( sqrt(2^127 -1)/2 )                                   *\n while Javascript version has support for space:                              *\n +-4503599627370495 ( sqrt(2^106 -1)/2 )                                      *\n*\n Tom Wu's JSBN proved to be the fastest big integer library:                  *\n http://jsperf.com/big-integer-library-test                                   *\n*\n This class can be made simpler when (if ever) 64-bit integer support comes.  *\n*",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/clipper.js",
            "line": 57,
            "description": "*\n Basic JavaScript BN library - subset useful for RSA encryption.              *\n http://www-cs-students.stanford.edu/~tjw/jsbn/                               *\n Copyright (c) 2005  Tom Wu                                                   *\n All Rights Reserved.                                                         *\n See \"LICENSE\" for details:                                                   *\n http://www-cs-students.stanford.edu/~tjw/jsbn/LICENSE                        *\n*",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/clipper.min.js",
            "line": 1,
            "description": "*\n Author    :  Angus Johnson                                                   *\n Version   :  5.0.2                                                           *\n Date      :  30 December 2012                                                *\n Website   :  http://www.angusj.com                                           *\n Copyright :  Angus Johnson 2010-2012                                         *\n*\n License:                                                                     *\n Use, modification & distribution is subject to Boost Software License Ver 1. *\n http://www.boost.org/LICENSE_1_0.txt                                         *\n*\n Attributions:                                                                *\n The code in this library is an extension of Bala Vatti's clipping algorithm: *\n \"A generic solution to polygon clipping\"                                     *\n Communications of the ACM, Vol 35, Issue 7 (July 1992) pp 56-63.             *\n http://portal.acm.org/citation.cfm?id=129906                                 *\n*\n Computer graphics and geometric modeling: implementation and algorithms      *\n By Max K. Agoston                                                            *\n Springer; 1 edition (January 4, 2005)                                        *\n http://books.google.com/books?q=vatti+clipping+agoston                       *\n*\n See also:                                                                    *\n \"Polygon Offsetting by Computing Winding Numbers\"                            *\n Paper no. DETC2005-85513 pp. 565-575                                         *\n ASME 2005 International Design Engineering Technical Conferences             *\n and Computers and Information in Engineering Conference (IDETC/CIE2005)      *\n September 24�28, 2005 , Long Beach, California, USA                          *\n http://www.me.berkeley.edu/~mcmains/pubs/DAC05OffsetPolygon.pdf              *\n*",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/clipper.min.js",
            "line": 34,
            "description": "*\n Author    :  Timo                                                            *\n Version   :  5.0.2.2                                                         *\n Date      :  11 September 2013                                               *\n*\n This is a translation of the C# Clipper library to Javascript.               *\n Int128 struct of C# is implemented using JSBN of Tom Wu.                     *\n Because Javascript lacks support for 64-bit integers, the space              *\n is a little more restricted than in C# version.                              *\n*\n C# version has support for coordinate space:                                 *\n +-4611686018427387903 ( sqrt(2^127 -1)/2 )                                   *\n while Javascript version has support for space:                              *\n +-4503599627370495 ( sqrt(2^106 -1)/2 )                                      *\n*\n Tom Wu's JSBN proved to be the fastest big integer library:                  *\n http://jsperf.com/big-integer-library-test                                   *\n*\n This class can be made simpler when (if ever) 64-bit integer support comes.  *\n*",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/clipper.min.js",
            "line": 57,
            "description": "*\n Basic JavaScript BN library - subset useful for RSA encryption.              *\n http://www-cs-students.stanford.edu/~tjw/jsbn/                               *\n Copyright (c) 2005  Tom Wu                                                   *\n All Rights Reserved.                                                         *\n See \"LICENSE\" for details:                                                   *\n http://www-cs-students.stanford.edu/~tjw/jsbn/LICENSE                        *\n*",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/hammer.js",
            "line": 10,
            "description": "Hammer\nuse this to create instances",
            "params": [
                {
                    "name": "element",
                    "description": "",
                    "type": "HTMLElement"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Hammer.Instance"
            },
            "is_constructor": 1,
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/hammer.js",
            "line": 80,
            "description": "setup events to detect gestures on the document",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/hammer.js",
            "line": 106,
            "description": "create new hammer instance\nall methods should return the instance itself, so it is chainable.",
            "params": [
                {
                    "name": "element",
                    "description": "",
                    "type": "HTMLElement"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "{}"
                }
            ],
            "return": {
                "description": "",
                "type": "Hammer.Instance"
            },
            "is_constructor": 1,
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/hammer.js",
            "line": 149,
            "description": "bind events to the instance",
            "params": [
                {
                    "name": "gesture",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "handler",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Hammer.Instance"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/hammer.js",
            "line": 164,
            "description": "unbind events to the instance",
            "params": [
                {
                    "name": "gesture",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "handler",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Hammer.Instance"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/hammer.js",
            "line": 179,
            "description": "trigger gesture event",
            "params": [
                {
                    "name": "gesture",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "eventData",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Hammer.Instance"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/hammer.js",
            "line": 203,
            "description": "enable of disable hammer.js detection",
            "params": [
                {
                    "name": "state",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Hammer.Instance"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/hammer.js",
            "line": 214,
            "description": "this holds the last move event,\nused to fix empty touchend issue\nsee the onTouch event for an explanation",
            "type": "{Object}",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/hammer.js",
            "line": 223,
            "description": "when the mouse is hold down, this is true",
            "type": "{Boolean}",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/hammer.js",
            "line": 230,
            "description": "when touch events have been fired, this is true",
            "type": "{Boolean}",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/hammer.js",
            "line": 238,
            "description": "simple addEventListener",
            "params": [
                {
                    "name": "element",
                    "description": "",
                    "type": "HTMLElement"
                },
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "handler",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/hammer.js",
            "line": 252,
            "description": "touch events with mouse fallback",
            "params": [
                {
                    "name": "element",
                    "description": "",
                    "type": "HTMLElement"
                },
                {
                    "name": "eventType",
                    "description": "like Hammer.EVENT_MOVE",
                    "type": "String"
                },
                {
                    "name": "handler",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/hammer.js",
            "line": 345,
            "description": "we have different events for each device/browser\ndetermine what we need and set them in the Hammer.EVENT_TYPES constant",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/hammer.js",
            "line": 379,
            "description": "create touchlist depending on the event",
            "params": [
                {
                    "name": "ev",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "eventType",
                    "description": "used by the fakemultitouch plugin",
                    "type": "String"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/hammer.js",
            "line": 405,
            "description": "collect event data for Hammer js",
            "params": [
                {
                    "name": "element",
                    "description": "",
                    "type": "HTMLElement"
                },
                {
                    "name": "eventType",
                    "description": "like Hammer.EVENT_MOVE",
                    "type": "String"
                },
                {
                    "name": "eventData",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/hammer.js",
            "line": 429,
            "description": "prevent the browser default actions\nmostly used to disable scrolling of the browser",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/hammer.js",
            "line": 443,
            "description": "stop bubbling the event up to its parents",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/hammer.js",
            "line": 450,
            "description": "immediately stop gesture detection\nmight be useful after a swipe was detected",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/hammer.js",
            "line": 463,
            "description": "holds all pointers",
            "type": "{Object}",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/hammer.js",
            "line": 469,
            "description": "get a list of pointers",
            "return": {
                "description": "touchlist",
                "type": "Array"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/hammer.js",
            "line": 484,
            "description": "update the position of a pointer",
            "params": [
                {
                    "name": "type",
                    "description": "Hammer.EVENT_END",
                    "type": "String"
                },
                {
                    "name": "pointerEvent",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/hammer.js",
            "line": 501,
            "description": "check if ev matches pointertype",
            "params": [
                {
                    "name": "pointerType",
                    "description": "Hammer.POINTER_MOUSE",
                    "type": "String"
                },
                {
                    "name": "ev",
                    "description": "",
                    "type": "PointerEvent"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/hammer.js",
            "line": 519,
            "description": "get events",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/hammer.js",
            "line": 530,
            "description": "reset the list",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/hammer.js",
            "line": 540,
            "description": "extend method,\nalso used for cloning when dest is an empty object",
            "params": [
                {
                    "name": "dest",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "src",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "merge",
                    "description": "do a merge",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "dest",
                "type": "Object"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/hammer.js",
            "line": 559,
            "description": "find if a node is in the given parent\nused for event delegation tricks",
            "params": [
                {
                    "name": "node",
                    "description": "",
                    "type": "HTMLElement"
                },
                {
                    "name": "parent",
                    "description": "",
                    "type": "HTMLElement"
                }
            ],
            "return": {
                "description": "has_parent",
                "type": "Boolean"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/hammer.js",
            "line": 577,
            "description": "get the center of all the touches",
            "params": [
                {
                    "name": "touches",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "center",
                "type": "Object"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/hammer.js",
            "line": 597,
            "description": "calculate the velocity between two points",
            "params": [
                {
                    "name": "delta_time",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "delta_x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "delta_y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "velocity",
                "type": "Object"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/hammer.js",
            "line": 612,
            "description": "calculate the angle between two coordinates",
            "params": [
                {
                    "name": "touch1",
                    "description": "",
                    "type": "Touch"
                },
                {
                    "name": "touch2",
                    "description": "",
                    "type": "Touch"
                }
            ],
            "return": {
                "description": "angle",
                "type": "Number"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/hammer.js",
            "line": 625,
            "description": "angle to direction define",
            "params": [
                {
                    "name": "touch1",
                    "description": "",
                    "type": "Touch"
                },
                {
                    "name": "touch2",
                    "description": "",
                    "type": "Touch"
                }
            ],
            "return": {
                "description": "direction constant, like Hammer.DIRECTION_LEFT",
                "type": "String"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/hammer.js",
            "line": 644,
            "description": "calculate the distance between two touches",
            "params": [
                {
                    "name": "touch1",
                    "description": "",
                    "type": "Touch"
                },
                {
                    "name": "touch2",
                    "description": "",
                    "type": "Touch"
                }
            ],
            "return": {
                "description": "distance",
                "type": "Number"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/hammer.js",
            "line": 657,
            "description": "calculate the scale factor between two touchLists (fingers)\nno scale is 1, and goes down to 0 when pinched together, and bigger when pinched out",
            "params": [
                {
                    "name": "start",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "end",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "scale",
                "type": "Number"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/hammer.js",
            "line": 674,
            "description": "calculate the rotation degrees between two touchLists (fingers)",
            "params": [
                {
                    "name": "start",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "end",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "rotation",
                "type": "Number"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/hammer.js",
            "line": 690,
            "description": "boolean if the direction is vertical",
            "params": [
                {
                    "name": "direction",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "is_vertical",
                "type": "Boolean"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/hammer.js",
            "line": 700,
            "description": "stop browser default behavior with css props",
            "params": [
                {
                    "name": "element",
                    "description": "",
                    "type": "HtmlElement"
                },
                {
                    "name": "css_props",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/hammer.js",
            "line": 754,
            "description": "start Hammer.gesture detection",
            "params": [
                {
                    "name": "inst",
                    "description": "",
                    "type": "Hammer.Instance"
                },
                {
                    "name": "eventData",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/hammer.js",
            "line": 778,
            "description": "Hammer.gesture detection",
            "params": [
                {
                    "name": "eventData",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "eventData",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/hammer.js",
            "line": 822,
            "description": "clear the Hammer.gesture vars\nthis is called on endDetect, but can also be used when a final Hammer.gesture has been detected\nto stop other Hammer.gestures from being fired",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/hammer.js",
            "line": 840,
            "description": "extend eventData for Hammer.gestures",
            "params": [
                {
                    "name": "ev",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "ev",
                "type": "Object"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/hammer.js",
            "line": 888,
            "description": "register new gesture",
            "params": [
                {
                    "name": "gesture",
                    "description": "object, see gestures.js for documentation",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "gestures",
                "type": "Array"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/hammer.js",
            "line": 927,
            "description": "Custom gestures\n==============================\n\nGesture object\n--------------------\nThe object structure of a gesture:\n\n{ name: 'mygesture',\n  index: 1337,\n  defaults: {\n    mygesture_option: true\n  }\n  handler: function(type, ev, inst) {\n    // trigger gesture event\n    inst.trigger(this.name, ev);\n  }\n}",
            "params": [
                {
                    "name": "name!~YUIDOC_LINE~!this",
                    "description": "should be the name of the gesture, lowercase\nit is also being used to disable/enable the gesture per instance config.",
                    "type": "String"
                },
                {
                    "name": "index",
                    "description": "index of the gesture, where it is going to be in the stack of gestures detection\nlike when you build an gesture that depends on the drag gesture, it is a good\nidea to place it after the index of the drag gesture.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1000"
                },
                {
                    "name": "defaults",
                    "description": "default settings of the gesture. these are added to the instance settings,\nand can be overruled per instance. you can also add the name of the gesture,\nbut this is also added by default (and set to true).",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "{}"
                },
                {
                    "name": "handler!~YUIDOC_LINE~!this",
                    "description": "handles the gesture detection of your custom gesture and receives the\nfollowing arguments:",
                    "type": "Function"
                },
                {
                    "name": "eventData!~YUIDOC_LINE~!",
                    "description": "event data containing the following properties:\n         timeStamp   {Number}        time the event occurred\n         target      {HTMLElement}   target element\n         touches     {Array}         touches (fingers, pointers, mouse) on the screen\n         pointerType {String}        kind of pointer that was used. matches Hammer.POINTER_MOUSE|TOUCH\n         center      {Object}        center position of the touches. contains pageX and pageY\n         deltaTime   {Number}        the total time of the touches in the screen\n         deltaX      {Number}        the delta on x axis we haved moved\n         deltaY      {Number}        the delta on y axis we haved moved\n         velocityX   {Number}        the velocity on the x\n         velocityY   {Number}        the velocity on y\n         angle       {Number}        the angle we are moving\n         direction   {String}        the direction we are moving. matches Hammer.DIRECTION_UP|DOWN|LEFT|RIGHT\n         distance    {Number}        the distance we haved moved\n         scale       {Number}        scaling of the touches, needs 2 touches\n         rotation    {Number}        rotation of the touches, needs 2 touches *\n         eventType   {String}        matches Hammer.EVENT_START|MOVE|END\n         srcEvent    {Object}        the source event, like TouchStart or MouseDown *\n         startEvent  {Object}        contains the same properties as above,\n                                     but from the first touch. this is used to calculate\n                                     distances, deltaTime, scaling etc",
                    "type": "Object"
                },
                {
                    "name": "inst!~YUIDOC_LINE~!",
                    "description": "the instance we are doing the detection for. you can get the options from\n     the inst.options object and trigger the gesture event by calling inst.trigger\n\n\nHandle gestures\n--------------------\ninside the handler you can get/set Hammer.detection.current. This is the current\ndetection session. It has the following properties",
                    "type": "Hammer.Instance"
                },
                {
                    "name": "name!~YUIDOC_LINE~!",
                    "description": "contains the name of the gesture we have detected. it has not a real function,\n     only to check in other gestures if something is detected.\n     like in the drag gesture we set it to 'drag' and in the swipe gesture we can\n     check if the current gesture is 'drag' by accessing Hammer.detection.current.name",
                    "type": "String"
                },
                {
                    "name": "inst!~YUIDOC_LINE~!",
                    "description": "the instance we do the detection for",
                    "type": "Hammer.Instance"
                },
                {
                    "name": "startEvent!~YUIDOC_LINE~!",
                    "description": "contains the properties of the first gesture detection in this session.\n     Used for calculations about timing, distance, etc.",
                    "type": "Object"
                },
                {
                    "name": "lastEvent!~YUIDOC_LINE~!",
                    "description": "contains all the properties of the last gesture detect in this session.\n\nafter the gesture detection session has been completed (user has released the screen)\nthe Hammer.detection.current object is copied into Hammer.detection.previous,\nthis is usefull for gestures like doubletap, where you need to know if the\nprevious gesture was a tap\n\noptions that have been set by the instance can be received by calling inst.options\n\nYou can trigger a gesture event by calling inst.trigger(\"mygesture\", event).\nThe first param is the name of your gesture, the second the event argument\n\n\nRegister gestures\n--------------------\nWhen an gesture is added to the Hammer.gestures object, it is auto registered\nat the setup of the first Hammer instance. You can also call Hammer.detection.register\nmanually and pass your gesture object as a param",
                    "type": "Object"
                }
            ],
            "readonly": "",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/hammer.js",
            "line": 1034,
            "description": "Hold\nTouch stays at the same place for x time",
            "events": "hold",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/hammer.js",
            "line": 1080,
            "description": "Tap/DoubleTap\nQuick touch at a place or double at the same place",
            "events": "tap, doubletap",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/hammer.js",
            "line": 1126,
            "description": "Swipe\ntriggers swipe events when the end velocity is above the threshold",
            "events": "swipe, swipeleft, swiperight, swipeup, swipedown",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/hammer.js",
            "line": 1160,
            "description": "Drag\nMove with x fingers (default 1) around on the page. Blocking the scrolling when\nmoving left and right is a good practice. When all the drag events are blocking\nyou disable scrolling on that area.",
            "events": "drag, drapleft, dragright, dragup, dragdown",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/hammer.js",
            "line": 1265,
            "description": "Transform\nUser want to scale or rotate with 2 fingers",
            "events": "transform, pinch, pinchin, pinchout, rotate",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/hammer.js",
            "line": 1355,
            "description": "Touch\nCalled as first, tells the user has touched the screen",
            "events": "touch",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/hammer.js",
            "line": 1391,
            "description": "Release\nCalled as last, tells the user has released the screen",
            "events": "release",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/howler.js",
            "line": 50,
            "description": "Get/set the global volume for all sounds.",
            "params": [
                {
                    "name": "vol",
                    "description": "Volume from 0.0 to 1.0.",
                    "type": "Float"
                }
            ],
            "return": {
                "description": "Returns self or current volume.",
                "type": "Howler/Float"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/howler.js",
            "line": 85,
            "description": "Mute all sounds.",
            "return": {
                "description": "",
                "type": "Howler"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/howler.js",
            "line": 95,
            "description": "Unmute all sounds.",
            "return": {
                "description": "",
                "type": "Howler"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/howler.js",
            "line": 105,
            "description": "Handle muting and unmuting globally.",
            "params": [
                {
                    "name": "muted",
                    "description": "Is muted or not.",
                    "type": "Boolean"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/howler.js",
            "line": 191,
            "description": "Load an audio file.",
            "return": {
                "description": "",
                "type": "Howl"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/howler.js",
            "line": 284,
            "description": "Get/set the URLs to be pulled from to play in this source.",
            "params": [
                {
                    "name": "urls",
                    "description": "Arry of URLs to load from",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Returns self or the current URLs",
                "type": "Howl"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/howler.js",
            "line": 304,
            "description": "Play a sound from the current time (0 by default).",
            "params": [
                {
                    "name": "sprite",
                    "description": "(optional) Plays from the specified position in the sound sprite definition.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "(optional) Returns the unique playback id for this sound instance.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Howl"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/howler.js",
            "line": 440,
            "description": "Pause playback and save the current position.",
            "params": [
                {
                    "name": "id",
                    "description": "(optional) The play instance ID.",
                    "type": "String"
                },
                {
                    "name": "timerId",
                    "description": "(optional) Clear the correct timeout ID.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Howl"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/howler.js",
            "line": 487,
            "description": "Stop playback and reset to start.",
            "params": [
                {
                    "name": "id",
                    "description": "(optional) The play instance ID.",
                    "type": "String"
                },
                {
                    "name": "timerId",
                    "description": "(optional) Clear the correct timeout ID.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Howl"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/howler.js",
            "line": 534,
            "description": "Mute this sound.",
            "params": [
                {
                    "name": "id",
                    "description": "(optional) The play instance ID.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Howl"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/howler.js",
            "line": 563,
            "description": "Unmute this sound.",
            "params": [
                {
                    "name": "id",
                    "description": "(optional) The play instance ID.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Howl"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/howler.js",
            "line": 592,
            "description": "Get/set volume of this sound.",
            "params": [
                {
                    "name": "vol",
                    "description": "Volume from 0.0 to 1.0.",
                    "type": "Float"
                },
                {
                    "name": "id",
                    "description": "(optional) The play instance ID.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns self or current volume.",
                "type": "Howl/Float"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/howler.js",
            "line": 631,
            "description": "Get/set whether to loop the sound.",
            "params": [
                {
                    "name": "loop",
                    "description": "To loop or not to loop, that is the question.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "Returns self or current looping value.",
                "type": "Howl/Boolean"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/howler.js",
            "line": 648,
            "description": "Get/set sound sprite definition.",
            "params": [
                {
                    "name": "sprite",
                    "description": "Example: {spriteName: [offset, duration, loop]}",
                    "type": "Object"
                },
                {
                    "name": "offset",
                    "description": "Where to begin playback in milliseconds",
                    "type": "Integer"
                },
                {
                    "name": "duration",
                    "description": "How long to play in milliseconds",
                    "type": "Integer"
                },
                {
                    "name": "loop",
                    "description": "(optional) Set true to loop this sprite",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "Returns current sprite sheet or self.",
                "type": "Howl"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/howler.js",
            "line": 668,
            "description": "Get/set the position of playback.",
            "params": [
                {
                    "name": "pos",
                    "description": "The position to move current playback to.",
                    "type": "Float"
                },
                {
                    "name": "id",
                    "description": "(optional) The play instance ID.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns self or current playback position.",
                "type": "Howl/Float"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/howler.js",
            "line": 721,
            "description": "Get/set the 3D position of the audio source.\nThe most common usage is to set the 'x' position\nto affect the left/right ear panning. Setting any value higher than\n1.0 will begin to decrease the volume of the sound as it moves further away.\nNOTE: This only works with Web Audio API, HTML5 Audio playback\nwill not be affected.",
            "params": [
                {
                    "name": "x",
                    "description": "The x-position of the playback from -1000.0 to 1000.0",
                    "type": "Float"
                },
                {
                    "name": "y",
                    "description": "The y-position of the playback from -1000.0 to 1000.0",
                    "type": "Float"
                },
                {
                    "name": "z",
                    "description": "The z-position of the playback from -1000.0 to 1000.0",
                    "type": "Float"
                },
                {
                    "name": "id",
                    "description": "(optional) The play instance ID.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns self or the current 3D position: [x, y, z]",
                "type": "Howl/Array"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/howler.js",
            "line": 765,
            "description": "Fade a currently playing sound between two volumes.",
            "params": [
                {
                    "name": "from",
                    "description": "The volume to fade from (0.0 to 1.0).",
                    "type": "Number"
                },
                {
                    "name": "to",
                    "description": "The volume to fade to (0.0 to 1.0).",
                    "type": "Number"
                },
                {
                    "name": "len",
                    "description": "Time in milliseconds to fade.",
                    "type": "Number"
                },
                {
                    "name": "callback",
                    "description": "(optional) Fired when the fade is complete.",
                    "type": "Function"
                },
                {
                    "name": "id",
                    "description": "(optional) The play instance ID.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Howl"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/howler.js",
            "line": 810,
            "description": "[DEPRECATED] Fade in the current sound.",
            "params": [
                {
                    "name": "to",
                    "description": "Volume to fade to (0.0 to 1.0).",
                    "type": "Float"
                },
                {
                    "name": "len",
                    "description": "Time in milliseconds to fade.",
                    "type": "Number"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Howl"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/howler.js",
            "line": 821,
            "description": "[DEPRECATED] Fade out the current sound and pause when finished.",
            "params": [
                {
                    "name": "to",
                    "description": "Volume to fade to (0.0 to 1.0).",
                    "type": "Float"
                },
                {
                    "name": "len",
                    "description": "Time in milliseconds to fade.",
                    "type": "Number"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "id",
                    "description": "(optional) The play instance ID.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Howl"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/howler.js",
            "line": 841,
            "description": "Get an audio node by ID.",
            "return": {
                "description": "Audio node.",
                "type": "Howl"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/howler.js",
            "line": 860,
            "description": "Get the first active audio node.",
            "return": {
                "description": "Audio node.",
                "type": "Howl"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/howler.js",
            "line": 882,
            "description": "Get the first inactive audio node.\nIf there is none, create a new one and add it to the pool.",
            "params": [
                {
                    "name": "callback",
                    "description": "Function to call when the audio node is ready.",
                    "type": "Function"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/howler.js",
            "line": 921,
            "description": "If there are more than 5 inactive audio nodes in the pool, clear out the rest.",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/howler.js",
            "line": 954,
            "description": "Clear 'onend' timeout before it ends.",
            "params": [
                {
                    "name": "timerId",
                    "description": "The ID of the sound to be cancelled.",
                    "type": "Number"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/howler.js",
            "line": 971,
            "description": "Setup the gain node and panner for a Web Audio instance.",
            "return": {
                "description": "The new audio node.",
                "type": "Object"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/howler.js",
            "line": 996,
            "description": "Call/set custom events.",
            "params": [
                {
                    "name": "event",
                    "description": "Event type.",
                    "type": "String"
                },
                {
                    "name": "fn",
                    "description": "Function to call.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Howl"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/howler.js",
            "line": 1021,
            "description": "Remove a custom event.",
            "params": [
                {
                    "name": "event",
                    "description": "Event type.",
                    "type": "String"
                },
                {
                    "name": "fn",
                    "description": "Listener to remove.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Howl"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/howler.js",
            "line": 1043,
            "description": "Unload and destroy the current Howl object.\nThis will immediately stop all play instances attached to this sound.",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/howler.js",
            "line": 1080,
            "description": "Buffer a sound from URL (or from cache) and decode to audio source (Web Audio API).",
            "params": [
                {
                    "name": "obj",
                    "description": "The Howl object for the sound to load.",
                    "type": "Object"
                },
                {
                    "name": "url",
                    "description": "The path to the sound file.",
                    "type": "String"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/howler.js",
            "line": 1125,
            "description": "Finishes loading the Web Audio API sound and fires the loaded event",
            "params": [
                {
                    "name": "obj",
                    "description": "The Howl object for the sound to load.",
                    "type": "Object"
                },
                {
                    "name": "buffer",
                    "description": "The decoded buffer sound source.",
                    "type": "Objecct"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/howler.js",
            "line": 1150,
            "description": "Load the sound back into the buffer source.",
            "params": [
                {
                    "name": "obj",
                    "description": "The sound to load.",
                    "type": "Object"
                },
                {
                    "name": "loop",
                    "description": "Loop boolean, pos, and duration.",
                    "type": "Array"
                },
                {
                    "name": "id",
                    "description": "(optional) The play instance ID.",
                    "type": "String"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/howler.js",
            "line": 1174,
            "description": "Add support for AMD (Asynchronous Module Definition) libraries such as require.js.",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 47,
            "description": "Module encapsulation",
            "params": [
                {
                    "name": "global",
                    "description": "a reference to the global object :\n                     window in the browser, global on the server",
                    "type": "Object"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 80,
            "description": "Custom exception class to indicate invalid Point values",
            "params": [
                {
                    "name": "message",
                    "description": "error message",
                    "type": "String"
                },
                {
                    "name": "points",
                    "description": "invalid points",
                    "type": "Array<Point>"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 99,
            "description": "Construct a point",
            "params": [
                {
                    "name": "x",
                    "description": "coordinate (0 if undefined)",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "coordinate (0 if undefined)",
                    "type": "Number"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 115,
            "description": "For pretty printing ex. <i>\"(5;42)\"</i>)",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 122,
            "description": "Creates a copy of this Point object.",
            "return": {
                "description": "Point"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 130,
            "description": "Set this Point instance to the origo. <code>(0; 0)</code>",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 139,
            "description": "Set the coordinates of this instance.",
            "params": [
                {
                    "name": "x",
                    "description": "number."
                },
                {
                    "name": "y",
                    "description": "number;"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 150,
            "description": "Negate this Point instance. (component-wise)",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 159,
            "description": "Add another Point object to this instance. (component-wise)",
            "params": [
                {
                    "name": "n",
                    "description": "Point object."
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 169,
            "description": "Subtract this Point instance with another point given. (component-wise)",
            "params": [
                {
                    "name": "n",
                    "description": "Point object."
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 179,
            "description": "Multiply this Point instance by a scalar. (component-wise)",
            "params": [
                {
                    "name": "s",
                    "description": "scalar."
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 189,
            "description": "Return the distance of this Point instance from the origo.",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 196,
            "description": "Normalize this Point instance (as a vector).",
            "return": {
                "description": "The original distance of this instance from the origo."
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 207,
            "description": "Test this Point object with another for equality.",
            "params": [
                {
                    "name": "p",
                    "description": "any \"Point like\" object with  (duck typing)",
                    "type": "X,y"
                }
            ],
            "return": {
                "description": "<code>True</code> if <code>this == p</code>, <code>false</code> otherwise."
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 218,
            "description": "Negate a point component-wise and return the result as a new Point object.",
            "params": [
                {
                    "name": "p",
                    "description": "Point object."
                }
            ],
            "return": {
                "description": "the resulting Point object."
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 227,
            "description": "Add two points component-wise and return the result as a new Point object.",
            "params": [
                {
                    "name": "a",
                    "description": "Point object."
                },
                {
                    "name": "b",
                    "description": "Point object."
                }
            ],
            "return": {
                "description": "the resulting Point object."
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 237,
            "description": "Subtract two points component-wise and return the result as a new Point object.",
            "params": [
                {
                    "name": "a",
                    "description": "Point object."
                },
                {
                    "name": "b",
                    "description": "Point object."
                }
            ],
            "return": {
                "description": "the resulting Point object."
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 247,
            "description": "Multiply a point by a scalar and return the result as a new Point object.",
            "params": [
                {
                    "name": "s",
                    "description": "the scalar (a number)."
                },
                {
                    "name": "p",
                    "description": "Point object."
                }
            ],
            "return": {
                "description": "the resulting Point object."
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 257,
            "description": "Perform the cross product on either two points (this produces a scalar)\nor a point and a scalar (this produces a point).\nThis function requires two parameters, either may be a Point object or a\nnumber.",
            "params": [
                {
                    "name": "a",
                    "description": "Point object or scalar."
                },
                {
                    "name": "b",
                    "description": "Point object or scalar."
                }
            ],
            "return": {
                "description": "a   Point object or a number, depending on the parameters."
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 290,
            "description": "Point pretty printing ex. <i>\"(5;42)\"</i>)",
            "params": [
                {
                    "name": "p",
                    "description": "any \"Point like\" object with",
                    "type": "X,y"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 301,
            "description": "Compare two points component-wise.",
            "params": [
                {
                    "name": "a,b",
                    "description": "any \"Point like\" objects with",
                    "type": "X,y"
                }
            ],
            "return": {
                "description": "<code>&lt; 0</code> if <code>a &lt; b</code>, \n        <code>&gt; 0</code> if <code>a &gt; b</code>, \n        <code>0</code> otherwise."
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 317,
            "description": "Test two Point objects for equality.",
            "params": [
                {
                    "name": "a,b",
                    "description": "any \"Point like\" objects with",
                    "type": "X,y"
                }
            ],
            "return": {
                "description": "<code>True</code> if <code>a == b</code>, <code>false</code> otherwise."
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 326,
            "description": "Peform the dot product on two vectors.",
            "params": [
                {
                    "name": "a,b",
                    "description": "any \"Point like\" objects with",
                    "type": "X,y"
                }
            ],
            "return": {
                "description": "The dot product (as a number)."
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 337,
            "description": "Represents a simple polygon's edge",
            "params": [
                {
                    "name": "p1",
                    "description": "",
                    "type": "Point"
                },
                {
                    "name": "p2",
                    "description": "",
                    "type": "Point"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 365,
            "description": "Triangle class.<br>\nTriangle-based data structures are known to have better performance than\nquad-edge structures.\nSee: J. Shewchuk, \"Triangle: Engineering a 2D Quality Mesh Generator and\nDelaunay Triangulator\", \"Triangulations in CGAL\"",
            "params": [
                {
                    "name": "a,b,c",
                    "description": "any \"Point like\" objects with  (duck typing)",
                    "type": "X,y"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 387,
            "description": "For pretty printing ex. <i>\"[(5;42)(10;20)(21;30)]\"</i>)",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 405,
            "description": "Test if this Triangle contains the Point object given as parameters as its\nvertices. Only point references are compared, not values.",
            "return": {
                "description": "<code>True</code> if the Point object is of the Triangle's vertices,\n        <code>false</code> otherwise."
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 417,
            "description": "Test if this Triangle contains the Edge object given as parameter as its\nbounding edges. Only point references are compared, not values.",
            "return": {
                "description": "<code>True</code> if the Edge object is of the Triangle's bounding\n        edges, <code>false</code> otherwise."
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 439,
            "description": "Update neighbor pointers.",
            "params": [
                {
                    "name": "p1",
                    "description": "Point object.",
                    "type": "Point"
                },
                {
                    "name": "p2",
                    "description": "Point object.",
                    "type": "Point"
                },
                {
                    "name": "t",
                    "description": "Triangle object.",
                    "type": "Triangle"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 459,
            "description": "Exhaustive search to update neighbor pointers",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Triangle"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 490,
            "description": "Returns the point clockwise to the given point.",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 507,
            "description": "Returns the point counter-clockwise to the given point.",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 524,
            "description": "Returns the neighbor clockwise to given point.",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 538,
            "description": "Returns the neighbor counter-clockwise to given point.",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 640,
            "description": "The neighbor across to given point.",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 659,
            "description": "Legalize triangle by rotating clockwise around oPoint",
            "params": [
                {
                    "name": "opoint",
                    "description": "",
                    "type": "Point"
                },
                {
                    "name": "npoint",
                    "description": "",
                    "type": "Point"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 684,
            "description": "Returns the index of a point in the triangle. \nThe point *must* be a reference to one of the triangle's vertices.",
            "params": [
                {
                    "name": "p",
                    "description": "Point object",
                    "type": "Point"
                }
            ],
            "return": {
                "description": "index 0, 1 or 2",
                "type": "Number"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 729,
            "description": "Mark an edge of this triangle as constrained.<br>\nThis method takes either 1 parameter (an edge index or an Edge instance) or\n2 parameters (two Point instances defining the edge of the triangle).",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 769,
            "description": "Forumla to calculate signed area<br>\nPositive if CCW<br>\nNegative if CW<br>\n0 if collinear<br>\n<pre>\nA[P1,P2,P3]  =  (x1*y2 - y1*x2) + (x2*y3 - y2*x3) + (x3*y1 - y3*x1)\n             =  (x1-x3)*(y2-y3) - (y1-y3)*(x2-x3)\n</pre>",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 823,
            "description": "Advancing front node",
            "params": [
                {
                    "name": "p",
                    "description": "any \"Point like\" object with {x,y} (duck typing)",
                    "type": "Point"
                },
                {
                    "name": "t",
                    "description": "triangle (optionnal)",
                    "type": "Triangle"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 957,
            "description": "Constructor for the triangulation context.\nIt accepts a simple polyline, which defines the constrained edges.\nPossible options are:\n   cloneArrays:  if true, do a shallow copy of the Array parameters \n                 (contour, holes). Points inside arrays are never copied.\n                 Default is false : keep a reference to the array arguments,\n                 who will be modified in place.",
            "params": [
                {
                    "name": "contour",
                    "description": "array of \"Point like\" objects with {x,y} (duck typing)",
                    "type": "Array"
                },
                {
                    "name": "options",
                    "description": "constructor options",
                    "type": "Object"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 997,
            "description": "Add a hole to the constraints",
            "params": [
                {
                    "name": "polyline",
                    "description": "array of \"Point like\" objects with {x,y} (duck typing)",
                    "type": "Array"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 1013,
            "description": "Add a Steiner point to the constraints",
            "params": [
                {
                    "name": "point",
                    "description": "any \"Point like\" object with {x,y} (duck typing)",
                    "type": "Point"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 1025,
            "description": "Add several Steiner points to the constraints",
            "params": [
                {
                    "name": "points",
                    "description": "array of \"Point like\" object with {x,y}",
                    "type": "Array<Point>"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 1036,
            "description": "Triangulate the polygon with holes and Steiner points.",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 1047,
            "description": "Get the bounding box of the provided constraints (contour, holes and \nSteinter points). Warning : these values are not available if the triangulation \nhas not been done yet.",
            "return": {
                "description": "object with 'min' and 'max' Point",
                "type": "Object"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 1058,
            "description": "Get result of triangulation",
            "return": {
                "description": "array of triangles",
                "type": "Array<Triangle>"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 1193,
            "description": "Do a depth first traversal to collect triangles",
            "params": [
                {
                    "name": "triangle",
                    "description": "start",
                    "type": "Triangle"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 1217,
            "description": "The 'Sweep' object is present in order to keep this JavaScript version \nas close as possible to the reference C++ version, even though almost\nall Sweep methods could be declared as members of the SweepContext object.",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 1225,
            "description": "Triangulate the polygon with holes and Steiner points.",
            "params": [
                {
                    "name": "tcx",
                    "description": "SweepContext object."
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 1262,
            "description": "Find closes node to the left of the new point and\ncreate a new triangle. If needed new holes and basins\nwill be filled to.",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 1364,
            "description": "Adds a triangle to the advancing front to fill a hole.",
            "params": [
                {
                    "name": "tcx",
                    "description": ""
                },
                {
                    "name": "node",
                    "description": "- middle node, that is the bottom of the hole"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 1392,
            "description": "Fills holes in the Advancing Front",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 1434,
            "params": [
                {
                    "name": "node",
                    "description": "- middle node"
                }
            ],
            "return": {
                "description": "the angle between 3 front nodes"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 1455,
            "description": "Returns true if triangle was legalized",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 1516,
            "description": "<b>Requirement</b>:<br>\n1. a,b and c form a triangle.<br>\n2. a and d is know to be on opposite side of bc<br>\n<pre>\n               a\n               +\n              / \\\n             /   \\\n           b/     \\c\n           +-------+\n          /    d    \\\n         /           \\\n</pre>\n<b>Fact</b>: d has to be in area B to have a chance to be inside the circle formed by\n a,b and c<br>\n d is outside B if orient2d(a,b,d) or orient2d(c,a,d) is CW<br>\n This preknowledge gives us a way to optimize the incircle test",
            "params": [
                {
                    "name": "pa",
                    "description": "- triangle point, opposite d"
                },
                {
                    "name": "pb",
                    "description": "- triangle point"
                },
                {
                    "name": "pc",
                    "description": "- triangle point"
                },
                {
                    "name": "pd",
                    "description": "- point opposite a"
                }
            ],
            "return": {
                "description": "true if d is inside circle, false if on circle edge"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 1574,
            "description": "Rotates a triangle pair one vertex CW\n<pre>\n      n2                    n2\n P +-----+             P +-----+\n   | t  /|               |\\  t |\n   |   / |               | \\   |\n n1|  /  |n3           n1|  \\  |n3\n   | /   |    after CW   |   \\ |\n   |/ oT |               | oT \\|\n   +-----+ oP            +-----+\n      n4                    n4\n</pre>",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 1644,
            "description": "Fills a basin that has formed on the Advancing Front to the right\nof given node.<br>\nFirst we decide a left,bottom and right node that forms the\nboundaries of the basin. Then we do a reqursive fill.",
            "params": [
                {
                    "name": "tcx",
                    "description": ""
                },
                {
                    "name": "node",
                    "description": "- starting node, this or next node will be left node"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/poly2tri.js",
            "line": 1685,
            "description": "Recursive algorithm to fill a Basin with triangles",
            "params": [
                {
                    "name": "tcx",
                    "description": ""
                },
                {
                    "name": "node",
                    "description": "- bottom_node"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/require.js",
            "line": 1,
            "license": "RequireJS 2.1.2 Copyright (c) 2010-2012, The Dojo Foundation All Rights Reserved.\nAvailable via the MIT or new BSD license.\nsee: http://github.com/jrburke/requirejs for details",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/require.js",
            "line": 50,
            "description": "Helper function for iterating over an array. If the func returns\na true value, it will break out of the loop.",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/require.js",
            "line": 65,
            "description": "Helper function for iterating over an array backwards. If the func\nreturns a true value, it will break out of the loop.",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/require.js",
            "line": 88,
            "description": "Cycles over properties in an object and calls a function for each\nproperty value. If the function returns a truthy value, then the\niteration is stopped.",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/require.js",
            "line": 104,
            "description": "Simple function to mix in properties from source into target,\nbut only if target does not already have a property of the same name.",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/require.js",
            "line": 151,
            "description": "Constructs an error with a pointer to an URL with more information.",
            "params": [
                {
                    "name": "id",
                    "description": "the error ID that maps to an ID on a web page.",
                    "type": "String"
                },
                {
                    "name": "message",
                    "description": "human readable error.",
                    "type": "String"
                },
                {
                    "name": "err",
                    "description": "the original error, if there is one.",
                    "type": "Error",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Error"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/require.js",
            "line": 211,
            "description": "Trims the . and .. from an array of path segments.\nIt will keep a leading path segment if a .. will become\nthe first path segment, to help with module name lookups,\nwhich act like paths, but can be remapped. But the end result,\nall paths that use this function should look normalized.\nNOTE: this method MODIFIES the input array.",
            "params": [
                {
                    "name": "ary",
                    "description": "the array of path segments.",
                    "type": "Array"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/require.js",
            "line": 244,
            "description": "Given a relative module name, like ./something, normalize it to\na real name that can be mapped to a path.",
            "params": [
                {
                    "name": "name",
                    "description": "the relative name",
                    "type": "String"
                },
                {
                    "name": "baseName",
                    "description": "a real name that the name arg is relative\nto.",
                    "type": "String"
                },
                {
                    "name": "applyMap",
                    "description": "apply the map config to the value. Should\nonly be done if this normalization is for a dependency ID.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "normalized name",
                "type": "String"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/require.js",
            "line": 390,
            "description": "Creates a module mapping that includes plugin prefix, module\nname, and path. If parentModuleMap is provided it will\nalso normalize the name via require.normalize()",
            "params": [
                {
                    "name": "name",
                    "description": "the module name",
                    "type": "String"
                },
                {
                    "name": "parentModuleMap",
                    "description": "parent module map\nfor the module name, used to resolve relative names.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "isNormalized:",
                    "description": "is the ID already normalized.\nThis is true if this call is done for a define() module ID.",
                    "type": "Boolean"
                },
                {
                    "name": "applyMap:",
                    "description": "apply the map config to the ID.\nShould only be true if this map is for a dependency.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/require.js",
            "line": 527,
            "description": "Internal method to transfer globalQueue items to this context's\ndefQueue.",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/require.js",
            "line": 808,
            "description": "Checks is the module is ready to define itself, and if so,\ndefine it.",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/require.js",
            "line": 1163,
            "description": "Given an event from a script node, get the requirejs info from it,\nand then removes the event listeners on the node.",
            "params": [
                {
                    "name": "evt",
                    "description": "",
                    "type": "Event"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/require.js",
            "line": 1215,
            "description": "Set a configuration for the context.",
            "params": [
                {
                    "name": "cfg",
                    "description": "config object to integrate.",
                    "type": "Object"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/require.js",
            "line": 1397,
            "description": "Converts a module name + .extension into an URL path.\n*Requires* the use of a module name. It does not support using\nplain URLs like nameToUrl.",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/require.js",
            "line": 1455,
            "description": "Called to enable a module if it is still in the registry\nawaiting enablement. parent module is passed in for context,\nused by the optimizer.",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/require.js",
            "line": 1467,
            "description": "Internal method used by environment adapters to complete a load event.\nA load event could be a script load or just a load pass from a synchronous\nload call.",
            "params": [
                {
                    "name": "moduleName",
                    "description": "the name of the module to potentially complete.",
                    "type": "String"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/require.js",
            "line": 1523,
            "description": "Converts a module name to a file path. Supports cases where\nmoduleName may actually be just an URL.\nNote that it **does not** call normalize on the moduleName,\nit is assumed to have already been normalized. This is an\ninternal API, not a public one. Use toUrl for the public API.",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/require.js",
            "line": 1594,
            "description": "Executes a module callack function. Broken out as a separate function\nsolely to allow the build system to sequence the files in the built\nlayer in the right sequence.",
            "access": "private",
            "tagname": "",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/require.js",
            "line": 1605,
            "description": "callback for script loads, used to check status of loading.",
            "params": [
                {
                    "name": "evt",
                    "description": "the event from the browser for the script\nthat was loaded.",
                    "type": "Event"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/require.js",
            "line": 1627,
            "description": "Callback for script errors.",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/require.js",
            "line": 1642,
            "description": "Main entry point.\n\nIf the only argument to require is a string, then the module that\nis represented by that string is fetched for the appropriate context.\n\nIf the first argument is an array, then it will be treated as an array\nof dependency string names to fetch. An optional function callback can\nbe specified to execute when all of those dependencies are available.\n\nMake a local req variable to help Caja compliance (it assumes things\non a require that are not standardized), and to give a short\nname for minification/local scope use.",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/require.js",
            "line": 1692,
            "description": "Support require.config() to make it easier to cooperate with other\nAMD loaders on globally agreed names.",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/require.js",
            "line": 1700,
            "description": "Execute something after the current tick\nof the event loop. Override for other envs\nthat have a better solution than setTimeout.",
            "params": [
                {
                    "name": "fn",
                    "description": "function to execute later.",
                    "type": "Function"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/require.js",
            "line": 1712,
            "description": "Export require as a global, but only if it does not already exist.",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/require.js",
            "line": 1759,
            "description": "Any errors that require explicitly generates will be passed to this\nfunction. Intercept/override it if you want custom error handling.",
            "params": [
                {
                    "name": "err",
                    "description": "the error object.",
                    "type": "Error"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/require.js",
            "line": 1768,
            "description": "Does the request to load a module for the browser case.\nMake this a separate function to allow other environments\nto override it.",
            "params": [
                {
                    "name": "context",
                    "description": "the require context to find state.",
                    "type": "Object"
                },
                {
                    "name": "moduleName",
                    "description": "the name of the module.",
                    "type": "String"
                },
                {
                    "name": "url",
                    "description": "the URL to the module.",
                    "type": "Object"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/require.js",
            "line": 1912,
            "description": "The function that handles definitions of modules. Differs from\nrequire() in that a string for the module should be the first argument,\nand the function to execute after dependencies are loaded should\nreturn a value to define the module corresponding to the first argument's\nname.",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/require.js",
            "line": 1985,
            "description": "Executes the text. Normally just uses eval, but can be modified\nto use a better, environment-specific call. Only used for transpiling\nloader plugins, not for plain JS modules.",
            "params": [
                {
                    "name": "text",
                    "description": "the text to execute/evaluate.",
                    "type": "String"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/spine.js",
            "line": 1,
            "description": "Spine Runtime Software License - Version 1.1\n\nCopyright (c) 2013, Esoteric Software\nAll rights reserved.\n\nRedistribution and use in source and binary forms in whole or in part, with\nor without modification, are permitted provided that the following conditions\nare met:\n\n1. A Spine Essential, Professional, Enterprise, or Education License must\n   be purchased from Esoteric Software and the license must remain valid:\n   http://esotericsoftware.com/\n2. Redistributions of source code must retain this license, which is the\n   above copyright notice, this declaration of conditions and the following\n   disclaimer.\n3. Redistributions in binary form must reproduce this license, which is the\n   above copyright notice, this declaration of conditions and the following\n   disclaimer, in the documentation and/or other materials provided with the\n   distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/spine.js",
            "line": 238,
            "description": "cx1 and cx2 are from 0 to 1, representing the percent of time between the two keyframes. cy1 and cy2 are the percent of",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/spine.js",
            "line": 535,
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/spine.js",
            "line": 613,
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/spine.js",
            "line": 620,
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/spine.js",
            "line": 627,
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/spine.js",
            "line": 635,
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/spine.js",
            "line": 642,
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/spine.js",
            "line": 649,
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/spine.js",
            "line": 656,
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/spine.js",
            "line": 691,
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/spine.js",
            "line": 699,
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/spine.js",
            "line": 714,
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/spine.js",
            "line": 718,
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/spine.js",
            "line": 725,
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/spine.js",
            "line": 732,
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/spine.js",
            "line": 739,
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/spine.js",
            "line": 751,
            "description": "from the new skin are attached if the corresponding attachment from the old skin was attached.",
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/spine.js",
            "line": 758,
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/spine.js",
            "line": 762,
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/spine.js",
            "line": 771,
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/spine.js",
            "line": 1082,
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/spine.js",
            "line": 1096,
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/spine.js",
            "line": 1122,
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/spine.js",
            "line": 1612,
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/spine.js",
            "line": 1717,
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/spine.js",
            "line": 1721,
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/spine.js",
            "line": 1737,
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/spine.js",
            "line": 1741,
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/spine.js",
            "line": 1749,
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/spine.js",
            "line": 1757,
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/lib-ext/spine.js",
            "line": 1773,
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/renderer/renderer.js",
            "line": 14,
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/animation.js",
            "line": 11,
            "is_constructor": 1,
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "image",
                    "description": "image imagepath or image object",
                    "type": "String, image"
                },
                {
                    "name": "position",
                    "description": "position object",
                    "type": "Point"
                },
                {
                    "name": "startframe",
                    "description": "startframe of atlas image",
                    "type": "Number"
                },
                {
                    "name": "endframe",
                    "description": "endframe endframe of atlas image",
                    "type": "Number"
                },
                {
                    "name": "framewidth",
                    "description": "framewidth width of frame to cut",
                    "type": "Number"
                },
                {
                    "name": "frameheight",
                    "description": "frameheight height of frame to cut",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.Animation",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/animation.js",
            "line": 33,
            "itemtype": "property",
            "name": "loop",
            "type": "Boolean",
            "class": "CG.Animation",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/animation.js",
            "line": 37,
            "itemtype": "property",
            "name": "status",
            "type": "Number",
            "class": "CG.Animation",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/animation.js",
            "line": 41,
            "itemtype": "property",
            "name": "currentframe",
            "type": "Number",
            "class": "CG.Animation",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/animation.js",
            "line": 45,
            "itemtype": "property",
            "name": "frames",
            "type": "Number",
            "class": "CG.Animation",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/animation.js",
            "line": 49,
            "itemtype": "property",
            "name": "startframe",
            "type": "Number",
            "class": "CG.Animation",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/animation.js",
            "line": 53,
            "itemtype": "property",
            "name": "endframe",
            "type": "Number",
            "class": "CG.Animation",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/animation.js",
            "line": 57,
            "itemtype": "property",
            "name": "width",
            "type": "Number",
            "class": "CG.Animation",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/animation.js",
            "line": 61,
            "itemtype": "property",
            "name": "height",
            "type": "Number",
            "class": "CG.Animation",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/animation.js",
            "line": 75,
            "itemtype": "property",
            "name": "fx",
            "type": "Number",
            "class": "CG.Animation",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/animation.js",
            "line": 79,
            "itemtype": "property",
            "name": "fy",
            "type": "Number",
            "class": "CG.Animation",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/animation.js",
            "line": 84,
            "itemtype": "property",
            "name": "delay",
            "type": "Number",
            "class": "CG.Animation",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/animation.js",
            "line": 88,
            "itemtype": "property",
            "name": "tempdelay",
            "type": "Number",
            "class": "CG.Animation",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/button.js",
            "line": 11,
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "params": [
                {
                    "name": "image",
                    "description": "image image path, image or tpimage",
                    "type": "Image"
                },
                {
                    "name": "position",
                    "description": "position point",
                    "type": "CG.Point"
                },
                {
                    "name": "text",
                    "description": "the button text",
                    "type": "String"
                },
                {
                    "name": "font",
                    "description": "a CG.Font object for text rendering",
                    "type": "CG.Font"
                },
                {
                    "name": "clickedCallback",
                    "description": "callback function for click handling",
                    "type": "Callback"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.Button",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/button.js",
            "line": 24,
            "itemtype": "property",
            "name": "font",
            "type": "CG.Font",
            "class": "CG.Button",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/button.js",
            "line": 28,
            "itemtype": "property",
            "name": "clickedCallback",
            "type": "Callback",
            "class": "CG.Button",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/button.js",
            "line": 32,
            "itemtype": "property",
            "name": "clicked",
            "type": "Boolean",
            "class": "CG.Button",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/button.js",
            "line": 36,
            "itemtype": "property",
            "name": "clickable",
            "type": "Boolean",
            "class": "CG.Button",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/button.js",
            "line": 41,
            "itemtype": "property",
            "name": "text",
            "type": "String",
            "class": "CG.Button",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/particle.js",
            "line": 12,
            "is_constructor": 1,
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "image",
                    "description": "image imgpath, image object or tpimage object to use for the particle",
                    "type": "Mixed"
                }
            ],
            "class": "CG.Particle",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/particle.js",
            "line": 19,
            "itemtype": "property",
            "name": "lifetime",
            "type": "{Number}",
            "class": "CG.Particle",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/particle.js",
            "line": 24,
            "itemtype": "property",
            "name": "currtime",
            "type": "{Number}",
            "class": "CG.Particle",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/particle.js",
            "line": 29,
            "itemtype": "property",
            "name": "aging",
            "type": "{Number}",
            "class": "CG.Particle",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/particle.js",
            "line": 34,
            "itemtype": "property",
            "name": "fadeout",
            "type": "{Boolean}",
            "class": "CG.Particle",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/particle.js",
            "line": 39,
            "itemtype": "property",
            "name": "alpha",
            "type": "{Number}",
            "class": "CG.Particle",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/particle.js",
            "line": 44,
            "itemtype": "property",
            "name": "gravity",
            "type": "{Number}",
            "class": "CG.Particle",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/sprite.js",
            "line": 10,
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "params": [
                {
                    "name": "image",
                    "description": "imgpath, image object or tpimage object to use",
                    "type": "Image"
                },
                {
                    "name": "position",
                    "description": "position object",
                    "type": "CG.Point"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.Sprite",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/sprite.js",
            "line": 20,
            "itemtype": "property",
            "name": "atlasimage",
            "type": "Boolean",
            "class": "CG.Sprite",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/sprite.js",
            "line": 26,
            "itemtype": "property",
            "name": "bound",
            "type": "CG.Bound",
            "class": "CG.Sprite",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/sprite.js",
            "line": 30,
            "itemtype": "property",
            "name": "diffpoint",
            "type": "CG.Point",
            "class": "CG.Sprite",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/sprite.js",
            "line": 35,
            "itemtype": "property",
            "name": "xspeed",
            "type": "Number",
            "class": "CG.Sprite",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/sprite.js",
            "line": 39,
            "itemtype": "property",
            "name": "xscale",
            "type": "Number",
            "class": "CG.Sprite",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/sprite.js",
            "line": 43,
            "itemtype": "property",
            "name": "xhandle",
            "type": "Number",
            "class": "CG.Sprite",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/sprite.js",
            "line": 47,
            "itemtype": "property",
            "name": "yspeed",
            "type": "Number",
            "class": "CG.Sprite",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/sprite.js",
            "line": 51,
            "itemtype": "property",
            "name": "yscale",
            "type": "Number",
            "class": "CG.Sprite",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/sprite.js",
            "line": 55,
            "itemtype": "property",
            "name": "yhandle",
            "type": "Number",
            "class": "CG.Sprite",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/sprite.js",
            "line": 59,
            "itemtype": "property",
            "name": "boundsMode",
            "type": "False/string",
            "class": "CG.Sprite",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/sprite.js",
            "line": 63,
            "itemtype": "property",
            "name": "rotation",
            "type": "Integer/float",
            "class": "CG.Sprite",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/sprite.js",
            "line": 67,
            "itemtype": "property",
            "name": "rotationspeed",
            "type": "Integer/float",
            "class": "CG.Sprite",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/sprite.js",
            "line": 71,
            "itemtype": "property",
            "name": "alpha",
            "type": "Float",
            "class": "CG.Sprite",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/sprite.js",
            "line": 75,
            "itemtype": "property",
            "name": "clicked",
            "type": "Boolean",
            "class": "CG.Sprite",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/sprite.js",
            "line": 80,
            "itemtype": "property",
            "name": "followobject",
            "type": "Boolean/object",
            "class": "CG.Sprite",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/sprite.js",
            "line": 84,
            "itemtype": "property",
            "name": "followspeed",
            "type": "Boolean/integer",
            "class": "CG.Sprite",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/sprite.js",
            "line": 88,
            "itemtype": "property",
            "name": "followsteps",
            "type": "Boolean/integer",
            "class": "CG.Sprite",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/sprite.js",
            "line": 93,
            "itemtype": "property",
            "name": "attachedobject",
            "type": "Boolean",
            "class": "CG.Sprite",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/sprite.js",
            "line": 97,
            "itemtype": "property",
            "name": "offsetx",
            "type": "Number",
            "class": "CG.Sprite",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/sprite.js",
            "line": 101,
            "itemtype": "property",
            "name": "offsety",
            "type": "Number",
            "class": "CG.Sprite",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/sprite.js",
            "line": 142,
            "description": "Checks the bound if a boundMode (bounce or slide) is set",
            "itemtype": "method",
            "name": "checkBound",
            "class": "CG.Sprite",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/sprite.js",
            "line": 185,
            "description": "calculate offset if bound is moving",
            "itemtype": "method",
            "name": "updateDiff",
            "class": "CG.Sprite",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/sprite.js",
            "line": 199,
            "description": "is there an attached element, this sprite will follow it depending on followspeed or followsteps it follows different",
            "itemtype": "method",
            "name": "follow",
            "class": "CG.Sprite",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/sprite.js",
            "line": 233,
            "description": "set the bound of the sprite",
            "itemtype": "method",
            "name": "setBound",
            "params": [
                {
                    "name": "bound",
                    "description": "the bound",
                    "type": "CG.Bound"
                }
            ],
            "class": "CG.Sprite",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/sprite.js",
            "line": 244,
            "description": "if there is a attached object get its position",
            "itemtype": "method",
            "name": "ifAttached",
            "class": "CG.Sprite",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/sprite.js",
            "line": 255,
            "description": "attach a reference of the given object to this object",
            "itemtype": "method",
            "name": "attachObject",
            "class": "CG.Sprite",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/sprite.js",
            "line": 264,
            "description": "removes the attached object reference",
            "itemtype": "method",
            "name": "removeAttachedObject",
            "class": "CG.Sprite",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/sprite.js",
            "line": 273,
            "description": "set the x offset of the attached object to this object",
            "itemtype": "method",
            "name": "setAttachedOffsetX",
            "class": "CG.Sprite",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/sprite.js",
            "line": 282,
            "description": "set the y offset of the attached object to this object",
            "itemtype": "method",
            "name": "setAttachedOffsetY",
            "class": "CG.Sprite",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 17,
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 23,
            "itemtype": "property",
            "name": "atlas",
            "type": "Image",
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 27,
            "itemtype": "property",
            "name": "initText",
            "type": "String",
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 31,
            "itemtype": "property",
            "name": "chars",
            "type": "Array",
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 35,
            "itemtype": "property",
            "name": "x",
            "type": "Array",
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 39,
            "itemtype": "property",
            "name": "y",
            "type": "Array",
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 43,
            "itemtype": "property",
            "name": "width",
            "type": "Array",
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 47,
            "itemtype": "property",
            "name": "height",
            "type": "Array",
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 51,
            "itemtype": "property",
            "name": "xoff",
            "type": "Array",
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 55,
            "itemtype": "property",
            "name": "yoff",
            "type": "Array",
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 59,
            "itemtype": "property",
            "name": "xadv",
            "type": "Array",
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 63,
            "itemtype": "property",
            "name": "lineHeight",
            "type": "Number",
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 67,
            "itemtype": "property",
            "name": "face",
            "type": "String",
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 71,
            "itemtype": "property",
            "name": "size",
            "type": "Number",
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 75,
            "itemtype": "property",
            "name": "bold",
            "type": "Number",
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 79,
            "itemtype": "property",
            "name": "italic",
            "type": "Number",
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 84,
            "itemtype": "property",
            "name": "base",
            "type": "Number",
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 88,
            "itemtype": "property",
            "name": "scaleW",
            "type": "Number",
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 92,
            "itemtype": "property",
            "name": "scaleH",
            "type": "Number",
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 98,
            "itemtype": "method",
            "name": "update",
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 107,
            "itemtype": "method",
            "name": "draw",
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 116,
            "description": "draw the given text to the canvas",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "text",
                    "description": "the text to draw",
                    "type": "String"
                },
                {
                    "name": "xpos",
                    "description": "the x position",
                    "type": "Number"
                },
                {
                    "name": "ypos",
                    "description": "the y position",
                    "type": "Number"
                }
            ],
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 148,
            "description": "get the line height of the current font",
            "itemtype": "method",
            "name": "getLineHeight",
            "return": {
                "description": "lineheight",
                "type": "Number"
            },
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 157,
            "description": "get the font size of the current font",
            "itemtype": "method",
            "name": "getFontSize",
            "return": {
                "description": "size  font size",
                "type": "Number"
            },
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 166,
            "description": "get the width of the given text",
            "itemtype": "method",
            "name": "getTextWidth",
            "params": [
                {
                    "name": "text",
                    "description": "the string to calculate the width",
                    "type": "String"
                }
            ],
            "return": {
                "description": "textwidth",
                "type": "Number"
            },
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 181,
            "description": "loadFont - load and parse the given fontfile",
            "itemtype": "method",
            "name": "loadFont",
            "params": [
                {
                    "name": "fontfile",
                    "description": "path or mediaasset object with data",
                    "type": "String/object"
                }
            ],
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/text.js",
            "line": 11,
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "font",
                    "description": "the font object (CG.Font) to use"
                }
            ],
            "is_constructor": 1,
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.Text",
            "module": "CG"
        },
        {
            "file": "cangaja/text/text.js",
            "line": 20,
            "itemtype": "property",
            "name": "font",
            "type": "CG.Font",
            "class": "CG.Text",
            "module": "CG"
        },
        {
            "file": "cangaja/text/text.js",
            "line": 25,
            "itemtype": "property",
            "name": "text",
            "type": "String",
            "class": "CG.Text",
            "module": "CG"
        },
        {
            "file": "cangaja/text/text.js",
            "line": 30,
            "itemtype": "property",
            "name": "textcurrent",
            "type": "String",
            "class": "CG.Text",
            "module": "CG"
        },
        {
            "file": "cangaja/text/text.js",
            "line": 35,
            "itemtype": "property",
            "name": "x  the x position",
            "type": "Number",
            "class": "CG.Text",
            "module": "CG"
        },
        {
            "file": "cangaja/text/text.js",
            "line": 40,
            "itemtype": "property",
            "name": "y  the y position",
            "type": "Number",
            "class": "CG.Text",
            "module": "CG"
        },
        {
            "file": "cangaja/text/text.js",
            "line": 45,
            "itemtype": "property",
            "name": "width  width of textbox",
            "type": "Number",
            "class": "CG.Text",
            "module": "CG"
        },
        {
            "file": "cangaja/text/text.js",
            "line": 50,
            "itemtype": "property",
            "name": "height  height of textbox",
            "type": "Number",
            "class": "CG.Text",
            "module": "CG"
        },
        {
            "file": "cangaja/text/text.js",
            "line": 55,
            "itemtype": "property",
            "name": "textAlign  alignment of text",
            "type": "String",
            "class": "CG.Text",
            "module": "CG"
        },
        {
            "file": "cangaja/text/text.js",
            "line": 72,
            "itemtype": "method",
            "name": "setText",
            "params": [
                {
                    "name": "text",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.Text",
            "module": "CG"
        },
        {
            "file": "cangaja/text/text.js",
            "line": 81,
            "itemtype": "method",
            "name": "update",
            "class": "CG.Text",
            "module": "CG"
        },
        {
            "file": "cangaja/text/text.js",
            "line": 87,
            "itemtype": "method",
            "name": "draw",
            "class": "CG.Text",
            "module": "CG"
        },
        {
            "file": "cangaja/texturepacker/texturepacker.js",
            "line": 12,
            "is_constructor": 1,
            "itemtype": "method",
            "name": "init",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.TexturePacker",
            "module": "CG"
        },
        {
            "file": "cangaja/texturepacker/texturepacker.js",
            "line": 23,
            "itemtype": "property",
            "name": "imagename",
            "type": "{String}",
            "class": "CG.TexturePacker",
            "module": "CG"
        },
        {
            "file": "cangaja/texturepacker/texturepacker.js",
            "line": 28,
            "itemtype": "property",
            "name": "width",
            "type": "{Number}",
            "class": "CG.TexturePacker",
            "module": "CG"
        },
        {
            "file": "cangaja/texturepacker/texturepacker.js",
            "line": 33,
            "itemtype": "property",
            "name": "height",
            "type": "{Number}",
            "class": "CG.TexturePacker",
            "module": "CG"
        },
        {
            "file": "cangaja/texturepacker/texturepacker.js",
            "line": 38,
            "itemtype": "property",
            "name": "tpimages",
            "type": "{Array}",
            "class": "CG.TexturePacker",
            "module": "CG"
        },
        {
            "file": "cangaja/texturepacker/texturepacker.js",
            "line": 45,
            "description": "load a xml file from texturepacker",
            "itemtype": "method",
            "name": "loadXml",
            "params": [
                {
                    "name": "xmlfile",
                    "description": "path or mediaasset object with data of texturepacker xml",
                    "type": "String/object"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.TexturePacker",
            "module": "CG"
        },
        {
            "file": "cangaja/texturepacker/texturepacker.js",
            "line": 86,
            "description": "load a json file from texturepacker",
            "itemtype": "method",
            "name": "loadJson",
            "params": [
                {
                    "name": "jsonfile",
                    "description": "path or mediaasset object with data of texturepacker json",
                    "type": "String/object"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.TexturePacker",
            "module": "CG"
        },
        {
            "file": "cangaja/texturepacker/texturepacker.js",
            "line": 128,
            "description": "get all texturepacker images (Use array.push.apply(array, anotherarray) to append to Game.asset)",
            "itemtype": "method",
            "name": "getTPImages",
            "return": {
                "description": "returns all tpimages of texturepacker file to use with Game.asset",
                "type": "Array"
            },
            "class": "CG.TexturePacker",
            "module": "CG"
        },
        {
            "file": "cangaja/texturepacker/tpimage.js",
            "line": 10,
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "params": [
                {
                    "name": "image",
                    "description": "imgpath, image object or tpimage object to use",
                    "type": "Image"
                },
                {
                    "name": "xoffset",
                    "description": "xoffset of image in atlas file",
                    "type": "Number"
                },
                {
                    "name": "yoffset",
                    "description": "yoffset of image in atlas file",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "width of image in atlas file",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "height of image in atlas file",
                    "type": "Number"
                }
            ],
            "class": "CG.TPImage",
            "module": "CG"
        },
        {
            "file": "cangaja/texturepacker/tpimage.js",
            "line": 20,
            "itemtype": "property",
            "name": "source",
            "type": "{String}",
            "class": "CG.TPImage",
            "module": "CG"
        },
        {
            "file": "cangaja/texturepacker/tpimage.js",
            "line": 25,
            "itemtype": "property",
            "name": "atlasimage",
            "type": "{String}",
            "class": "CG.TPImage",
            "module": "CG"
        },
        {
            "file": "cangaja/texturepacker/tpimage.js",
            "line": 30,
            "itemtype": "property",
            "name": "atlasname",
            "type": "{String}",
            "class": "CG.TPImage",
            "module": "CG"
        },
        {
            "file": "cangaja/texturepacker/tpimage.js",
            "line": 35,
            "itemtype": "property",
            "name": "image",
            "type": "{*}",
            "class": "CG.TPImage",
            "module": "CG"
        },
        {
            "file": "cangaja/texturepacker/tpimage.js",
            "line": 40,
            "itemtype": "property",
            "name": "name",
            "type": "{String}",
            "class": "CG.TPImage",
            "module": "CG"
        },
        {
            "file": "cangaja/texturepacker/tpimage.js",
            "line": 45,
            "itemtype": "property",
            "name": "xoffset",
            "type": "{Number}",
            "class": "CG.TPImage",
            "module": "CG"
        },
        {
            "file": "cangaja/texturepacker/tpimage.js",
            "line": 50,
            "itemtype": "property",
            "name": "yoffset",
            "type": "{*}",
            "class": "CG.TPImage",
            "module": "CG"
        },
        {
            "file": "cangaja/texturepacker/tpimage.js",
            "line": 55,
            "itemtype": "property",
            "name": "width",
            "type": "{Number}",
            "class": "CG.TPImage",
            "module": "CG"
        },
        {
            "file": "cangaja/texturepacker/tpimage.js",
            "line": 60,
            "itemtype": "property",
            "name": "height",
            "type": "{Number}",
            "class": "CG.TPImage",
            "module": "CG"
        },
        {
            "file": "cangaja/texturepacker/tpimage.js",
            "line": 65,
            "itemtype": "property",
            "name": "rotation",
            "type": "{Number}",
            "class": "CG.TPImage",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 23,
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "params": [
                {
                    "name": "width",
                    "description": "width of the map",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "height of the map",
                    "type": "Number"
                },
                {
                    "name": "mapname",
                    "description": "mapname",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 34,
            "itemtype": "property",
            "name": "elements",
            "type": "{Array}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 43,
            "itemtype": "property",
            "name": "points",
            "type": "{Array}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 48,
            "itemtype": "property",
            "name": "areas",
            "type": "{Array}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 53,
            "itemtype": "property",
            "name": "position",
            "type": "{CG.Point}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 58,
            "itemtype": "property",
            "name": "changemap",
            "type": "{String}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 63,
            "description": "If set to true the map is being updated with method updateAnimation.\nSee also method description of updateAnimation!",
            "itemtype": "property",
            "name": "animated",
            "type": "{Boolean}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 73,
            "itemtype": "property",
            "name": "animDelayFactor",
            "type": "{Number}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 78,
            "itemtype": "property",
            "name": "atlas",
            "type": "{Image}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 83,
            "itemtype": "property",
            "name": "atlaswidth",
            "type": "{Number}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 88,
            "itemtype": "property",
            "name": "atlasheight",
            "type": "{Number}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 93,
            "itemtype": "property",
            "name": "atlastranscol",
            "type": "{String}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 100,
            "itemtype": "property",
            "name": "xml",
            "type": "{String}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 105,
            "itemtype": "property",
            "name": "parser",
            "type": "{DOMParser}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 110,
            "itemtype": "property",
            "name": "xmlDoc",
            "type": "{String}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 116,
            "itemtype": "property",
            "name": "json",
            "type": "{Object}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 121,
            "description": "The tiled layer are parsed into separate layers",
            "itemtype": "property",
            "name": "layers",
            "type": "{Array}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 130,
            "description": "Defines the layer to draw:\nall - for all layers\nname - the name of layer to draw\nindex - array index of layer",
            "itemtype": "property",
            "name": "renderlayer",
            "type": "{String}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 142,
            "itemtype": "property",
            "name": "tileproperties",
            "type": "{Array}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 147,
            "itemtype": "property",
            "name": "orientation",
            "type": "{String}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 152,
            "itemtype": "property",
            "name": "width",
            "type": "{Number}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 157,
            "itemtype": "property",
            "name": "height",
            "type": "{Number}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 162,
            "itemtype": "property",
            "name": "tilewidth",
            "type": "{Number}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 167,
            "itemtype": "property",
            "name": "tileheight",
            "type": "{Number}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 172,
            "itemtype": "property",
            "name": "tileset",
            "type": "{Object}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 184,
            "itemtype": "property",
            "name": "xspeed",
            "type": "{Number}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 189,
            "itemtype": "property",
            "name": "yspeed",
            "type": "{Number}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 194,
            "itemtype": "property",
            "name": "xscale",
            "type": "{Number}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 199,
            "itemtype": "property",
            "name": "yscale",
            "type": "{Number}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 204,
            "itemtype": "property",
            "name": "alpha",
            "type": "{Number}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 209,
            "itemtype": "property",
            "name": "wrapX",
            "deprecated": true,
            "type": "{Boolean}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 215,
            "itemtype": "property",
            "name": "wrapY",
            "deprecated": true,
            "type": "{Boolean}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 221,
            "itemtype": "property",
            "name": "layertocheck",
            "type": "{Number}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 228,
            "description": "Load and parse an xml tilemap file. It can handle the tiled XML and CSV format.\nAll other formats are not supported!",
            "itemtype": "method",
            "name": "loadMapXml",
            "params": [
                {
                    "name": "xmlfile",
                    "description": "xmlfile path or mediaasset object with data of tiled map xml",
                    "type": "String/object"
                }
            ],
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 408,
            "description": "Load and parse an tilemap json file. Use the tiled json export.\nHopefully the json format has the same functionality as the xml loader ;o)",
            "itemtype": "method",
            "name": "loadMapJson",
            "params": [
                {
                    "name": "jsonfile",
                    "description": "jsonfile path or mediaasset object with data of tiled map xml",
                    "type": "String/object"
                }
            ],
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 522,
            "description": "This is the main method for map drawing. Orthogonal maps works very well. Isometric maps are not well implemented yet.",
            "itemtype": "method",
            "name": "drawMap",
            "params": [
                {
                    "name": "sx",
                    "description": "sx top left coord for canvas drawing",
                    "type": "Number"
                },
                {
                    "name": "sy",
                    "description": "sy top left coord for canvas drawing",
                    "type": "Number"
                },
                {
                    "name": "bx",
                    "description": "bx top left x coord of bound in tilemap",
                    "type": "Number"
                },
                {
                    "name": "by",
                    "description": "by top left y coord of bound in tilemap",
                    "type": "Number"
                },
                {
                    "name": "bw",
                    "description": "bw width of bound in tilemap",
                    "type": "Number"
                },
                {
                    "name": "bh",
                    "description": "bh height of bound in tilemap",
                    "type": "Number"
                },
                {
                    "name": "callback",
                    "description": "callback for collision handling - callback(obj,maptileproperties)",
                    "type": "Callback"
                }
            ],
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 688,
            "description": "Update all areas and points elements.",
            "itemtype": "method",
            "name": "updatePointsAndAreas",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 705,
            "description": "Get all point(s) with the given name in the points",
            "itemtype": "method",
            "name": "getPointsByName",
            "params": [
                {
                    "name": "name",
                    "description": "name of the points to return",
                    "type": "String"
                }
            ],
            "return": {
                "description": "returns false or an array with point(s)",
                "type": "False/array"
            },
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 728,
            "description": "Get all areas with the given name",
            "itemtype": "method",
            "name": "getAreasByName",
            "params": [
                {
                    "name": "name",
                    "description": "name of the area(s) to return",
                    "type": "String"
                }
            ],
            "return": {
                "description": "returns false or an array with area(s)",
                "type": "False/array"
            },
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 752,
            "description": "Defines layer drawing, See property options",
            "itemtype": "method",
            "name": "setLayerToRender",
            "params": [
                {
                    "name": "mixed",
                    "description": "mixed define the map layer(s) to render 'all' (string) for all layers, array index (integer) for layer to render or 'name' (string) of layer to render'",
                    "type": "Mixed"
                }
            ],
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 766,
            "description": "The update method is not complete yet and only experimental.\nAt the final stage the methods updateAnimation and updatePointsAndAreas have to be called from here!\nThen also a map class can be added to a layer as an element for auto update/draw from Game.director!",
            "itemtype": "method",
            "name": "update",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 794,
            "description": "yust calls drawMap ;o)",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 802,
            "description": "Get the bounds of the map",
            "itemtype": "method",
            "name": "getBounds",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 816,
            "description": "Updates all tilemap properties of the map.\n\nSupported custom tiled map properties for now are (see also tilemap examples):\nanim_delay       => time to used to display an switch to next tile\nanim_direction   => direction for next tile 1 = jump forward, -1 = jump back\nanim_next        => defines the offset\n\nWith this tile properties it is possible to define tilemap animations.\nThese must be defined in the tilemap property window with key/value pairs",
            "itemtype": "method",
            "name": "updateAnimation",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 868,
            "description": "Adds a object to the element array, used at the moment for collision detection to tilemap.",
            "itemtype": "method",
            "name": "addElement",
            "params": [
                {
                    "name": "element",
                    "description": "to to add to elements array",
                    "type": "Obj"
                }
            ],
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 882,
            "description": "Checks if the attached element collides with an tile of the tilemap",
            "itemtype": "method",
            "name": "checkMapCollision",
            "params": [
                {
                    "name": "element",
                    "description": "to check for",
                    "type": "Obj"
                },
                {
                    "name": "rx",
                    "description": "current rx of rendermap method",
                    "type": "Number"
                },
                {
                    "name": "ry",
                    "description": "current ry of rendermap method",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "returns true or false",
                "type": "Boolean"
            },
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 914,
            "description": "Checks if a external object(s) collides with the areas of the tiled map.\nThis can be elements from an layer or the map itself.",
            "params": [
                {
                    "name": "objarray",
                    "description": "to check for a areas collision",
                    "type": "Array"
                },
                {
                    "name": "callback",
                    "description": "what should happen",
                    "type": "Callback"
                }
            ],
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 931,
            "description": "removes the json data of the map object",
            "itemtype": "method",
            "name": "removeJsonData",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 939,
            "description": "removes the xml data of the map object",
            "itemtype": "method",
            "name": "removeXmlData",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/maparea.js",
            "line": 10,
            "is_constructor": 1,
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "bound",
                    "description": "bound of area",
                    "type": "CG.Bound"
                },
                {
                    "name": "mapoffset",
                    "description": "mapoffset reference to the current map position",
                    "type": "CG.Point"
                },
                {
                    "name": "name",
                    "description": "name of the group",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "type (a property) of area for collision detection or what ever ;o)",
                    "type": "False/string"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.MapArea",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/maparea.js",
            "line": 20,
            "itemtype": "property",
            "name": "initbound",
            "type": "{CG.Bound}",
            "class": "CG.MapArea",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/maparea.js",
            "line": 25,
            "itemtype": "property",
            "name": "mapoffset",
            "type": "{CG.Point}",
            "class": "CG.MapArea",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/maparea.js",
            "line": 30,
            "itemtype": "property",
            "name": "name",
            "type": "{String}",
            "class": "CG.MapArea",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/maparea.js",
            "line": 35,
            "itemtype": "property",
            "name": "type",
            "type": "{String}",
            "class": "CG.MapArea",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/maparea.js",
            "line": 41,
            "itemtype": "property",
            "name": "bound",
            "type": "{CG.Bound}",
            "class": "CG.MapArea",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/mappoint.js",
            "line": 11,
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "params": [
                {
                    "name": "position",
                    "description": "position point",
                    "type": "Point"
                },
                {
                    "name": "mapoffset",
                    "description": "mapoffset reference to the current map position",
                    "type": "Point"
                },
                {
                    "name": "name",
                    "description": "name of the tile",
                    "type": "String"
                },
                {
                    "name": "gid",
                    "description": "gid number of tilemap editor",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.MapPoint",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/mappoint.js",
            "line": 21,
            "itemtype": "property",
            "name": "initposition",
            "type": "{CG.Point}",
            "class": "CG.MapPoint",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/mappoint.js",
            "line": 26,
            "itemtype": "property",
            "name": "mapoffset",
            "type": "{CG.Point}",
            "class": "CG.MapPoint",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/mappoint.js",
            "line": 31,
            "description": "gid",
            "type": "{Number}",
            "class": "CG.MapPoint",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/mappoint.js",
            "line": 36,
            "itemtype": "property",
            "name": "name",
            "type": "{*}",
            "class": "CG.MapPoint",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/mappoint.js",
            "line": 41,
            "itemtype": "property",
            "name": "position",
            "type": "{CG.Point}",
            "class": "CG.MapPoint",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/maptilelayer.js",
            "line": 10,
            "is_constructor": 1,
            "itemtype": "method",
            "name": "init",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.MapTileLayer",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/maptilelayer.js",
            "line": 16,
            "itemtype": "property",
            "name": "width",
            "type": "{Number}",
            "class": "CG.MapTileLayer",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/maptilelayer.js",
            "line": 21,
            "itemtype": "property",
            "name": "height",
            "type": "{Number}",
            "class": "CG.MapTileLayer",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/maptilelayer.js",
            "line": 26,
            "itemtype": "property",
            "name": "visible",
            "type": "{Boolean}",
            "class": "CG.MapTileLayer",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/maptilelayer.js",
            "line": 31,
            "itemtype": "property",
            "name": "opacity",
            "type": "{Number}",
            "class": "CG.MapTileLayer",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/maptilelayer.js",
            "line": 36,
            "itemtype": "property",
            "name": "tiles",
            "type": "{Array}",
            "class": "CG.MapTileLayer",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/maptileproperties.js",
            "line": 10,
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.MapTileProperties",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/maptileproperties.js",
            "line": 16,
            "itemtype": "property",
            "name": "animated",
            "type": "{Boolean}",
            "class": "CG.MapTileProperties",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/maptileproperties.js",
            "line": 21,
            "itemtype": "property",
            "name": "animDelay",
            "type": "{Number}",
            "class": "CG.MapTileProperties",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/maptileproperties.js",
            "line": 26,
            "itemtype": "property",
            "name": "animDirection",
            "type": "{Number}",
            "class": "CG.MapTileProperties",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/maptileproperties.js",
            "line": 31,
            "itemtype": "property",
            "name": "animNext",
            "type": "{Number}",
            "class": "CG.MapTileProperties",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/maptileproperties.js",
            "line": 36,
            "itemtype": "property",
            "name": "delayTimer",
            "type": "{Number}",
            "class": "CG.MapTileProperties",
            "module": "CG"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " cangaja/base/bitmap.js:106"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " cangaja/base/bitmap.js:117"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " cangaja/box2d/b2d-terrain.js:232"
        },
        {
            "message": "unknown tag: xtend",
            "line": " cangaja/box2d/b2d-world.js:7"
        },
        {
            "message": "unknown tag: proerty",
            "line": " cangaja/control/menu.js:30"
        },
        {
            "message": "unknown tag: init",
            "line": " cangaja/control/translate.js:10"
        },
        {
            "message": "unknown tag: properzty",
            "line": " cangaja/control/translate.js:32"
        },
        {
            "message": "unknown tag: export",
            "line": " cangaja/lib-ext/box2dhtml5/b2DebugDraw.js:25"
        },
        {
            "message": "unknown tag: export",
            "line": " cangaja/lib-ext/box2dhtml5/b2DebugDraw.js:46"
        },
        {
            "message": "unknown tag: export",
            "line": " cangaja/lib-ext/box2dhtml5/b2DebugDraw.js:51"
        },
        {
            "message": "unknown tag: export",
            "line": " cangaja/lib-ext/box2dhtml5/b2DebugDraw.js:56"
        },
        {
            "message": "unknown tag: export",
            "line": " cangaja/lib-ext/box2dhtml5/b2DebugDraw.js:66"
        },
        {
            "message": "unknown tag: export",
            "line": " cangaja/lib-ext/box2dhtml5/b2DebugDraw.js:80"
        },
        {
            "message": "unknown tag: export",
            "line": " cangaja/lib-ext/box2dhtml5/b2DebugDraw.js:91"
        },
        {
            "message": "unknown tag: export",
            "line": " cangaja/lib-ext/box2dhtml5/b2DebugDraw.js:115"
        },
        {
            "message": "unknown tag: export",
            "line": " cangaja/lib-ext/box2dhtml5/b2DebugDraw.js:141"
        },
        {
            "message": "unknown tag: export",
            "line": " cangaja/lib-ext/box2dhtml5/b2DebugDraw.js:160"
        },
        {
            "message": "unknown tag: export",
            "line": " cangaja/lib-ext/box2dhtml5/b2DebugDraw.js:186"
        },
        {
            "message": "unknown tag: export",
            "line": " cangaja/lib-ext/box2dhtml5/b2DebugDraw.js:204"
        },
        {
            "message": "unknown tag: export",
            "line": " cangaja/lib-ext/box2dhtml5/b2DebugDraw.js:230"
        },
        {
            "message": "unknown tag: export",
            "line": " cangaja/lib-ext/box2dhtml5/b2DebugDraw.js:248"
        },
        {
            "message": "unknown tag: export",
            "line": " cangaja/lib-ext/box2dhtml5/b2DebugDraw.js:272"
        },
        {
            "message": "unknown tag: export",
            "line": " cangaja/lib-ext/box2dhtml5/b2DebugDraw.js:315"
        },
        {
            "message": "unknown tag: defgroup",
            "line": " cangaja/lib-ext/chipmunk.js:1682"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " cangaja/lib-ext/hammer.js:10"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " cangaja/lib-ext/hammer.js:106"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " cangaja/lib-ext/hammer.js:149"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " cangaja/lib-ext/hammer.js:164"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " cangaja/lib-ext/hammer.js:179"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " cangaja/lib-ext/hammer.js:203"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " cangaja/lib-ext/hammer.js:469"
        },
        {
            "message": "replacing incorrect tag: parm with param",
            "line": " cangaja/lib-ext/hammer.js:540"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " cangaja/lib-ext/hammer.js:540"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " cangaja/lib-ext/hammer.js:559"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " cangaja/lib-ext/hammer.js:577"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " cangaja/lib-ext/hammer.js:597"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " cangaja/lib-ext/hammer.js:612"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " cangaja/lib-ext/hammer.js:625"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " cangaja/lib-ext/hammer.js:644"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " cangaja/lib-ext/hammer.js:657"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " cangaja/lib-ext/hammer.js:674"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " cangaja/lib-ext/hammer.js:690"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " cangaja/lib-ext/hammer.js:840"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " cangaja/lib-ext/hammer.js:888"
        },
        {
            "message": "unknown tag: events",
            "line": " cangaja/lib-ext/hammer.js:1034"
        },
        {
            "message": "unknown tag: events",
            "line": " cangaja/lib-ext/hammer.js:1080"
        },
        {
            "message": "unknown tag: events",
            "line": " cangaja/lib-ext/hammer.js:1126"
        },
        {
            "message": "unknown tag: events",
            "line": " cangaja/lib-ext/hammer.js:1160"
        },
        {
            "message": "unknown tag: events",
            "line": " cangaja/lib-ext/hammer.js:1265"
        },
        {
            "message": "unknown tag: events",
            "line": " cangaja/lib-ext/hammer.js:1355"
        },
        {
            "message": "unknown tag: events",
            "line": " cangaja/lib-ext/hammer.js:1391"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " cangaja/lib-ext/poly2tri.js:122"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " cangaja/lib-ext/poly2tri.js:290"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " cangaja/lib-ext/poly2tri.js:684"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " cangaja/lib-ext/poly2tri.js:1047"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " cangaja/lib-ext/poly2tri.js:1058"
        },
        {
            "message": "unknown tag: license",
            "line": " cangaja/lib-ext/require.js:1"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " cangaja/lib-ext/require.js:151"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " cangaja/lib-ext/require.js:244"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " cangaja/lib-ext/require.js:390"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " cangaja/lib-ext/require.js:1163"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " cangaja/renderer/renderer.js:1"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " cangaja/text/text.js:72"
        },
        {
            "message": "Missing item type\nCreated with JetBrains WebStorm.\nUser: Apple\nDate: 23.07.13\nTime: 22:43\nTo change this template use File | Settings | File Templates.",
            "line": " cangaja/base/clock.js:1"
        },
        {
            "message": "Missing item type\nmillisecond value returned by Date.now(). Will always",
            "line": " cangaja/base/clock.js:12"
        },
        {
            "message": "Missing item type\nthe number of milliseconds between the epoch (January 1, 1970)",
            "line": " cangaja/base/clock.js:17"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/base/clock.js:24"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/base/clock.js:29"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/base/clock.js:33"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/base/clock.js:37"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/base/clock.js:41"
        },
        {
            "message": "Missing item type\nThe tick() method updates ALL the Clock members, which should only\nbe read from and never written to manually. It is recommended that\ntick() is called from a callback loop using requestAnimationFrame\n\nLearn more: http://paulirish.com/2011/requestanimationframe-for-smart-animating/",
            "line": " cangaja/base/clock.js:45"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/base/clock.js:53"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/base/clock.js:57"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/base/clock.js:60"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/base/clock.js:65"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/base/clock.js:71"
        },
        {
            "message": "Missing item type\n© 2012 by Christian Sonntag <info@motions-media.de>\nsimple experimental Canvas Game JavaScript Framework",
            "line": " cangaja/base/entity.js:1"
        },
        {
            "message": "Missing item type\n© 2013 by Christian Sonntag <info@motions-media.de>\nsimple experimental Canvas Game JavaScript Framework\n\nhttps://www.github.com/samowitsch/cangaja/\n\nIncludes:\nhammer.js\nbuzz.js\nBox2Html5.js",
            "line": " cangaja/base/intro.js:1"
        },
        {
            "message": "Missing item type\nstring functions",
            "line": " cangaja/base/string.js:1"
        },
        {
            "message": "Missing item type\n© 2012 by Christian Sonntag <info@motions-media.de>\nsimple experimental Canvas Game JavaScript Framework",
            "line": " cangaja/box2d/b2d-bridge.js:1"
        },
        {
            "message": "Missing item type\n© 2012 by Christian Sonntag <info@motions-media.de>\nsimple experimental Canvas Game JavaScript Framework",
            "line": " cangaja/box2d/b2d-chainshape.js:1"
        },
        {
            "message": "Missing item type\n© 2012 by Christian Sonntag <info@motions-media.de>\nsimple experimental Canvas Game JavaScript Framework",
            "line": " cangaja/box2d/b2d-circle.js:1"
        },
        {
            "message": "Missing item type\n© 2012 by Christian Sonntag <info@motions-media.de>\nsimple experimental Canvas Game JavaScript Framework",
            "line": " cangaja/box2d/b2d-entity.js:1"
        },
        {
            "message": "Missing item type\n© 2012 by Christian Sonntag <info@motions-media.de>\nsimple experimental Canvas Game JavaScript Framework",
            "line": " cangaja/box2d/b2d-line.js:1"
        },
        {
            "message": "Missing item type\n© 2012 by Christian Sonntag <info@motions-media.de>\nsimple experimental Canvas Game JavaScript Framework",
            "line": " cangaja/box2d/b2d-polygon.js:1"
        },
        {
            "message": "Missing item type\n© 2012 by Christian Sonntag <info@motions-media.de>\nsimple experimental Canvas Game JavaScript Framework",
            "line": " cangaja/box2d/b2d-rectangle.js:1"
        },
        {
            "message": "Missing item type\n© 2012 by Christian Sonntag <info@motions-media.de>\nsimple experimental Canvas Game JavaScript Framework",
            "line": " cangaja/box2d/b2d-rope.js:1"
        },
        {
            "message": "Missing item type\n© 2012 by Christian Sonntag <info@motions-media.de>\nsimple experimental Canvas Game JavaScript Framework",
            "line": " cangaja/box2d/b2d-terrain.js:1"
        },
        {
            "message": "Missing item type\nexperimental not working yet",
            "line": " cangaja/box2d/b2d-terrain.js:200"
        },
        {
            "message": "Missing item type\n© 2012 by Christian Sonntag <info@motions-media.de>\nsimple experimental Canvas Game JavaScript Framework",
            "line": " cangaja/box2d/b2d-world.js:1"
        },
        {
            "message": "Missing item type\nadd m_groundBody for use with b2MouseJoint",
            "line": " cangaja/box2d/b2d-world.js:82"
        },
        {
            "message": "Missing item type\nnextscreen",
            "line": " cangaja/control/director.js:45"
        },
        {
            "message": "Missing item type\nalpha",
            "line": " cangaja/control/director.js:65"
        },
        {
            "message": "Missing item type\nmode",
            "line": " cangaja/control/director.js:70"
        },
        {
            "message": "Missing item type\ndirection",
            "line": " cangaja/control/director.js:75"
        },
        {
            "message": "Missing item type\ninitAsPoint",
            "line": " cangaja/control/emitter.js:123"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/control/menu.js:30"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/control/translate.js:10"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/control/translate.js:32"
        },
        {
            "message": "Missing item type\nThis class implements debug drawing callbacks that are \ninvoked inside b2World::Step.",
            "line": " cangaja/lib-ext/box2dhtml5/b2DebugDraw.js:25"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/lib-ext/box2dhtml5/b2DebugDraw.js:46"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/lib-ext/box2dhtml5/b2DebugDraw.js:51"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/lib-ext/box2dhtml5/b2DebugDraw.js:56"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/lib-ext/box2dhtml5/b2DebugDraw.js:66"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/lib-ext/box2dhtml5/b2DebugDraw.js:80"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/lib-ext/box2dhtml5/b2DebugDraw.js:91"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/lib-ext/box2dhtml5/b2DebugDraw.js:115"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/lib-ext/box2dhtml5/b2DebugDraw.js:141"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/lib-ext/box2dhtml5/b2DebugDraw.js:160"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/lib-ext/box2dhtml5/b2DebugDraw.js:186"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/lib-ext/box2dhtml5/b2DebugDraw.js:204"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/lib-ext/box2dhtml5/b2DebugDraw.js:230"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/lib-ext/box2dhtml5/b2DebugDraw.js:248"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/lib-ext/box2dhtml5/b2DebugDraw.js:272"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/lib-ext/box2dhtml5/b2DebugDraw.js:315"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/lib-ext/chipmunk.js:1682"
        },
        {
            "message": "Missing item type\n*\n Author    :  Angus Johnson                                                   *\n Version   :  5.0.2                                                           *\n Date      :  30 December 2012                                                *\n Website   :  http://www.angusj.com                                           *\n Copyright :  Angus Johnson 2010-2012                                         *\n*\n License:                                                                     *\n Use, modification & distribution is subject to Boost Software License Ver 1. *\n http://www.boost.org/LICENSE_1_0.txt                                         *\n*\n Attributions:                                                                *\n The code in this library is an extension of Bala Vatti's clipping algorithm: *\n \"A generic solution to polygon clipping\"                                     *\n Communications of the ACM, Vol 35, Issue 7 (July 1992) pp 56-63.             *\n http://portal.acm.org/citation.cfm?id=129906                                 *\n*\n Computer graphics and geometric modeling: implementation and algorithms      *\n By Max K. Agoston                                                            *\n Springer; 1 edition (January 4, 2005)                                        *\n http://books.google.com/books?q=vatti+clipping+agoston                       *\n*\n See also:                                                                    *\n \"Polygon Offsetting by Computing Winding Numbers\"                            *\n Paper no. DETC2005-85513 pp. 565-575                                         *\n ASME 2005 International Design Engineering Technical Conferences             *\n and Computers and Information in Engineering Conference (IDETC/CIE2005)      *\n September 24�28, 2005 , Long Beach, California, USA                          *\n http://www.me.berkeley.edu/~mcmains/pubs/DAC05OffsetPolygon.pdf              *\n*",
            "line": " cangaja/lib-ext/clipper.js:1"
        },
        {
            "message": "Missing item type\n*\n Author    :  Timo                                                            *\n Version   :  5.0.2.2                                                         *\n Date      :  11 September 2013                                               *\n*\n This is a translation of the C# Clipper library to Javascript.               *\n Int128 struct of C# is implemented using JSBN of Tom Wu.                     *\n Because Javascript lacks support for 64-bit integers, the space              *\n is a little more restricted than in C# version.                              *\n*\n C# version has support for coordinate space:                                 *\n +-4611686018427387903 ( sqrt(2^127 -1)/2 )                                   *\n while Javascript version has support for space:                              *\n +-4503599627370495 ( sqrt(2^106 -1)/2 )                                      *\n*\n Tom Wu's JSBN proved to be the fastest big integer library:                  *\n http://jsperf.com/big-integer-library-test                                   *\n*\n This class can be made simpler when (if ever) 64-bit integer support comes.  *\n*",
            "line": " cangaja/lib-ext/clipper.js:34"
        },
        {
            "message": "Missing item type\n*\n Basic JavaScript BN library - subset useful for RSA encryption.              *\n http://www-cs-students.stanford.edu/~tjw/jsbn/                               *\n Copyright (c) 2005  Tom Wu                                                   *\n All Rights Reserved.                                                         *\n See \"LICENSE\" for details:                                                   *\n http://www-cs-students.stanford.edu/~tjw/jsbn/LICENSE                        *\n*",
            "line": " cangaja/lib-ext/clipper.js:57"
        },
        {
            "message": "Missing item type\n*\n Author    :  Angus Johnson                                                   *\n Version   :  5.0.2                                                           *\n Date      :  30 December 2012                                                *\n Website   :  http://www.angusj.com                                           *\n Copyright :  Angus Johnson 2010-2012                                         *\n*\n License:                                                                     *\n Use, modification & distribution is subject to Boost Software License Ver 1. *\n http://www.boost.org/LICENSE_1_0.txt                                         *\n*\n Attributions:                                                                *\n The code in this library is an extension of Bala Vatti's clipping algorithm: *\n \"A generic solution to polygon clipping\"                                     *\n Communications of the ACM, Vol 35, Issue 7 (July 1992) pp 56-63.             *\n http://portal.acm.org/citation.cfm?id=129906                                 *\n*\n Computer graphics and geometric modeling: implementation and algorithms      *\n By Max K. Agoston                                                            *\n Springer; 1 edition (January 4, 2005)                                        *\n http://books.google.com/books?q=vatti+clipping+agoston                       *\n*\n See also:                                                                    *\n \"Polygon Offsetting by Computing Winding Numbers\"                            *\n Paper no. DETC2005-85513 pp. 565-575                                         *\n ASME 2005 International Design Engineering Technical Conferences             *\n and Computers and Information in Engineering Conference (IDETC/CIE2005)      *\n September 24�28, 2005 , Long Beach, California, USA                          *\n http://www.me.berkeley.edu/~mcmains/pubs/DAC05OffsetPolygon.pdf              *\n*",
            "line": " cangaja/lib-ext/clipper.min.js:1"
        },
        {
            "message": "Missing item type\n*\n Author    :  Timo                                                            *\n Version   :  5.0.2.2                                                         *\n Date      :  11 September 2013                                               *\n*\n This is a translation of the C# Clipper library to Javascript.               *\n Int128 struct of C# is implemented using JSBN of Tom Wu.                     *\n Because Javascript lacks support for 64-bit integers, the space              *\n is a little more restricted than in C# version.                              *\n*\n C# version has support for coordinate space:                                 *\n +-4611686018427387903 ( sqrt(2^127 -1)/2 )                                   *\n while Javascript version has support for space:                              *\n +-4503599627370495 ( sqrt(2^106 -1)/2 )                                      *\n*\n Tom Wu's JSBN proved to be the fastest big integer library:                  *\n http://jsperf.com/big-integer-library-test                                   *\n*\n This class can be made simpler when (if ever) 64-bit integer support comes.  *\n*",
            "line": " cangaja/lib-ext/clipper.min.js:34"
        },
        {
            "message": "Missing item type\n*\n Basic JavaScript BN library - subset useful for RSA encryption.              *\n http://www-cs-students.stanford.edu/~tjw/jsbn/                               *\n Copyright (c) 2005  Tom Wu                                                   *\n All Rights Reserved.                                                         *\n See \"LICENSE\" for details:                                                   *\n http://www-cs-students.stanford.edu/~tjw/jsbn/LICENSE                        *\n*",
            "line": " cangaja/lib-ext/clipper.min.js:57"
        },
        {
            "message": "Missing item type\nHammer\nuse this to create instances",
            "line": " cangaja/lib-ext/hammer.js:10"
        },
        {
            "message": "Missing item type\nsetup events to detect gestures on the document",
            "line": " cangaja/lib-ext/hammer.js:80"
        },
        {
            "message": "Missing item type\ncreate new hammer instance\nall methods should return the instance itself, so it is chainable.",
            "line": " cangaja/lib-ext/hammer.js:106"
        },
        {
            "message": "Missing item type\nbind events to the instance",
            "line": " cangaja/lib-ext/hammer.js:149"
        },
        {
            "message": "Missing item type\nunbind events to the instance",
            "line": " cangaja/lib-ext/hammer.js:164"
        },
        {
            "message": "Missing item type\ntrigger gesture event",
            "line": " cangaja/lib-ext/hammer.js:179"
        },
        {
            "message": "Missing item type\nenable of disable hammer.js detection",
            "line": " cangaja/lib-ext/hammer.js:203"
        },
        {
            "message": "Missing item type\nthis holds the last move event,\nused to fix empty touchend issue\nsee the onTouch event for an explanation",
            "line": " cangaja/lib-ext/hammer.js:214"
        },
        {
            "message": "Missing item type\nwhen the mouse is hold down, this is true",
            "line": " cangaja/lib-ext/hammer.js:223"
        },
        {
            "message": "Missing item type\nwhen touch events have been fired, this is true",
            "line": " cangaja/lib-ext/hammer.js:230"
        },
        {
            "message": "Missing item type\nsimple addEventListener",
            "line": " cangaja/lib-ext/hammer.js:238"
        },
        {
            "message": "Missing item type\ntouch events with mouse fallback",
            "line": " cangaja/lib-ext/hammer.js:252"
        },
        {
            "message": "Missing item type\nwe have different events for each device/browser\ndetermine what we need and set them in the Hammer.EVENT_TYPES constant",
            "line": " cangaja/lib-ext/hammer.js:345"
        },
        {
            "message": "Missing item type\ncreate touchlist depending on the event",
            "line": " cangaja/lib-ext/hammer.js:379"
        },
        {
            "message": "Missing item type\ncollect event data for Hammer js",
            "line": " cangaja/lib-ext/hammer.js:405"
        },
        {
            "message": "Missing item type\nprevent the browser default actions\nmostly used to disable scrolling of the browser",
            "line": " cangaja/lib-ext/hammer.js:429"
        },
        {
            "message": "Missing item type\nstop bubbling the event up to its parents",
            "line": " cangaja/lib-ext/hammer.js:443"
        },
        {
            "message": "Missing item type\nimmediately stop gesture detection\nmight be useful after a swipe was detected",
            "line": " cangaja/lib-ext/hammer.js:450"
        },
        {
            "message": "Missing item type\nholds all pointers",
            "line": " cangaja/lib-ext/hammer.js:463"
        },
        {
            "message": "Missing item type\nget a list of pointers",
            "line": " cangaja/lib-ext/hammer.js:469"
        },
        {
            "message": "Missing item type\nupdate the position of a pointer",
            "line": " cangaja/lib-ext/hammer.js:484"
        },
        {
            "message": "Missing item type\ncheck if ev matches pointertype",
            "line": " cangaja/lib-ext/hammer.js:501"
        },
        {
            "message": "Missing item type\nget events",
            "line": " cangaja/lib-ext/hammer.js:519"
        },
        {
            "message": "Missing item type\nreset the list",
            "line": " cangaja/lib-ext/hammer.js:530"
        },
        {
            "message": "Missing item type\nextend method,\nalso used for cloning when dest is an empty object",
            "line": " cangaja/lib-ext/hammer.js:540"
        },
        {
            "message": "Missing item type\nfind if a node is in the given parent\nused for event delegation tricks",
            "line": " cangaja/lib-ext/hammer.js:559"
        },
        {
            "message": "Missing item type\nget the center of all the touches",
            "line": " cangaja/lib-ext/hammer.js:577"
        },
        {
            "message": "Missing item type\ncalculate the velocity between two points",
            "line": " cangaja/lib-ext/hammer.js:597"
        },
        {
            "message": "Missing item type\ncalculate the angle between two coordinates",
            "line": " cangaja/lib-ext/hammer.js:612"
        },
        {
            "message": "Missing item type\nangle to direction define",
            "line": " cangaja/lib-ext/hammer.js:625"
        },
        {
            "message": "Missing item type\ncalculate the distance between two touches",
            "line": " cangaja/lib-ext/hammer.js:644"
        },
        {
            "message": "Missing item type\ncalculate the scale factor between two touchLists (fingers)\nno scale is 1, and goes down to 0 when pinched together, and bigger when pinched out",
            "line": " cangaja/lib-ext/hammer.js:657"
        },
        {
            "message": "Missing item type\ncalculate the rotation degrees between two touchLists (fingers)",
            "line": " cangaja/lib-ext/hammer.js:674"
        },
        {
            "message": "Missing item type\nboolean if the direction is vertical",
            "line": " cangaja/lib-ext/hammer.js:690"
        },
        {
            "message": "Missing item type\nstop browser default behavior with css props",
            "line": " cangaja/lib-ext/hammer.js:700"
        },
        {
            "message": "Missing item type\nstart Hammer.gesture detection",
            "line": " cangaja/lib-ext/hammer.js:754"
        },
        {
            "message": "Missing item type\nHammer.gesture detection",
            "line": " cangaja/lib-ext/hammer.js:778"
        },
        {
            "message": "Missing item type\nclear the Hammer.gesture vars\nthis is called on endDetect, but can also be used when a final Hammer.gesture has been detected\nto stop other Hammer.gestures from being fired",
            "line": " cangaja/lib-ext/hammer.js:822"
        },
        {
            "message": "Missing item type\nextend eventData for Hammer.gestures",
            "line": " cangaja/lib-ext/hammer.js:840"
        },
        {
            "message": "Missing item type\nregister new gesture",
            "line": " cangaja/lib-ext/hammer.js:888"
        },
        {
            "message": "Missing item type\nCustom gestures\n==============================\n\nGesture object\n--------------------\nThe object structure of a gesture:\n\n{ name: 'mygesture',\n  index: 1337,\n  defaults: {\n    mygesture_option: true\n  }\n  handler: function(type, ev, inst) {\n    // trigger gesture event\n    inst.trigger(this.name, ev);\n  }\n}",
            "line": " cangaja/lib-ext/hammer.js:927"
        },
        {
            "message": "Missing item type\nHold\nTouch stays at the same place for x time",
            "line": " cangaja/lib-ext/hammer.js:1034"
        },
        {
            "message": "Missing item type\nTap/DoubleTap\nQuick touch at a place or double at the same place",
            "line": " cangaja/lib-ext/hammer.js:1080"
        },
        {
            "message": "Missing item type\nSwipe\ntriggers swipe events when the end velocity is above the threshold",
            "line": " cangaja/lib-ext/hammer.js:1126"
        },
        {
            "message": "Missing item type\nDrag\nMove with x fingers (default 1) around on the page. Blocking the scrolling when\nmoving left and right is a good practice. When all the drag events are blocking\nyou disable scrolling on that area.",
            "line": " cangaja/lib-ext/hammer.js:1160"
        },
        {
            "message": "Missing item type\nTransform\nUser want to scale or rotate with 2 fingers",
            "line": " cangaja/lib-ext/hammer.js:1265"
        },
        {
            "message": "Missing item type\nTouch\nCalled as first, tells the user has touched the screen",
            "line": " cangaja/lib-ext/hammer.js:1355"
        },
        {
            "message": "Missing item type\nRelease\nCalled as last, tells the user has released the screen",
            "line": " cangaja/lib-ext/hammer.js:1391"
        },
        {
            "message": "Missing item type\nGet/set the global volume for all sounds.",
            "line": " cangaja/lib-ext/howler.js:50"
        },
        {
            "message": "Missing item type\nMute all sounds.",
            "line": " cangaja/lib-ext/howler.js:85"
        },
        {
            "message": "Missing item type\nUnmute all sounds.",
            "line": " cangaja/lib-ext/howler.js:95"
        },
        {
            "message": "Missing item type\nHandle muting and unmuting globally.",
            "line": " cangaja/lib-ext/howler.js:105"
        },
        {
            "message": "Missing item type\nLoad an audio file.",
            "line": " cangaja/lib-ext/howler.js:191"
        },
        {
            "message": "Missing item type\nGet/set the URLs to be pulled from to play in this source.",
            "line": " cangaja/lib-ext/howler.js:284"
        },
        {
            "message": "Missing item type\nPlay a sound from the current time (0 by default).",
            "line": " cangaja/lib-ext/howler.js:304"
        },
        {
            "message": "Missing item type\nPause playback and save the current position.",
            "line": " cangaja/lib-ext/howler.js:440"
        },
        {
            "message": "Missing item type\nStop playback and reset to start.",
            "line": " cangaja/lib-ext/howler.js:487"
        },
        {
            "message": "Missing item type\nMute this sound.",
            "line": " cangaja/lib-ext/howler.js:534"
        },
        {
            "message": "Missing item type\nUnmute this sound.",
            "line": " cangaja/lib-ext/howler.js:563"
        },
        {
            "message": "Missing item type\nGet/set volume of this sound.",
            "line": " cangaja/lib-ext/howler.js:592"
        },
        {
            "message": "Missing item type\nGet/set whether to loop the sound.",
            "line": " cangaja/lib-ext/howler.js:631"
        },
        {
            "message": "Missing item type\nGet/set sound sprite definition.",
            "line": " cangaja/lib-ext/howler.js:648"
        },
        {
            "message": "Missing item type\nGet/set the position of playback.",
            "line": " cangaja/lib-ext/howler.js:668"
        },
        {
            "message": "Missing item type\nGet/set the 3D position of the audio source.\nThe most common usage is to set the 'x' position\nto affect the left/right ear panning. Setting any value higher than\n1.0 will begin to decrease the volume of the sound as it moves further away.\nNOTE: This only works with Web Audio API, HTML5 Audio playback\nwill not be affected.",
            "line": " cangaja/lib-ext/howler.js:721"
        },
        {
            "message": "Missing item type\nFade a currently playing sound between two volumes.",
            "line": " cangaja/lib-ext/howler.js:765"
        },
        {
            "message": "Missing item type\n[DEPRECATED] Fade in the current sound.",
            "line": " cangaja/lib-ext/howler.js:810"
        },
        {
            "message": "Missing item type\n[DEPRECATED] Fade out the current sound and pause when finished.",
            "line": " cangaja/lib-ext/howler.js:821"
        },
        {
            "message": "Missing item type\nGet an audio node by ID.",
            "line": " cangaja/lib-ext/howler.js:841"
        },
        {
            "message": "Missing item type\nGet the first active audio node.",
            "line": " cangaja/lib-ext/howler.js:860"
        },
        {
            "message": "Missing item type\nGet the first inactive audio node.\nIf there is none, create a new one and add it to the pool.",
            "line": " cangaja/lib-ext/howler.js:882"
        },
        {
            "message": "Missing item type\nIf there are more than 5 inactive audio nodes in the pool, clear out the rest.",
            "line": " cangaja/lib-ext/howler.js:921"
        },
        {
            "message": "Missing item type\nClear 'onend' timeout before it ends.",
            "line": " cangaja/lib-ext/howler.js:954"
        },
        {
            "message": "Missing item type\nSetup the gain node and panner for a Web Audio instance.",
            "line": " cangaja/lib-ext/howler.js:971"
        },
        {
            "message": "Missing item type\nCall/set custom events.",
            "line": " cangaja/lib-ext/howler.js:996"
        },
        {
            "message": "Missing item type\nRemove a custom event.",
            "line": " cangaja/lib-ext/howler.js:1021"
        },
        {
            "message": "Missing item type\nUnload and destroy the current Howl object.\nThis will immediately stop all play instances attached to this sound.",
            "line": " cangaja/lib-ext/howler.js:1043"
        },
        {
            "message": "Missing item type\nBuffer a sound from URL (or from cache) and decode to audio source (Web Audio API).",
            "line": " cangaja/lib-ext/howler.js:1080"
        },
        {
            "message": "Missing item type\nFinishes loading the Web Audio API sound and fires the loaded event",
            "line": " cangaja/lib-ext/howler.js:1125"
        },
        {
            "message": "Missing item type\nLoad the sound back into the buffer source.",
            "line": " cangaja/lib-ext/howler.js:1150"
        },
        {
            "message": "Missing item type\nAdd support for AMD (Asynchronous Module Definition) libraries such as require.js.",
            "line": " cangaja/lib-ext/howler.js:1174"
        },
        {
            "message": "Missing item type\nModule encapsulation",
            "line": " cangaja/lib-ext/poly2tri.js:47"
        },
        {
            "message": "Missing item type\nCustom exception class to indicate invalid Point values",
            "line": " cangaja/lib-ext/poly2tri.js:80"
        },
        {
            "message": "Missing item type\nConstruct a point",
            "line": " cangaja/lib-ext/poly2tri.js:99"
        },
        {
            "message": "Missing item type\nFor pretty printing ex. <i>\"(5;42)\"</i>)",
            "line": " cangaja/lib-ext/poly2tri.js:115"
        },
        {
            "message": "Missing item type\nCreates a copy of this Point object.",
            "line": " cangaja/lib-ext/poly2tri.js:122"
        },
        {
            "message": "Missing item type\nSet this Point instance to the origo. <code>(0; 0)</code>",
            "line": " cangaja/lib-ext/poly2tri.js:130"
        },
        {
            "message": "Missing item type\nSet the coordinates of this instance.",
            "line": " cangaja/lib-ext/poly2tri.js:139"
        },
        {
            "message": "Missing item type\nNegate this Point instance. (component-wise)",
            "line": " cangaja/lib-ext/poly2tri.js:150"
        },
        {
            "message": "Missing item type\nAdd another Point object to this instance. (component-wise)",
            "line": " cangaja/lib-ext/poly2tri.js:159"
        },
        {
            "message": "Missing item type\nSubtract this Point instance with another point given. (component-wise)",
            "line": " cangaja/lib-ext/poly2tri.js:169"
        },
        {
            "message": "Missing item type\nMultiply this Point instance by a scalar. (component-wise)",
            "line": " cangaja/lib-ext/poly2tri.js:179"
        },
        {
            "message": "Missing item type\nReturn the distance of this Point instance from the origo.",
            "line": " cangaja/lib-ext/poly2tri.js:189"
        },
        {
            "message": "Missing item type\nNormalize this Point instance (as a vector).",
            "line": " cangaja/lib-ext/poly2tri.js:196"
        },
        {
            "message": "Missing item type\nTest this Point object with another for equality.",
            "line": " cangaja/lib-ext/poly2tri.js:207"
        },
        {
            "message": "Missing item type\nNegate a point component-wise and return the result as a new Point object.",
            "line": " cangaja/lib-ext/poly2tri.js:218"
        },
        {
            "message": "Missing item type\nAdd two points component-wise and return the result as a new Point object.",
            "line": " cangaja/lib-ext/poly2tri.js:227"
        },
        {
            "message": "Missing item type\nSubtract two points component-wise and return the result as a new Point object.",
            "line": " cangaja/lib-ext/poly2tri.js:237"
        },
        {
            "message": "Missing item type\nMultiply a point by a scalar and return the result as a new Point object.",
            "line": " cangaja/lib-ext/poly2tri.js:247"
        },
        {
            "message": "Missing item type\nPerform the cross product on either two points (this produces a scalar)\nor a point and a scalar (this produces a point).\nThis function requires two parameters, either may be a Point object or a\nnumber.",
            "line": " cangaja/lib-ext/poly2tri.js:257"
        },
        {
            "message": "Missing item type\nPoint pretty printing ex. <i>\"(5;42)\"</i>)",
            "line": " cangaja/lib-ext/poly2tri.js:290"
        },
        {
            "message": "Missing item type\nCompare two points component-wise.",
            "line": " cangaja/lib-ext/poly2tri.js:301"
        },
        {
            "message": "Missing item type\nTest two Point objects for equality.",
            "line": " cangaja/lib-ext/poly2tri.js:317"
        },
        {
            "message": "Missing item type\nPeform the dot product on two vectors.",
            "line": " cangaja/lib-ext/poly2tri.js:326"
        },
        {
            "message": "Missing item type\nRepresents a simple polygon's edge",
            "line": " cangaja/lib-ext/poly2tri.js:337"
        },
        {
            "message": "Missing item type\nTriangle class.<br>\nTriangle-based data structures are known to have better performance than\nquad-edge structures.\nSee: J. Shewchuk, \"Triangle: Engineering a 2D Quality Mesh Generator and\nDelaunay Triangulator\", \"Triangulations in CGAL\"",
            "line": " cangaja/lib-ext/poly2tri.js:365"
        },
        {
            "message": "Missing item type\nFor pretty printing ex. <i>\"[(5;42)(10;20)(21;30)]\"</i>)",
            "line": " cangaja/lib-ext/poly2tri.js:387"
        },
        {
            "message": "Missing item type\nTest if this Triangle contains the Point object given as parameters as its\nvertices. Only point references are compared, not values.",
            "line": " cangaja/lib-ext/poly2tri.js:405"
        },
        {
            "message": "Missing item type\nTest if this Triangle contains the Edge object given as parameter as its\nbounding edges. Only point references are compared, not values.",
            "line": " cangaja/lib-ext/poly2tri.js:417"
        },
        {
            "message": "Missing item type\nUpdate neighbor pointers.",
            "line": " cangaja/lib-ext/poly2tri.js:439"
        },
        {
            "message": "Missing item type\nExhaustive search to update neighbor pointers",
            "line": " cangaja/lib-ext/poly2tri.js:459"
        },
        {
            "message": "Missing item type\nReturns the point clockwise to the given point.",
            "line": " cangaja/lib-ext/poly2tri.js:490"
        },
        {
            "message": "Missing item type\nReturns the point counter-clockwise to the given point.",
            "line": " cangaja/lib-ext/poly2tri.js:507"
        },
        {
            "message": "Missing item type\nReturns the neighbor clockwise to given point.",
            "line": " cangaja/lib-ext/poly2tri.js:524"
        },
        {
            "message": "Missing item type\nReturns the neighbor counter-clockwise to given point.",
            "line": " cangaja/lib-ext/poly2tri.js:538"
        },
        {
            "message": "Missing item type\nThe neighbor across to given point.",
            "line": " cangaja/lib-ext/poly2tri.js:640"
        },
        {
            "message": "Missing item type\nLegalize triangle by rotating clockwise around oPoint",
            "line": " cangaja/lib-ext/poly2tri.js:659"
        },
        {
            "message": "Missing item type\nReturns the index of a point in the triangle. \nThe point *must* be a reference to one of the triangle's vertices.",
            "line": " cangaja/lib-ext/poly2tri.js:684"
        },
        {
            "message": "Missing item type\nMark an edge of this triangle as constrained.<br>\nThis method takes either 1 parameter (an edge index or an Edge instance) or\n2 parameters (two Point instances defining the edge of the triangle).",
            "line": " cangaja/lib-ext/poly2tri.js:729"
        },
        {
            "message": "Missing item type\nForumla to calculate signed area<br>\nPositive if CCW<br>\nNegative if CW<br>\n0 if collinear<br>\n<pre>\nA[P1,P2,P3]  =  (x1*y2 - y1*x2) + (x2*y3 - y2*x3) + (x3*y1 - y3*x1)\n             =  (x1-x3)*(y2-y3) - (y1-y3)*(x2-x3)\n</pre>",
            "line": " cangaja/lib-ext/poly2tri.js:769"
        },
        {
            "message": "Missing item type\nAdvancing front node",
            "line": " cangaja/lib-ext/poly2tri.js:823"
        },
        {
            "message": "Missing item type\nConstructor for the triangulation context.\nIt accepts a simple polyline, which defines the constrained edges.\nPossible options are:\n   cloneArrays:  if true, do a shallow copy of the Array parameters \n                 (contour, holes). Points inside arrays are never copied.\n                 Default is false : keep a reference to the array arguments,\n                 who will be modified in place.",
            "line": " cangaja/lib-ext/poly2tri.js:957"
        },
        {
            "message": "Missing item type\nAdd a hole to the constraints",
            "line": " cangaja/lib-ext/poly2tri.js:997"
        },
        {
            "message": "Missing item type\nAdd a Steiner point to the constraints",
            "line": " cangaja/lib-ext/poly2tri.js:1013"
        },
        {
            "message": "Missing item type\nAdd several Steiner points to the constraints",
            "line": " cangaja/lib-ext/poly2tri.js:1025"
        },
        {
            "message": "Missing item type\nTriangulate the polygon with holes and Steiner points.",
            "line": " cangaja/lib-ext/poly2tri.js:1036"
        },
        {
            "message": "Missing item type\nGet the bounding box of the provided constraints (contour, holes and \nSteinter points). Warning : these values are not available if the triangulation \nhas not been done yet.",
            "line": " cangaja/lib-ext/poly2tri.js:1047"
        },
        {
            "message": "Missing item type\nGet result of triangulation",
            "line": " cangaja/lib-ext/poly2tri.js:1058"
        },
        {
            "message": "Missing item type\nDo a depth first traversal to collect triangles",
            "line": " cangaja/lib-ext/poly2tri.js:1193"
        },
        {
            "message": "Missing item type\nThe 'Sweep' object is present in order to keep this JavaScript version \nas close as possible to the reference C++ version, even though almost\nall Sweep methods could be declared as members of the SweepContext object.",
            "line": " cangaja/lib-ext/poly2tri.js:1217"
        },
        {
            "message": "Missing item type\nTriangulate the polygon with holes and Steiner points.",
            "line": " cangaja/lib-ext/poly2tri.js:1225"
        },
        {
            "message": "Missing item type\nFind closes node to the left of the new point and\ncreate a new triangle. If needed new holes and basins\nwill be filled to.",
            "line": " cangaja/lib-ext/poly2tri.js:1262"
        },
        {
            "message": "Missing item type\nAdds a triangle to the advancing front to fill a hole.",
            "line": " cangaja/lib-ext/poly2tri.js:1364"
        },
        {
            "message": "Missing item type\nFills holes in the Advancing Front",
            "line": " cangaja/lib-ext/poly2tri.js:1392"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/lib-ext/poly2tri.js:1434"
        },
        {
            "message": "Missing item type\nReturns true if triangle was legalized",
            "line": " cangaja/lib-ext/poly2tri.js:1455"
        },
        {
            "message": "Missing item type\n<b>Requirement</b>:<br>\n1. a,b and c form a triangle.<br>\n2. a and d is know to be on opposite side of bc<br>\n<pre>\n               a\n               +\n              / \\\n             /   \\\n           b/     \\c\n           +-------+\n          /    d    \\\n         /           \\\n</pre>\n<b>Fact</b>: d has to be in area B to have a chance to be inside the circle formed by\n a,b and c<br>\n d is outside B if orient2d(a,b,d) or orient2d(c,a,d) is CW<br>\n This preknowledge gives us a way to optimize the incircle test",
            "line": " cangaja/lib-ext/poly2tri.js:1516"
        },
        {
            "message": "Missing item type\nRotates a triangle pair one vertex CW\n<pre>\n      n2                    n2\n P +-----+             P +-----+\n   | t  /|               |\\  t |\n   |   / |               | \\   |\n n1|  /  |n3           n1|  \\  |n3\n   | /   |    after CW   |   \\ |\n   |/ oT |               | oT \\|\n   +-----+ oP            +-----+\n      n4                    n4\n</pre>",
            "line": " cangaja/lib-ext/poly2tri.js:1574"
        },
        {
            "message": "Missing item type\nFills a basin that has formed on the Advancing Front to the right\nof given node.<br>\nFirst we decide a left,bottom and right node that forms the\nboundaries of the basin. Then we do a reqursive fill.",
            "line": " cangaja/lib-ext/poly2tri.js:1644"
        },
        {
            "message": "Missing item type\nRecursive algorithm to fill a Basin with triangles",
            "line": " cangaja/lib-ext/poly2tri.js:1685"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/lib-ext/require.js:1"
        },
        {
            "message": "Missing item type\nHelper function for iterating over an array. If the func returns\na true value, it will break out of the loop.",
            "line": " cangaja/lib-ext/require.js:50"
        },
        {
            "message": "Missing item type\nHelper function for iterating over an array backwards. If the func\nreturns a true value, it will break out of the loop.",
            "line": " cangaja/lib-ext/require.js:65"
        },
        {
            "message": "Missing item type\nCycles over properties in an object and calls a function for each\nproperty value. If the function returns a truthy value, then the\niteration is stopped.",
            "line": " cangaja/lib-ext/require.js:88"
        },
        {
            "message": "Missing item type\nSimple function to mix in properties from source into target,\nbut only if target does not already have a property of the same name.",
            "line": " cangaja/lib-ext/require.js:104"
        },
        {
            "message": "Missing item type\nConstructs an error with a pointer to an URL with more information.",
            "line": " cangaja/lib-ext/require.js:151"
        },
        {
            "message": "Missing item type\nTrims the . and .. from an array of path segments.\nIt will keep a leading path segment if a .. will become\nthe first path segment, to help with module name lookups,\nwhich act like paths, but can be remapped. But the end result,\nall paths that use this function should look normalized.\nNOTE: this method MODIFIES the input array.",
            "line": " cangaja/lib-ext/require.js:211"
        },
        {
            "message": "Missing item type\nGiven a relative module name, like ./something, normalize it to\na real name that can be mapped to a path.",
            "line": " cangaja/lib-ext/require.js:244"
        },
        {
            "message": "Missing item type\nCreates a module mapping that includes plugin prefix, module\nname, and path. If parentModuleMap is provided it will\nalso normalize the name via require.normalize()",
            "line": " cangaja/lib-ext/require.js:390"
        },
        {
            "message": "Missing item type\nInternal method to transfer globalQueue items to this context's\ndefQueue.",
            "line": " cangaja/lib-ext/require.js:527"
        },
        {
            "message": "Missing item type\nChecks is the module is ready to define itself, and if so,\ndefine it.",
            "line": " cangaja/lib-ext/require.js:808"
        },
        {
            "message": "Missing item type\nGiven an event from a script node, get the requirejs info from it,\nand then removes the event listeners on the node.",
            "line": " cangaja/lib-ext/require.js:1163"
        },
        {
            "message": "Missing item type\nSet a configuration for the context.",
            "line": " cangaja/lib-ext/require.js:1215"
        },
        {
            "message": "Missing item type\nConverts a module name + .extension into an URL path.\n*Requires* the use of a module name. It does not support using\nplain URLs like nameToUrl.",
            "line": " cangaja/lib-ext/require.js:1397"
        },
        {
            "message": "Missing item type\nCalled to enable a module if it is still in the registry\nawaiting enablement. parent module is passed in for context,\nused by the optimizer.",
            "line": " cangaja/lib-ext/require.js:1455"
        },
        {
            "message": "Missing item type\nInternal method used by environment adapters to complete a load event.\nA load event could be a script load or just a load pass from a synchronous\nload call.",
            "line": " cangaja/lib-ext/require.js:1467"
        },
        {
            "message": "Missing item type\nConverts a module name to a file path. Supports cases where\nmoduleName may actually be just an URL.\nNote that it **does not** call normalize on the moduleName,\nit is assumed to have already been normalized. This is an\ninternal API, not a public one. Use toUrl for the public API.",
            "line": " cangaja/lib-ext/require.js:1523"
        },
        {
            "message": "Missing item type\nExecutes a module callack function. Broken out as a separate function\nsolely to allow the build system to sequence the files in the built\nlayer in the right sequence.",
            "line": " cangaja/lib-ext/require.js:1594"
        },
        {
            "message": "Missing item type\ncallback for script loads, used to check status of loading.",
            "line": " cangaja/lib-ext/require.js:1605"
        },
        {
            "message": "Missing item type\nCallback for script errors.",
            "line": " cangaja/lib-ext/require.js:1627"
        },
        {
            "message": "Missing item type\nMain entry point.\n\nIf the only argument to require is a string, then the module that\nis represented by that string is fetched for the appropriate context.\n\nIf the first argument is an array, then it will be treated as an array\nof dependency string names to fetch. An optional function callback can\nbe specified to execute when all of those dependencies are available.\n\nMake a local req variable to help Caja compliance (it assumes things\non a require that are not standardized), and to give a short\nname for minification/local scope use.",
            "line": " cangaja/lib-ext/require.js:1642"
        },
        {
            "message": "Missing item type\nSupport require.config() to make it easier to cooperate with other\nAMD loaders on globally agreed names.",
            "line": " cangaja/lib-ext/require.js:1692"
        },
        {
            "message": "Missing item type\nExecute something after the current tick\nof the event loop. Override for other envs\nthat have a better solution than setTimeout.",
            "line": " cangaja/lib-ext/require.js:1700"
        },
        {
            "message": "Missing item type\nExport require as a global, but only if it does not already exist.",
            "line": " cangaja/lib-ext/require.js:1712"
        },
        {
            "message": "Missing item type\nAny errors that require explicitly generates will be passed to this\nfunction. Intercept/override it if you want custom error handling.",
            "line": " cangaja/lib-ext/require.js:1759"
        },
        {
            "message": "Missing item type\nDoes the request to load a module for the browser case.\nMake this a separate function to allow other environments\nto override it.",
            "line": " cangaja/lib-ext/require.js:1768"
        },
        {
            "message": "Missing item type\nThe function that handles definitions of modules. Differs from\nrequire() in that a string for the module should be the first argument,\nand the function to execute after dependencies are loaded should\nreturn a value to define the module corresponding to the first argument's\nname.",
            "line": " cangaja/lib-ext/require.js:1912"
        },
        {
            "message": "Missing item type\nExecutes the text. Normally just uses eval, but can be modified\nto use a better, environment-specific call. Only used for transpiling\nloader plugins, not for plain JS modules.",
            "line": " cangaja/lib-ext/require.js:1985"
        },
        {
            "message": "Missing item type\nSpine Runtime Software License - Version 1.1\n\nCopyright (c) 2013, Esoteric Software\nAll rights reserved.\n\nRedistribution and use in source and binary forms in whole or in part, with\nor without modification, are permitted provided that the following conditions\nare met:\n\n1. A Spine Essential, Professional, Enterprise, or Education License must\n   be purchased from Esoteric Software and the license must remain valid:\n   http://esotericsoftware.com/\n2. Redistributions of source code must retain this license, which is the\n   above copyright notice, this declaration of conditions and the following\n   disclaimer.\n3. Redistributions in binary form must reproduce this license, which is the\n   above copyright notice, this declaration of conditions and the following\n   disclaimer, in the documentation and/or other materials provided with the\n   distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.",
            "line": " cangaja/lib-ext/spine.js:1"
        },
        {
            "message": "Missing item type\ncx1 and cx2 are from 0 to 1, representing the percent of time between the two keyframes. cy1 and cy2 are the percent of",
            "line": " cangaja/lib-ext/spine.js:238"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/lib-ext/spine.js:535"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/lib-ext/spine.js:613"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/lib-ext/spine.js:620"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/lib-ext/spine.js:627"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/lib-ext/spine.js:635"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/lib-ext/spine.js:642"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/lib-ext/spine.js:649"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/lib-ext/spine.js:656"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/lib-ext/spine.js:691"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/lib-ext/spine.js:699"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/lib-ext/spine.js:714"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/lib-ext/spine.js:718"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/lib-ext/spine.js:725"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/lib-ext/spine.js:732"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/lib-ext/spine.js:739"
        },
        {
            "message": "Missing item type\nfrom the new skin are attached if the corresponding attachment from the old skin was attached.",
            "line": " cangaja/lib-ext/spine.js:751"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/lib-ext/spine.js:758"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/lib-ext/spine.js:762"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/lib-ext/spine.js:771"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/lib-ext/spine.js:1082"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/lib-ext/spine.js:1096"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/lib-ext/spine.js:1122"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/lib-ext/spine.js:1612"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/lib-ext/spine.js:1717"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/lib-ext/spine.js:1721"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/lib-ext/spine.js:1737"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/lib-ext/spine.js:1741"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/lib-ext/spine.js:1749"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/lib-ext/spine.js:1757"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/lib-ext/spine.js:1773"
        },
        {
            "message": "Missing item type\nyust calls drawMap ;o)",
            "line": " cangaja/tilemap/map.js:794"
        },
        {
            "message": "Missing item type\nChecks if a external object(s) collides with the areas of the tiled map.\nThis can be elements from an layer or the map itself.",
            "line": " cangaja/tilemap/map.js:914"
        },
        {
            "message": "Missing item type\ngid",
            "line": " cangaja/tilemap/mappoint.js:31"
        }
    ]
}